Version 4.0 HI-TECH Software Intermediate Code
"33 MCAL_layer/CCP/hal_ccp.c
[; ;MCAL_layer/CCP/hal_ccp.c: 33: Std_ReturnType CCP_Initialize(const ccp_t *_ccp_obj){
[c E3042 0 1 .. ]
[n E3042 . CCP1_MODULE CCP2_MODULE  ]
[c E3028 0 1 2 .. ]
[n E3028 . CCP_CAPTURE_MODE_SELECTED CCP_COMPARE_MODE_SELECTED CCP_PWM_MODE_SELECTED  ]
"62 MCAL_layer/CCP/../Interrupt/../GPIO/hal_gpio.h
[s S273 :3 `uc 1 :3 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S273 . port pin direction logic ]
"33 MCAL_layer/CCP/hal_ccp.c
[; ;MCAL_layer/CCP/hal_ccp.c: 33: Std_ReturnType CCP_Initialize(const ccp_t *_ccp_obj){
[c E3046 0 1 2 .. ]
[n E3046 . CCP1_CCP2_TIMER3 CCP1_TIMER1_CCP2_TIMER3 CCP1_CCP2_TIMER1  ]
"133 MCAL_layer/CCP/hal_ccp.h
[; ;MCAL_layer/CCP/hal_ccp.h: 133: typedef struct{
[s S277 `E3042 1 `E3028 1 `uc 1 `S273 1 `E3046 1 `ul 1 `uc 1 `uc 1 ]
[n S277 . ccp_module ccp_mode ccp_mode_variant ccp_pin ccp_capture_timer PWM_Frequency timer2_postscaler_value timer2_prescaler_value ]
"4261 C:/Program Files/Microchip/MPLABX/v6.15/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h
[s S163 :4 `uc 1 :2 `uc 1 :2 `uc 1 ]
[n S163 . CCP1M DC1B P1M ]
"4266
[s S164 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S164 . CCP1M0 CCP1M1 CCP1M2 CCP1M3 CCP1Y CCP1X P1M0 P1M1 ]
"4276
[s S165 :4 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S165 . . DC1B0 DC1B1 ]
"4260
[u S162 `S163 1 `S164 1 `S165 1 ]
[n S162 . . . . ]
"4282
[v _CCP1CONbits `VS162 ~T0 @X0 0 e@4029 ]
"4161
[s S159 :4 `uc 1 :2 `uc 1 ]
[n S159 . CCP2M DC2B ]
"4165
[s S160 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S160 . CCP2M0 CCP2M1 CCP2M2 CCP2M3 CCP2Y CCP2X ]
"4173
[s S161 :4 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S161 . . DC2B0 DC2B1 ]
"4160
[u S158 `S159 1 `S160 1 `S161 1 ]
[n S158 . . . . ]
"4179
[v _CCP2CONbits `VS158 ~T0 @X0 0 e@4026 ]
"21 MCAL_layer/CCP/hal_ccp.c
[; ;MCAL_layer/CCP/hal_ccp.c: 21: static Std_ReturnType CCP_Capture_Mode_Config(const ccp_t *_ccp_obj);
[v _CCP_Capture_Mode_Config `(uc ~T0 @X0 0 sf1`*CS277 ]
"22
[; ;MCAL_layer/CCP/hal_ccp.c: 22: static Std_ReturnType CCP_Compare_Mode_Config(const ccp_t *_ccp_obj);
[v _CCP_Compare_Mode_Config `(uc ~T0 @X0 0 sf1`*CS277 ]
"19
[; ;MCAL_layer/CCP/hal_ccp.c: 19: static void CCP_PWM_Mode_Config(const ccp_t *_ccp_obj);
[v _CCP_PWM_Mode_Config `(v ~T0 @X0 0 sf1`*CS277 ]
"75 MCAL_layer/CCP/../Interrupt/../GPIO/hal_gpio.h
[v _gpio_pin_intialize `(uc ~T0 @X0 0 ef1`*CS273 ]
"18 MCAL_layer/CCP/hal_ccp.c
[; ;MCAL_layer/CCP/hal_ccp.c: 18: static void CCP_Interrupt_Config(const ccp_t *_ccp_obj);
[v _CCP_Interrupt_Config `(v ~T0 @X0 0 sf1`*CS277 ]
"5107 C:/Program Files/Microchip/MPLABX/v6.15/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h
[v _PR2 `Vuc ~T0 @X0 0 e@4043 ]
"4359
[v _CCPR1L `Vuc ~T0 @X0 0 e@4030 ]
"4241
[v _CCPR2L `Vuc ~T0 @X0 0 e@4027 ]
"3535
[s S131 :2 `uc 1 :1 `uc 1 ]
[n S131 . . NOT_T3SYNC ]
"3539
[s S132 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :2 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S132 . TMR3ON TMR3CS nT3SYNC T3CCP1 T3CKPS T3CCP2 RD16 ]
"3548
[s S133 :2 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S133 . . T3SYNC . T3CKPS0 T3CKPS1 ]
"3555
[s S134 :3 `uc 1 :1 `uc 1 :3 `uc 1 :1 `uc 1 ]
[n S134 . . SOSCEN3 . RD163 ]
"3561
[s S135 :7 `uc 1 :1 `uc 1 ]
[n S135 . . T3RD16 ]
"3534
[u S130 `S131 1 `S132 1 `S133 1 `S134 1 `S135 1 ]
[n S130 . . . . . . ]
"3566
[v _T3CONbits `VS130 ~T0 @X0 0 e@4017 ]
"54 C:/Program Files/Microchip/MPLABX/v6.15/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h
[; <" PORTA equ 0F80h ;# ">
"191
[; <" PORTB equ 0F81h ;# ">
"362
[; <" PORTC equ 0F82h ;# ">
"537
[; <" PORTD equ 0F83h ;# ">
"679
[; <" PORTE equ 0F84h ;# ">
"882
[; <" LATA equ 0F89h ;# ">
"994
[; <" LATB equ 0F8Ah ;# ">
"1106
[; <" LATC equ 0F8Bh ;# ">
"1218
[; <" LATD equ 0F8Ch ;# ">
"1330
[; <" LATE equ 0F8Dh ;# ">
"1382
[; <" TRISA equ 0F92h ;# ">
"1387
[; <" DDRA equ 0F92h ;# ">
"1604
[; <" TRISB equ 0F93h ;# ">
"1609
[; <" DDRB equ 0F93h ;# ">
"1826
[; <" TRISC equ 0F94h ;# ">
"1831
[; <" DDRC equ 0F94h ;# ">
"2048
[; <" TRISD equ 0F95h ;# ">
"2053
[; <" DDRD equ 0F95h ;# ">
"2270
[; <" TRISE equ 0F96h ;# ">
"2275
[; <" DDRE equ 0F96h ;# ">
"2434
[; <" OSCTUNE equ 0F9Bh ;# ">
"2499
[; <" PIE1 equ 0F9Dh ;# ">
"2576
[; <" PIR1 equ 0F9Eh ;# ">
"2653
[; <" IPR1 equ 0F9Fh ;# ">
"2730
[; <" PIE2 equ 0FA0h ;# ">
"2796
[; <" PIR2 equ 0FA1h ;# ">
"2862
[; <" IPR2 equ 0FA2h ;# ">
"2928
[; <" EECON1 equ 0FA6h ;# ">
"2994
[; <" EECON2 equ 0FA7h ;# ">
"3001
[; <" EEDATA equ 0FA8h ;# ">
"3008
[; <" EEADR equ 0FA9h ;# ">
"3015
[; <" EEADRH equ 0FAAh ;# ">
"3022
[; <" RCSTA equ 0FABh ;# ">
"3027
[; <" RCSTA1 equ 0FABh ;# ">
"3232
[; <" TXSTA equ 0FACh ;# ">
"3237
[; <" TXSTA1 equ 0FACh ;# ">
"3488
[; <" TXREG equ 0FADh ;# ">
"3493
[; <" TXREG1 equ 0FADh ;# ">
"3500
[; <" RCREG equ 0FAEh ;# ">
"3505
[; <" RCREG1 equ 0FAEh ;# ">
"3512
[; <" SPBRG equ 0FAFh ;# ">
"3517
[; <" SPBRG1 equ 0FAFh ;# ">
"3524
[; <" SPBRGH equ 0FB0h ;# ">
"3531
[; <" T3CON equ 0FB1h ;# ">
"3643
[; <" TMR3 equ 0FB2h ;# ">
"3650
[; <" TMR3L equ 0FB2h ;# ">
"3657
[; <" TMR3H equ 0FB3h ;# ">
"3664
[; <" CMCON equ 0FB4h ;# ">
"3754
[; <" CVRCON equ 0FB5h ;# ">
"3833
[; <" ECCP1AS equ 0FB6h ;# ">
"3915
[; <" PWM1CON equ 0FB7h ;# ">
"3985
[; <" BAUDCON equ 0FB8h ;# ">
"3990
[; <" BAUDCTL equ 0FB8h ;# ">
"4157
[; <" CCP2CON equ 0FBAh ;# ">
"4236
[; <" CCPR2 equ 0FBBh ;# ">
"4243
[; <" CCPR2L equ 0FBBh ;# ">
"4250
[; <" CCPR2H equ 0FBCh ;# ">
"4257
[; <" CCP1CON equ 0FBDh ;# ">
"4354
[; <" CCPR1 equ 0FBEh ;# ">
"4361
[; <" CCPR1L equ 0FBEh ;# ">
"4368
[; <" CCPR1H equ 0FBFh ;# ">
"4375
[; <" ADCON2 equ 0FC0h ;# ">
"4446
[; <" ADCON1 equ 0FC1h ;# ">
"4531
[; <" ADCON0 equ 0FC2h ;# ">
"4650
[; <" ADRES equ 0FC3h ;# ">
"4657
[; <" ADRESL equ 0FC3h ;# ">
"4664
[; <" ADRESH equ 0FC4h ;# ">
"4671
[; <" SSPCON2 equ 0FC5h ;# ">
"4733
[; <" SSPCON1 equ 0FC6h ;# ">
"4803
[; <" SSPSTAT equ 0FC7h ;# ">
"5024
[; <" SSPADD equ 0FC8h ;# ">
"5031
[; <" SSPBUF equ 0FC9h ;# ">
"5038
[; <" T2CON equ 0FCAh ;# ">
"5109
[; <" PR2 equ 0FCBh ;# ">
"5114
[; <" MEMCON equ 0FCBh ;# ">
"5219
[; <" TMR2 equ 0FCCh ;# ">
"5226
[; <" T1CON equ 0FCDh ;# ">
"5329
[; <" TMR1 equ 0FCEh ;# ">
"5336
[; <" TMR1L equ 0FCEh ;# ">
"5343
[; <" TMR1H equ 0FCFh ;# ">
"5350
[; <" RCON equ 0FD0h ;# ">
"5483
[; <" WDTCON equ 0FD1h ;# ">
"5511
[; <" HLVDCON equ 0FD2h ;# ">
"5516
[; <" LVDCON equ 0FD2h ;# ">
"5781
[; <" OSCCON equ 0FD3h ;# ">
"5858
[; <" T0CON equ 0FD5h ;# ">
"5935
[; <" TMR0 equ 0FD6h ;# ">
"5942
[; <" TMR0L equ 0FD6h ;# ">
"5949
[; <" TMR0H equ 0FD7h ;# ">
"5956
[; <" STATUS equ 0FD8h ;# ">
"6027
[; <" FSR2 equ 0FD9h ;# ">
"6034
[; <" FSR2L equ 0FD9h ;# ">
"6041
[; <" FSR2H equ 0FDAh ;# ">
"6048
[; <" PLUSW2 equ 0FDBh ;# ">
"6055
[; <" PREINC2 equ 0FDCh ;# ">
"6062
[; <" POSTDEC2 equ 0FDDh ;# ">
"6069
[; <" POSTINC2 equ 0FDEh ;# ">
"6076
[; <" INDF2 equ 0FDFh ;# ">
"6083
[; <" BSR equ 0FE0h ;# ">
"6090
[; <" FSR1 equ 0FE1h ;# ">
"6097
[; <" FSR1L equ 0FE1h ;# ">
"6104
[; <" FSR1H equ 0FE2h ;# ">
"6111
[; <" PLUSW1 equ 0FE3h ;# ">
"6118
[; <" PREINC1 equ 0FE4h ;# ">
"6125
[; <" POSTDEC1 equ 0FE5h ;# ">
"6132
[; <" POSTINC1 equ 0FE6h ;# ">
"6139
[; <" INDF1 equ 0FE7h ;# ">
"6146
[; <" WREG equ 0FE8h ;# ">
"6158
[; <" FSR0 equ 0FE9h ;# ">
"6165
[; <" FSR0L equ 0FE9h ;# ">
"6172
[; <" FSR0H equ 0FEAh ;# ">
"6179
[; <" PLUSW0 equ 0FEBh ;# ">
"6186
[; <" PREINC0 equ 0FECh ;# ">
"6193
[; <" POSTDEC0 equ 0FEDh ;# ">
"6200
[; <" POSTINC0 equ 0FEEh ;# ">
"6207
[; <" INDF0 equ 0FEFh ;# ">
"6214
[; <" INTCON3 equ 0FF0h ;# ">
"6306
[; <" INTCON2 equ 0FF1h ;# ">
"6376
[; <" INTCON equ 0FF2h ;# ">
"6493
[; <" PROD equ 0FF3h ;# ">
"6500
[; <" PRODL equ 0FF3h ;# ">
"6507
[; <" PRODH equ 0FF4h ;# ">
"6514
[; <" TABLAT equ 0FF5h ;# ">
"6523
[; <" TBLPTR equ 0FF6h ;# ">
"6530
[; <" TBLPTRL equ 0FF6h ;# ">
"6537
[; <" TBLPTRH equ 0FF7h ;# ">
"6544
[; <" TBLPTRU equ 0FF8h ;# ">
"6553
[; <" PCLAT equ 0FF9h ;# ">
"6560
[; <" PC equ 0FF9h ;# ">
"6567
[; <" PCL equ 0FF9h ;# ">
"6574
[; <" PCLATH equ 0FFAh ;# ">
"6581
[; <" PCLATU equ 0FFBh ;# ">
"6588
[; <" STKPTR equ 0FFCh ;# ">
"6694
[; <" TOS equ 0FFDh ;# ">
"6701
[; <" TOSL equ 0FFDh ;# ">
"6708
[; <" TOSH equ 0FFEh ;# ">
"6715
[; <" TOSU equ 0FFFh ;# ">
"33 MCAL_layer/CCP/hal_ccp.c
[; ;MCAL_layer/CCP/hal_ccp.c: 33: Std_ReturnType CCP_Initialize(const ccp_t *_ccp_obj){
[v _CCP_Initialize `(uc ~T0 @X0 1 ef1`*CS277 ]
{
[e :U _CCP_Initialize ]
[v __ccp_obj `*CS277 ~T0 @X0 1 r1 ]
[f ]
"34
[; ;MCAL_layer/CCP/hal_ccp.c: 34:     Std_ReturnType ret = (Std_ReturnType)0x01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"35
[; ;MCAL_layer/CCP/hal_ccp.c: 35:     if(((void*)0) == _ccp_obj)
[e $ ! == -> -> -> 0 `i `*v `*CS277 __ccp_obj 279  ]
"36
[; ;MCAL_layer/CCP/hal_ccp.c: 36:     {
{
"37
[; ;MCAL_layer/CCP/hal_ccp.c: 37:         ret = (Std_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"38
[; ;MCAL_layer/CCP/hal_ccp.c: 38:     }else
}
[e $U 280  ]
[e :U 279 ]
"39
[; ;MCAL_layer/CCP/hal_ccp.c: 39:     {
{
"41
[; ;MCAL_layer/CCP/hal_ccp.c: 41:         if(CCP1_MODULE == _ccp_obj->ccp_module){
[e $ ! == -> . `E3042 0 `ui -> . *U __ccp_obj 0 `ui 281  ]
{
"42
[; ;MCAL_layer/CCP/hal_ccp.c: 42:             (CCP1CONbits.CCP1M = ((uint8_t)0x00));
[e = . . _CCP1CONbits 0 0 -> -> 0 `i `uc ]
"43
[; ;MCAL_layer/CCP/hal_ccp.c: 43:         }
}
[e $U 282  ]
"44
[; ;MCAL_layer/CCP/hal_ccp.c: 44:         else if(CCP2_MODULE == _ccp_obj->ccp_module){
[e :U 281 ]
[e $ ! == -> . `E3042 1 `ui -> . *U __ccp_obj 0 `ui 283  ]
{
"45
[; ;MCAL_layer/CCP/hal_ccp.c: 45:             (CCP2CONbits.CCP2M = ((uint8_t)0x00));
[e = . . _CCP2CONbits 0 0 -> -> 0 `i `uc ]
"46
[; ;MCAL_layer/CCP/hal_ccp.c: 46:         }
}
[e $U 284  ]
"47
[; ;MCAL_layer/CCP/hal_ccp.c: 47:         else{ }
[e :U 283 ]
{
}
[e :U 284 ]
[e :U 282 ]
"49
[; ;MCAL_layer/CCP/hal_ccp.c: 49:         if(CCP_CAPTURE_MODE_SELECTED == _ccp_obj->ccp_mode){
[e $ ! == -> . `E3028 0 `ui -> . *U __ccp_obj 1 `ui 285  ]
{
"50
[; ;MCAL_layer/CCP/hal_ccp.c: 50:             ret = CCP_Capture_Mode_Config(_ccp_obj);
[e = _ret ( _CCP_Capture_Mode_Config (1 __ccp_obj ]
"51
[; ;MCAL_layer/CCP/hal_ccp.c: 51:         }
}
[e $U 286  ]
"53
[; ;MCAL_layer/CCP/hal_ccp.c: 53:         else if(CCP_COMPARE_MODE_SELECTED == _ccp_obj->ccp_mode){
[e :U 285 ]
[e $ ! == -> . `E3028 1 `ui -> . *U __ccp_obj 1 `ui 287  ]
{
"54
[; ;MCAL_layer/CCP/hal_ccp.c: 54:             ret = CCP_Compare_Mode_Config(_ccp_obj);
[e = _ret ( _CCP_Compare_Mode_Config (1 __ccp_obj ]
"55
[; ;MCAL_layer/CCP/hal_ccp.c: 55:         }
}
[e $U 288  ]
"58
[; ;MCAL_layer/CCP/hal_ccp.c: 58:         else if(CCP_PWM_MODE_SELECTED == _ccp_obj->ccp_mode){
[e :U 287 ]
[e $ ! == -> . `E3028 2 `ui -> . *U __ccp_obj 1 `ui 289  ]
{
"59
[; ;MCAL_layer/CCP/hal_ccp.c: 59:             CCP_PWM_Mode_Config(_ccp_obj);
[e ( _CCP_PWM_Mode_Config (1 __ccp_obj ]
"60
[; ;MCAL_layer/CCP/hal_ccp.c: 60:         }
}
[e $U 290  ]
"62
[; ;MCAL_layer/CCP/hal_ccp.c: 62:         else{ }
[e :U 289 ]
{
}
[e :U 290 ]
[e :U 288 ]
[e :U 286 ]
"64
[; ;MCAL_layer/CCP/hal_ccp.c: 64:         ret = gpio_pin_intialize(&(_ccp_obj->ccp_pin));
[e = _ret ( _gpio_pin_intialize (1 &U . *U __ccp_obj 3 ]
"66
[; ;MCAL_layer/CCP/hal_ccp.c: 66:         CCP_Interrupt_Config(_ccp_obj);
[e ( _CCP_Interrupt_Config (1 __ccp_obj ]
"68
[; ;MCAL_layer/CCP/hal_ccp.c: 68:     }
}
[e :U 280 ]
"69
[; ;MCAL_layer/CCP/hal_ccp.c: 69:     return ret;
[e ) _ret ]
[e $UE 278  ]
"70
[; ;MCAL_layer/CCP/hal_ccp.c: 70: }
[e :UE 278 ]
}
"80
[; ;MCAL_layer/CCP/hal_ccp.c: 80: Std_ReturnType CCP_DeInitialize(const ccp_t *_ccp_obj){
[v _CCP_DeInitialize `(uc ~T0 @X0 1 ef1`*CS277 ]
{
[e :U _CCP_DeInitialize ]
[v __ccp_obj `*CS277 ~T0 @X0 1 r1 ]
[f ]
"81
[; ;MCAL_layer/CCP/hal_ccp.c: 81:     Std_ReturnType ret = (Std_ReturnType)0x01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"82
[; ;MCAL_layer/CCP/hal_ccp.c: 82:     if(((void*)0) == _ccp_obj)
[e $ ! == -> -> -> 0 `i `*v `*CS277 __ccp_obj 292  ]
"83
[; ;MCAL_layer/CCP/hal_ccp.c: 83:     {
{
"84
[; ;MCAL_layer/CCP/hal_ccp.c: 84:         ret = (Std_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"85
[; ;MCAL_layer/CCP/hal_ccp.c: 85:     }else
}
[e $U 293  ]
[e :U 292 ]
"86
[; ;MCAL_layer/CCP/hal_ccp.c: 86:     {
{
"87
[; ;MCAL_layer/CCP/hal_ccp.c: 87:         if(CCP1_MODULE == _ccp_obj->ccp_module){
[e $ ! == -> . `E3042 0 `ui -> . *U __ccp_obj 0 `ui 294  ]
{
"88
[; ;MCAL_layer/CCP/hal_ccp.c: 88:             (CCP1CONbits.CCP1M = ((uint8_t)0x00));
[e = . . _CCP1CONbits 0 0 -> -> 0 `i `uc ]
"93
[; ;MCAL_layer/CCP/hal_ccp.c: 93:         }
}
[e $U 295  ]
"94
[; ;MCAL_layer/CCP/hal_ccp.c: 94:         else if(CCP2_MODULE == _ccp_obj->ccp_module){
[e :U 294 ]
[e $ ! == -> . `E3042 1 `ui -> . *U __ccp_obj 0 `ui 296  ]
{
"95
[; ;MCAL_layer/CCP/hal_ccp.c: 95:             (CCP2CONbits.CCP2M = ((uint8_t)0x00));
[e = . . _CCP2CONbits 0 0 -> -> 0 `i `uc ]
"100
[; ;MCAL_layer/CCP/hal_ccp.c: 100:         }
}
[e $U 297  ]
"101
[; ;MCAL_layer/CCP/hal_ccp.c: 101:         else{}
[e :U 296 ]
{
}
[e :U 297 ]
[e :U 295 ]
"102
[; ;MCAL_layer/CCP/hal_ccp.c: 102:     }
}
[e :U 293 ]
"103
[; ;MCAL_layer/CCP/hal_ccp.c: 103:     return ret;
[e ) _ret ]
[e $UE 291  ]
"104
[; ;MCAL_layer/CCP/hal_ccp.c: 104: }
[e :UE 291 ]
}
"219
[; ;MCAL_layer/CCP/hal_ccp.c: 219: Std_ReturnType CCP_PWM_Set_Duty(const ccp_t *_ccp_obj, const uint8_t _duty){
[v _CCP_PWM_Set_Duty `(uc ~T0 @X0 1 ef2`*CS277`Cuc ]
{
[e :U _CCP_PWM_Set_Duty ]
[v __ccp_obj `*CS277 ~T0 @X0 1 r1 ]
[v __duty `Cuc ~T0 @X0 1 r2 ]
[f ]
"220
[; ;MCAL_layer/CCP/hal_ccp.c: 220:     Std_ReturnType ret = (Std_ReturnType)0x01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"221
[; ;MCAL_layer/CCP/hal_ccp.c: 221:     uint16_t l_duty_temp = 0x00;
[v _l_duty_temp `us ~T0 @X0 1 a ]
[e = _l_duty_temp -> -> 0 `i `us ]
"222
[; ;MCAL_layer/CCP/hal_ccp.c: 222:     if(((void*)0) == _ccp_obj)
[e $ ! == -> -> -> 0 `i `*v `*CS277 __ccp_obj 299  ]
"223
[; ;MCAL_layer/CCP/hal_ccp.c: 223:     {
{
"224
[; ;MCAL_layer/CCP/hal_ccp.c: 224:         ret = (Std_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"225
[; ;MCAL_layer/CCP/hal_ccp.c: 225:     }else
}
[e $U 300  ]
[e :U 299 ]
"226
[; ;MCAL_layer/CCP/hal_ccp.c: 226:     {
{
"227
[; ;MCAL_layer/CCP/hal_ccp.c: 227:         l_duty_temp = (uint16_t)((float)4 * ((float)PR2 + 1.0) * ((float)_duty / 100.0));
[e = _l_duty_temp -> * * -> -> -> 4 `i `f `d + -> -> _PR2 `f `d .1.0 / -> -> __duty `f `d .100.0 `us ]
"228
[; ;MCAL_layer/CCP/hal_ccp.c: 228:         if(CCP1_MODULE == _ccp_obj->ccp_module){
[e $ ! == -> . `E3042 0 `ui -> . *U __ccp_obj 0 `ui 301  ]
{
"229
[; ;MCAL_layer/CCP/hal_ccp.c: 229:             CCP1CONbits.DC1B = (uint8_t)(l_duty_temp & 0x0003);
[e = . . _CCP1CONbits 0 1 -> & -> _l_duty_temp `ui -> -> 3 `i `ui `uc ]
"230
[; ;MCAL_layer/CCP/hal_ccp.c: 230:             CCPR1L = (uint8_t)(l_duty_temp >> 2);
[e = _CCPR1L -> >> -> _l_duty_temp `ui -> 2 `i `uc ]
"231
[; ;MCAL_layer/CCP/hal_ccp.c: 231:         }
}
[e $U 302  ]
"232
[; ;MCAL_layer/CCP/hal_ccp.c: 232:         else if(CCP2_MODULE == _ccp_obj->ccp_module){
[e :U 301 ]
[e $ ! == -> . `E3042 1 `ui -> . *U __ccp_obj 0 `ui 303  ]
{
"233
[; ;MCAL_layer/CCP/hal_ccp.c: 233:             CCP2CONbits.DC2B = (uint8_t)(l_duty_temp & 0x0003);
[e = . . _CCP2CONbits 0 1 -> & -> _l_duty_temp `ui -> -> 3 `i `ui `uc ]
"234
[; ;MCAL_layer/CCP/hal_ccp.c: 234:             CCPR2L = (uint8_t)(l_duty_temp >> 2);
[e = _CCPR2L -> >> -> _l_duty_temp `ui -> 2 `i `uc ]
"235
[; ;MCAL_layer/CCP/hal_ccp.c: 235:         }
}
[e :U 303 ]
[e :U 302 ]
"236
[; ;MCAL_layer/CCP/hal_ccp.c: 236:     }
}
[e :U 300 ]
"237
[; ;MCAL_layer/CCP/hal_ccp.c: 237:     return ret;
[e ) _ret ]
[e $UE 298  ]
"238
[; ;MCAL_layer/CCP/hal_ccp.c: 238: }
[e :UE 298 ]
}
"246
[; ;MCAL_layer/CCP/hal_ccp.c: 246: Std_ReturnType CCP_PWM_Start(const ccp_t *_ccp_obj){
[v _CCP_PWM_Start `(uc ~T0 @X0 1 ef1`*CS277 ]
{
[e :U _CCP_PWM_Start ]
[v __ccp_obj `*CS277 ~T0 @X0 1 r1 ]
[f ]
"247
[; ;MCAL_layer/CCP/hal_ccp.c: 247:     Std_ReturnType ret = (Std_ReturnType)0x01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"248
[; ;MCAL_layer/CCP/hal_ccp.c: 248:     if(((void*)0) == _ccp_obj)
[e $ ! == -> -> -> 0 `i `*v `*CS277 __ccp_obj 305  ]
"249
[; ;MCAL_layer/CCP/hal_ccp.c: 249:     {
{
"250
[; ;MCAL_layer/CCP/hal_ccp.c: 250:         ret = (Std_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"251
[; ;MCAL_layer/CCP/hal_ccp.c: 251:     }else
}
[e $U 306  ]
[e :U 305 ]
"252
[; ;MCAL_layer/CCP/hal_ccp.c: 252:     {
{
"253
[; ;MCAL_layer/CCP/hal_ccp.c: 253:         if(CCP1_MODULE == _ccp_obj->ccp_module){
[e $ ! == -> . `E3042 0 `ui -> . *U __ccp_obj 0 `ui 307  ]
{
"254
[; ;MCAL_layer/CCP/hal_ccp.c: 254:             CCP1CONbits.CCP1M = ((uint8_t)0x0C);
[e = . . _CCP1CONbits 0 0 -> -> 12 `i `uc ]
"255
[; ;MCAL_layer/CCP/hal_ccp.c: 255:         }
}
[e $U 308  ]
"256
[; ;MCAL_layer/CCP/hal_ccp.c: 256:         else if(CCP2_MODULE == _ccp_obj->ccp_module){
[e :U 307 ]
[e $ ! == -> . `E3042 1 `ui -> . *U __ccp_obj 0 `ui 309  ]
{
"257
[; ;MCAL_layer/CCP/hal_ccp.c: 257:             CCP2CONbits.CCP2M = ((uint8_t)0x0C);
[e = . . _CCP2CONbits 0 0 -> -> 12 `i `uc ]
"258
[; ;MCAL_layer/CCP/hal_ccp.c: 258:         }
}
[e $U 310  ]
"259
[; ;MCAL_layer/CCP/hal_ccp.c: 259:         else{ }
[e :U 309 ]
{
}
[e :U 310 ]
[e :U 308 ]
"260
[; ;MCAL_layer/CCP/hal_ccp.c: 260:     }
}
[e :U 306 ]
"261
[; ;MCAL_layer/CCP/hal_ccp.c: 261:     return ret;
[e ) _ret ]
[e $UE 304  ]
"262
[; ;MCAL_layer/CCP/hal_ccp.c: 262: }
[e :UE 304 ]
}
"270
[; ;MCAL_layer/CCP/hal_ccp.c: 270: Std_ReturnType CCP_PWM_Stop(const ccp_t *_ccp_obj){
[v _CCP_PWM_Stop `(uc ~T0 @X0 1 ef1`*CS277 ]
{
[e :U _CCP_PWM_Stop ]
[v __ccp_obj `*CS277 ~T0 @X0 1 r1 ]
[f ]
"271
[; ;MCAL_layer/CCP/hal_ccp.c: 271:     Std_ReturnType ret = (Std_ReturnType)0x01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"272
[; ;MCAL_layer/CCP/hal_ccp.c: 272:     if(((void*)0) == _ccp_obj)
[e $ ! == -> -> -> 0 `i `*v `*CS277 __ccp_obj 312  ]
"273
[; ;MCAL_layer/CCP/hal_ccp.c: 273:     {
{
"274
[; ;MCAL_layer/CCP/hal_ccp.c: 274:         ret = (Std_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"275
[; ;MCAL_layer/CCP/hal_ccp.c: 275:     }else
}
[e $U 313  ]
[e :U 312 ]
"276
[; ;MCAL_layer/CCP/hal_ccp.c: 276:     {
{
"277
[; ;MCAL_layer/CCP/hal_ccp.c: 277:         if(CCP1_MODULE == _ccp_obj->ccp_module){
[e $ ! == -> . `E3042 0 `ui -> . *U __ccp_obj 0 `ui 314  ]
{
"278
[; ;MCAL_layer/CCP/hal_ccp.c: 278:             CCP1CONbits.CCP1M = ((uint8_t)0x00);
[e = . . _CCP1CONbits 0 0 -> -> 0 `i `uc ]
"279
[; ;MCAL_layer/CCP/hal_ccp.c: 279:         }
}
[e $U 315  ]
"280
[; ;MCAL_layer/CCP/hal_ccp.c: 280:         else if(CCP2_MODULE == _ccp_obj->ccp_module){
[e :U 314 ]
[e $ ! == -> . `E3042 1 `ui -> . *U __ccp_obj 0 `ui 316  ]
{
"281
[; ;MCAL_layer/CCP/hal_ccp.c: 281:             CCP2CONbits.CCP2M = ((uint8_t)0x00);
[e = . . _CCP2CONbits 0 0 -> -> 0 `i `uc ]
"282
[; ;MCAL_layer/CCP/hal_ccp.c: 282:         }
}
[e $U 317  ]
"283
[; ;MCAL_layer/CCP/hal_ccp.c: 283:         else{ }
[e :U 316 ]
{
}
[e :U 317 ]
[e :U 315 ]
"284
[; ;MCAL_layer/CCP/hal_ccp.c: 284:     }
}
[e :U 313 ]
"285
[; ;MCAL_layer/CCP/hal_ccp.c: 285:     return ret;
[e ) _ret ]
[e $UE 311  ]
"286
[; ;MCAL_layer/CCP/hal_ccp.c: 286: }
[e :UE 311 ]
}
"289
[; ;MCAL_layer/CCP/hal_ccp.c: 289: static void CCP_Interrupt_Config(const ccp_t *_ccp_obj){
[v _CCP_Interrupt_Config `(v ~T0 @X0 1 sf1`*CS277 ]
{
[e :U _CCP_Interrupt_Config ]
[v __ccp_obj `*CS277 ~T0 @X0 1 r1 ]
[f ]
"345
[; ;MCAL_layer/CCP/hal_ccp.c: 345: }
[e :UE 318 ]
}
"348
[; ;MCAL_layer/CCP/hal_ccp.c: 348: static void CCP_PWM_Mode_Config(const ccp_t *_ccp_obj){
[v _CCP_PWM_Mode_Config `(v ~T0 @X0 1 sf1`*CS277 ]
{
[e :U _CCP_PWM_Mode_Config ]
[v __ccp_obj `*CS277 ~T0 @X0 1 r1 ]
[f ]
"350
[; ;MCAL_layer/CCP/hal_ccp.c: 350:     PR2 = (uint8_t)(((float)8000000UL / ((float)_ccp_obj->PWM_Frequency * 4.0 * (float)_ccp_obj->timer2_prescaler_value *
[e = _PR2 -> - / -> -> -> 8000000 `ul `f `d * * * -> -> . *U __ccp_obj 5 `f `d .4.0 -> -> . *U __ccp_obj 7 `f `d -> -> . *U __ccp_obj 6 `f `d -> -> 1 `i `d `uc ]
"352
[; ;MCAL_layer/CCP/hal_ccp.c: 352:     if(CCP1_MODULE == _ccp_obj->ccp_module){
[e $ ! == -> . `E3042 0 `ui -> . *U __ccp_obj 0 `ui 320  ]
{
"353
[; ;MCAL_layer/CCP/hal_ccp.c: 353:         if(((uint8_t)0x0C) == _ccp_obj->ccp_mode_variant){
[e $ ! == -> -> -> 12 `i `uc `i -> . *U __ccp_obj 2 `i 321  ]
{
"354
[; ;MCAL_layer/CCP/hal_ccp.c: 354:             (CCP1CONbits.CCP1M = ((uint8_t)0x0C));
[e = . . _CCP1CONbits 0 0 -> -> 12 `i `uc ]
"355
[; ;MCAL_layer/CCP/hal_ccp.c: 355:         }
}
[e $U 322  ]
"356
[; ;MCAL_layer/CCP/hal_ccp.c: 356:         else { }
[e :U 321 ]
{
}
[e :U 322 ]
"357
[; ;MCAL_layer/CCP/hal_ccp.c: 357:     }
}
[e $U 323  ]
"358
[; ;MCAL_layer/CCP/hal_ccp.c: 358:     else if(CCP2_MODULE == _ccp_obj->ccp_module){
[e :U 320 ]
[e $ ! == -> . `E3042 1 `ui -> . *U __ccp_obj 0 `ui 324  ]
{
"359
[; ;MCAL_layer/CCP/hal_ccp.c: 359:         if(((uint8_t)0x0C) == _ccp_obj->ccp_mode_variant){
[e $ ! == -> -> -> 12 `i `uc `i -> . *U __ccp_obj 2 `i 325  ]
{
"360
[; ;MCAL_layer/CCP/hal_ccp.c: 360:             (CCP2CONbits.CCP2M = ((uint8_t)0x0C));
[e = . . _CCP2CONbits 0 0 -> -> 12 `i `uc ]
"361
[; ;MCAL_layer/CCP/hal_ccp.c: 361:         }
}
[e $U 326  ]
"362
[; ;MCAL_layer/CCP/hal_ccp.c: 362:         else { }
[e :U 325 ]
{
}
[e :U 326 ]
"363
[; ;MCAL_layer/CCP/hal_ccp.c: 363:     }
}
[e $U 327  ]
"364
[; ;MCAL_layer/CCP/hal_ccp.c: 364:     else{ }
[e :U 324 ]
{
}
[e :U 327 ]
[e :U 323 ]
"365
[; ;MCAL_layer/CCP/hal_ccp.c: 365: }
[e :UE 319 ]
}
"372
[; ;MCAL_layer/CCP/hal_ccp.c: 372: static void CCP_Mode_Timer_Select(const ccp_t *_ccp_obj){
[v _CCP_Mode_Timer_Select `(v ~T0 @X0 1 sf1`*CS277 ]
{
[e :U _CCP_Mode_Timer_Select ]
[v __ccp_obj `*CS277 ~T0 @X0 1 r1 ]
[f ]
"373
[; ;MCAL_layer/CCP/hal_ccp.c: 373:     if(CCP1_CCP2_TIMER3 == _ccp_obj->ccp_capture_timer){
[e $ ! == -> . `E3046 0 `ui -> . *U __ccp_obj 4 `ui 329  ]
{
"375
[; ;MCAL_layer/CCP/hal_ccp.c: 375:         T3CONbits.T3CCP1 = 0;
[e = . . _T3CONbits 1 3 -> -> 0 `i `uc ]
"376
[; ;MCAL_layer/CCP/hal_ccp.c: 376:         T3CONbits.T3CCP2 = 1;
[e = . . _T3CONbits 1 5 -> -> 1 `i `uc ]
"377
[; ;MCAL_layer/CCP/hal_ccp.c: 377:     }
}
[e $U 330  ]
"378
[; ;MCAL_layer/CCP/hal_ccp.c: 378:     else if(CCP1_TIMER1_CCP2_TIMER3 == _ccp_obj->ccp_capture_timer){
[e :U 329 ]
[e $ ! == -> . `E3046 1 `ui -> . *U __ccp_obj 4 `ui 331  ]
{
"381
[; ;MCAL_layer/CCP/hal_ccp.c: 381:         T3CONbits.T3CCP1 = 1;
[e = . . _T3CONbits 1 3 -> -> 1 `i `uc ]
"382
[; ;MCAL_layer/CCP/hal_ccp.c: 382:         T3CONbits.T3CCP2 = 0;
[e = . . _T3CONbits 1 5 -> -> 0 `i `uc ]
"383
[; ;MCAL_layer/CCP/hal_ccp.c: 383:     }
}
[e $U 332  ]
"384
[; ;MCAL_layer/CCP/hal_ccp.c: 384:     else if(CCP1_CCP2_TIMER1 == _ccp_obj->ccp_capture_timer){
[e :U 331 ]
[e $ ! == -> . `E3046 2 `ui -> . *U __ccp_obj 4 `ui 333  ]
{
"386
[; ;MCAL_layer/CCP/hal_ccp.c: 386:         T3CONbits.T3CCP1 = 0;
[e = . . _T3CONbits 1 3 -> -> 0 `i `uc ]
"387
[; ;MCAL_layer/CCP/hal_ccp.c: 387:         T3CONbits.T3CCP2 = 0;
[e = . . _T3CONbits 1 5 -> -> 0 `i `uc ]
"388
[; ;MCAL_layer/CCP/hal_ccp.c: 388:     }
}
[e $U 334  ]
"389
[; ;MCAL_layer/CCP/hal_ccp.c: 389:     else{ }
[e :U 333 ]
{
}
[e :U 334 ]
[e :U 332 ]
[e :U 330 ]
"390
[; ;MCAL_layer/CCP/hal_ccp.c: 390: }
[e :UE 328 ]
}
"402
[; ;MCAL_layer/CCP/hal_ccp.c: 402: static Std_ReturnType CCP_Capture_Mode_Config(const ccp_t *_ccp_obj){
[v _CCP_Capture_Mode_Config `(uc ~T0 @X0 1 sf1`*CS277 ]
{
[e :U _CCP_Capture_Mode_Config ]
[v __ccp_obj `*CS277 ~T0 @X0 1 r1 ]
[f ]
"403
[; ;MCAL_layer/CCP/hal_ccp.c: 403:     Std_ReturnType ret = (Std_ReturnType)0x01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"404
[; ;MCAL_layer/CCP/hal_ccp.c: 404:     if(CCP1_MODULE == _ccp_obj->ccp_module){
[e $ ! == -> . `E3042 0 `ui -> . *U __ccp_obj 0 `ui 336  ]
{
"406
[; ;MCAL_layer/CCP/hal_ccp.c: 406:         switch(_ccp_obj->ccp_mode_variant){
[e $U 338  ]
{
"407
[; ;MCAL_layer/CCP/hal_ccp.c: 407:             case ((uint8_t)0x04):
[e :U 339 ]
"408
[; ;MCAL_layer/CCP/hal_ccp.c: 408:                 (CCP1CONbits.CCP1M = ((uint8_t)0x04));
[e = . . _CCP1CONbits 0 0 -> -> 4 `i `uc ]
"409
[; ;MCAL_layer/CCP/hal_ccp.c: 409:                 break;
[e $U 337  ]
"410
[; ;MCAL_layer/CCP/hal_ccp.c: 410:             case ((uint8_t)0x05):
[e :U 340 ]
"411
[; ;MCAL_layer/CCP/hal_ccp.c: 411:                 (CCP1CONbits.CCP1M = ((uint8_t)0x05));
[e = . . _CCP1CONbits 0 0 -> -> 5 `i `uc ]
"412
[; ;MCAL_layer/CCP/hal_ccp.c: 412:                 break;
[e $U 337  ]
"413
[; ;MCAL_layer/CCP/hal_ccp.c: 413:             case ((uint8_t)0x06):
[e :U 341 ]
"414
[; ;MCAL_layer/CCP/hal_ccp.c: 414:                 (CCP1CONbits.CCP1M = ((uint8_t)0x06));
[e = . . _CCP1CONbits 0 0 -> -> 6 `i `uc ]
"415
[; ;MCAL_layer/CCP/hal_ccp.c: 415:                 break;
[e $U 337  ]
"416
[; ;MCAL_layer/CCP/hal_ccp.c: 416:             case ((uint8_t)0x07):
[e :U 342 ]
"417
[; ;MCAL_layer/CCP/hal_ccp.c: 417:                 (CCP1CONbits.CCP1M = ((uint8_t)0x07));
[e = . . _CCP1CONbits 0 0 -> -> 7 `i `uc ]
"418
[; ;MCAL_layer/CCP/hal_ccp.c: 418:                 break;
[e $U 337  ]
"419
[; ;MCAL_layer/CCP/hal_ccp.c: 419:             default : ret = (Std_ReturnType)0x00;
[e :U 343 ]
[e = _ret -> -> 0 `i `uc ]
"420
[; ;MCAL_layer/CCP/hal_ccp.c: 420:         }
}
[e $U 337  ]
[e :U 338 ]
[e [\ -> . *U __ccp_obj 2 `i , $ -> -> -> 4 `i `uc `i 339
 , $ -> -> -> 5 `i `uc `i 340
 , $ -> -> -> 6 `i `uc `i 341
 , $ -> -> -> 7 `i `uc `i 342
 343 ]
[e :U 337 ]
"421
[; ;MCAL_layer/CCP/hal_ccp.c: 421:     }
}
[e $U 344  ]
"422
[; ;MCAL_layer/CCP/hal_ccp.c: 422:     else if(CCP2_MODULE == _ccp_obj->ccp_module){
[e :U 336 ]
[e $ ! == -> . `E3042 1 `ui -> . *U __ccp_obj 0 `ui 345  ]
{
"424
[; ;MCAL_layer/CCP/hal_ccp.c: 424:         switch(_ccp_obj->ccp_mode_variant){
[e $U 347  ]
{
"425
[; ;MCAL_layer/CCP/hal_ccp.c: 425:             case ((uint8_t)0x04):
[e :U 348 ]
"426
[; ;MCAL_layer/CCP/hal_ccp.c: 426:                 (CCP2CONbits.CCP2M = ((uint8_t)0x04));
[e = . . _CCP2CONbits 0 0 -> -> 4 `i `uc ]
"427
[; ;MCAL_layer/CCP/hal_ccp.c: 427:                 break;
[e $U 346  ]
"428
[; ;MCAL_layer/CCP/hal_ccp.c: 428:             case ((uint8_t)0x05):
[e :U 349 ]
"429
[; ;MCAL_layer/CCP/hal_ccp.c: 429:                 (CCP2CONbits.CCP2M = ((uint8_t)0x05));
[e = . . _CCP2CONbits 0 0 -> -> 5 `i `uc ]
"430
[; ;MCAL_layer/CCP/hal_ccp.c: 430:                 break;
[e $U 346  ]
"431
[; ;MCAL_layer/CCP/hal_ccp.c: 431:             case ((uint8_t)0x06):
[e :U 350 ]
"432
[; ;MCAL_layer/CCP/hal_ccp.c: 432:                 (CCP2CONbits.CCP2M = ((uint8_t)0x06));
[e = . . _CCP2CONbits 0 0 -> -> 6 `i `uc ]
"433
[; ;MCAL_layer/CCP/hal_ccp.c: 433:                 break;
[e $U 346  ]
"434
[; ;MCAL_layer/CCP/hal_ccp.c: 434:             case ((uint8_t)0x07):
[e :U 351 ]
"435
[; ;MCAL_layer/CCP/hal_ccp.c: 435:                 (CCP2CONbits.CCP2M = ((uint8_t)0x07));
[e = . . _CCP2CONbits 0 0 -> -> 7 `i `uc ]
"436
[; ;MCAL_layer/CCP/hal_ccp.c: 436:                 break;
[e $U 346  ]
"437
[; ;MCAL_layer/CCP/hal_ccp.c: 437:             default : ret = (Std_ReturnType)0x00;
[e :U 352 ]
[e = _ret -> -> 0 `i `uc ]
"438
[; ;MCAL_layer/CCP/hal_ccp.c: 438:         }
}
[e $U 346  ]
[e :U 347 ]
[e [\ -> . *U __ccp_obj 2 `i , $ -> -> -> 4 `i `uc `i 348
 , $ -> -> -> 5 `i `uc `i 349
 , $ -> -> -> 6 `i `uc `i 350
 , $ -> -> -> 7 `i `uc `i 351
 352 ]
[e :U 346 ]
"439
[; ;MCAL_layer/CCP/hal_ccp.c: 439:     }
}
[e $U 353  ]
"440
[; ;MCAL_layer/CCP/hal_ccp.c: 440:     else{ }
[e :U 345 ]
{
}
[e :U 353 ]
[e :U 344 ]
"442
[; ;MCAL_layer/CCP/hal_ccp.c: 442:     CCP_Mode_Timer_Select(_ccp_obj);
[e ( _CCP_Mode_Timer_Select (1 __ccp_obj ]
"444
[; ;MCAL_layer/CCP/hal_ccp.c: 444:     return ret;
[e ) _ret ]
[e $UE 335  ]
"445
[; ;MCAL_layer/CCP/hal_ccp.c: 445: }
[e :UE 335 ]
}
"453
[; ;MCAL_layer/CCP/hal_ccp.c: 453: static Std_ReturnType CCP_Compare_Mode_Config(const ccp_t *_ccp_obj){
[v _CCP_Compare_Mode_Config `(uc ~T0 @X0 1 sf1`*CS277 ]
{
[e :U _CCP_Compare_Mode_Config ]
[v __ccp_obj `*CS277 ~T0 @X0 1 r1 ]
[f ]
"454
[; ;MCAL_layer/CCP/hal_ccp.c: 454:     Std_ReturnType ret = (Std_ReturnType)0x01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"455
[; ;MCAL_layer/CCP/hal_ccp.c: 455:     if(CCP1_MODULE == _ccp_obj->ccp_module){
[e $ ! == -> . `E3042 0 `ui -> . *U __ccp_obj 0 `ui 355  ]
{
"457
[; ;MCAL_layer/CCP/hal_ccp.c: 457:         switch(_ccp_obj->ccp_mode_variant){
[e $U 357  ]
{
"458
[; ;MCAL_layer/CCP/hal_ccp.c: 458:             case ((uint8_t)0x08):
[e :U 358 ]
"459
[; ;MCAL_layer/CCP/hal_ccp.c: 459:                 (CCP1CONbits.CCP1M = ((uint8_t)0x08));
[e = . . _CCP1CONbits 0 0 -> -> 8 `i `uc ]
"460
[; ;MCAL_layer/CCP/hal_ccp.c: 460:                 break;
[e $U 356  ]
"461
[; ;MCAL_layer/CCP/hal_ccp.c: 461:             case ((uint8_t)0x09):
[e :U 359 ]
"462
[; ;MCAL_layer/CCP/hal_ccp.c: 462:                 (CCP1CONbits.CCP1M = ((uint8_t)0x09));
[e = . . _CCP1CONbits 0 0 -> -> 9 `i `uc ]
"463
[; ;MCAL_layer/CCP/hal_ccp.c: 463:                 break;
[e $U 356  ]
"464
[; ;MCAL_layer/CCP/hal_ccp.c: 464:             case ((uint8_t)0x02):
[e :U 360 ]
"465
[; ;MCAL_layer/CCP/hal_ccp.c: 465:                 (CCP1CONbits.CCP1M = ((uint8_t)0x02));
[e = . . _CCP1CONbits 0 0 -> -> 2 `i `uc ]
"466
[; ;MCAL_layer/CCP/hal_ccp.c: 466:                 break;
[e $U 356  ]
"467
[; ;MCAL_layer/CCP/hal_ccp.c: 467:             case ((uint8_t)0x0A):
[e :U 361 ]
"468
[; ;MCAL_layer/CCP/hal_ccp.c: 468:                 (CCP1CONbits.CCP1M = ((uint8_t)0x0A));
[e = . . _CCP1CONbits 0 0 -> -> 10 `i `uc ]
"469
[; ;MCAL_layer/CCP/hal_ccp.c: 469:                 break;
[e $U 356  ]
"470
[; ;MCAL_layer/CCP/hal_ccp.c: 470:             case ((uint8_t)0x0B):
[e :U 362 ]
"471
[; ;MCAL_layer/CCP/hal_ccp.c: 471:                 (CCP1CONbits.CCP1M = ((uint8_t)0x0B));
[e = . . _CCP1CONbits 0 0 -> -> 11 `i `uc ]
"472
[; ;MCAL_layer/CCP/hal_ccp.c: 472:                 break;
[e $U 356  ]
"473
[; ;MCAL_layer/CCP/hal_ccp.c: 473:             default : ret = (Std_ReturnType)0x00;
[e :U 363 ]
[e = _ret -> -> 0 `i `uc ]
"474
[; ;MCAL_layer/CCP/hal_ccp.c: 474:         }
}
[e $U 356  ]
[e :U 357 ]
[e [\ -> . *U __ccp_obj 2 `i , $ -> -> -> 8 `i `uc `i 358
 , $ -> -> -> 9 `i `uc `i 359
 , $ -> -> -> 2 `i `uc `i 360
 , $ -> -> -> 10 `i `uc `i 361
 , $ -> -> -> 11 `i `uc `i 362
 363 ]
[e :U 356 ]
"475
[; ;MCAL_layer/CCP/hal_ccp.c: 475:     }
}
[e $U 364  ]
"476
[; ;MCAL_layer/CCP/hal_ccp.c: 476:     else if(CCP2_MODULE == _ccp_obj->ccp_module){
[e :U 355 ]
[e $ ! == -> . `E3042 1 `ui -> . *U __ccp_obj 0 `ui 365  ]
{
"477
[; ;MCAL_layer/CCP/hal_ccp.c: 477:         switch(_ccp_obj->ccp_mode_variant){
[e $U 367  ]
{
"478
[; ;MCAL_layer/CCP/hal_ccp.c: 478:             case ((uint8_t)0x08):
[e :U 368 ]
"479
[; ;MCAL_layer/CCP/hal_ccp.c: 479:                 (CCP2CONbits.CCP2M = ((uint8_t)0x08));
[e = . . _CCP2CONbits 0 0 -> -> 8 `i `uc ]
"480
[; ;MCAL_layer/CCP/hal_ccp.c: 480:                 break;
[e $U 366  ]
"481
[; ;MCAL_layer/CCP/hal_ccp.c: 481:             case ((uint8_t)0x09):
[e :U 369 ]
"482
[; ;MCAL_layer/CCP/hal_ccp.c: 482:                 (CCP2CONbits.CCP2M = ((uint8_t)0x09));
[e = . . _CCP2CONbits 0 0 -> -> 9 `i `uc ]
"483
[; ;MCAL_layer/CCP/hal_ccp.c: 483:                 break;
[e $U 366  ]
"484
[; ;MCAL_layer/CCP/hal_ccp.c: 484:             case ((uint8_t)0x02):
[e :U 370 ]
"485
[; ;MCAL_layer/CCP/hal_ccp.c: 485:                 (CCP2CONbits.CCP2M = ((uint8_t)0x02));
[e = . . _CCP2CONbits 0 0 -> -> 2 `i `uc ]
"486
[; ;MCAL_layer/CCP/hal_ccp.c: 486:                 break;
[e $U 366  ]
"487
[; ;MCAL_layer/CCP/hal_ccp.c: 487:             case ((uint8_t)0x0A):
[e :U 371 ]
"488
[; ;MCAL_layer/CCP/hal_ccp.c: 488:                 (CCP2CONbits.CCP2M = ((uint8_t)0x0A));
[e = . . _CCP2CONbits 0 0 -> -> 10 `i `uc ]
"489
[; ;MCAL_layer/CCP/hal_ccp.c: 489:                 break;
[e $U 366  ]
"490
[; ;MCAL_layer/CCP/hal_ccp.c: 490:             case ((uint8_t)0x0B):
[e :U 372 ]
"491
[; ;MCAL_layer/CCP/hal_ccp.c: 491:                 (CCP2CONbits.CCP2M = ((uint8_t)0x0B));
[e = . . _CCP2CONbits 0 0 -> -> 11 `i `uc ]
"492
[; ;MCAL_layer/CCP/hal_ccp.c: 492:                 break;
[e $U 366  ]
"493
[; ;MCAL_layer/CCP/hal_ccp.c: 493:             default : ret = (Std_ReturnType)0x00;
[e :U 373 ]
[e = _ret -> -> 0 `i `uc ]
"494
[; ;MCAL_layer/CCP/hal_ccp.c: 494:         }
}
[e $U 366  ]
[e :U 367 ]
[e [\ -> . *U __ccp_obj 2 `i , $ -> -> -> 8 `i `uc `i 368
 , $ -> -> -> 9 `i `uc `i 369
 , $ -> -> -> 2 `i `uc `i 370
 , $ -> -> -> 10 `i `uc `i 371
 , $ -> -> -> 11 `i `uc `i 372
 373 ]
[e :U 366 ]
"495
[; ;MCAL_layer/CCP/hal_ccp.c: 495:     }
}
[e $U 374  ]
"496
[; ;MCAL_layer/CCP/hal_ccp.c: 496:     else{ }
[e :U 365 ]
{
}
[e :U 374 ]
[e :U 364 ]
"498
[; ;MCAL_layer/CCP/hal_ccp.c: 498:     CCP_Mode_Timer_Select(_ccp_obj);
[e ( _CCP_Mode_Timer_Select (1 __ccp_obj ]
"500
[; ;MCAL_layer/CCP/hal_ccp.c: 500:     return ret;
[e ) _ret ]
[e $UE 354  ]
"501
[; ;MCAL_layer/CCP/hal_ccp.c: 501: }
[e :UE 354 ]
}
