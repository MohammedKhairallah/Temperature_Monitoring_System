

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sun Jan 07 18:50:07 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,inline
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,inline
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1,inline
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    70                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    71                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    72                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    73   000000                     
    74                           ; Generated 23/03/2023 GMT
    75                           ; 
    76                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    77                           ; All rights reserved.
    78                           ; 
    79                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    80                           ; 
    81                           ; Redistribution and use in source and binary forms, with or without modification, are
    82                           ; permitted provided that the following conditions are met:
    83                           ; 
    84                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    85                           ;        conditions and the following disclaimer.
    86                           ; 
    87                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    88                           ;        of conditions and the following disclaimer in the documentation and/or other
    89                           ;        materials provided with the distribution. Publication is not required when
    90                           ;        this file is used in an embedded application.
    91                           ; 
    92                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    93                           ;        software without specific prior written permission.
    94                           ; 
    95                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    96                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    97                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    98                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    99                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   100                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   101                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   102                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   103                           ; 
   104                           ; 
   105                           ; Code-generator required, PIC18F4620 Definitions
   106                           ; 
   107                           ; SFR Addresses
   108   000000                     
   109                           	psect	idataCOMRAM
   110   0032C0                     __pidataCOMRAM:
   111                           	callstack 0
   112                           
   113                           ;initializer for _ret
   114   0032C0  01                 	db	1
   115                           
   116                           ;initializer for MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3100
   117   0032C1  68                 	db	104
   118                           
   119                           ;initializer for MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3098
   120   0032C2  5A                 	db	90
   121                           
   122                           ;initializer for MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3096
   123   0032C3  62                 	db	98
   124                           
   125                           ;initializer for MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3094
   126   0032C4  2A                 	db	42
   127                           
   128                           ;initializer for MSSP_SPI_Master_Mode_GPIO_PIN_Configurations@F3089
   129   0032C5  1A                 	db	26
   130                           
   131                           ;initializer for MSSP_SPI_Master_Mode_GPIO_PIN_Configurations@F3087
   132   0032C6  62                 	db	98
   133                           
   134                           ;initializer for MSSP_SPI_Master_Mode_GPIO_PIN_Configurations@F3085
   135   0032C7  2A                 	db	42
   136                           
   137                           ;initializer for _RB7_Flag
   138   0032C8  01                 	db	1
   139                           
   140                           ;initializer for _RB6_Flag
   141   0032C9  01                 	db	1
   142                           
   143                           ;initializer for _RB5_Flag
   144   0032CA  01                 	db	1
   145                           
   146                           ;initializer for _RB4_Flag
   147   0032CB  01                 	db	1
   148                           
   149                           	psect	idataBANK0
   150   0031D4                     __pidataBANK0:
   151                           	callstack 0
   152                           
   153                           ;initializer for _port_registers
   154   0031D4  80                 	db	128
   155   0031D5  0F                 	db	15
   156   0031D6  81                 	db	129
   157   0031D7  0F                 	db	15
   158   0031D8  82                 	db	130
   159   0031D9  0F                 	db	15
   160   0031DA  83                 	db	131
   161   0031DB  0F                 	db	15
   162   0031DC  84                 	db	132
   163   0031DD  0F                 	db	15
   164                           
   165                           ;initializer for _lat_registers
   166   0031DE  89                 	db	137
   167   0031DF  0F                 	db	15
   168   0031E0  8A                 	db	138
   169   0031E1  0F                 	db	15
   170   0031E2  8B                 	db	139
   171   0031E3  0F                 	db	15
   172   0031E4  8C                 	db	140
   173   0031E5  0F                 	db	15
   174   0031E6  8D                 	db	141
   175   0031E7  0F                 	db	15
   176                           
   177                           ;initializer for _tris_registers
   178   0031E8  92                 	db	146
   179   0031E9  0F                 	db	15
   180   0031EA  93                 	db	147
   181   0031EB  0F                 	db	15
   182   0031EC  94                 	db	148
   183   0031ED  0F                 	db	15
   184   0031EE  95                 	db	149
   185   0031EF  0F                 	db	15
   186   0031F0  96                 	db	150
   187   0031F1  0F                 	db	15
   188                           
   189                           ;initializer for _LCD1
   190   0031F2  02                 	db	2
   191   0031F3  0A                 	db	10
   192   0031F4  12                 	db	18
   193   0031F5  1A                 	db	26
   194   0031F6  22                 	db	34
   195   0031F7  2A                 	db	42
   196                           
   197                           ;initializer for _ADC1
   198   0031F8  05                 	db	5
   199   0031F9  05                 	db	5
   200   0031FA  00                 	db	0
   201   0031FB  02                 	db	2
   202                           
   203                           ;initializer for _dc_motor_02
   204   0031FC  11                 	db	17
   205   0031FD  19                 	db	25
   206                           
   207                           ;initializer for _dc_motor_01
   208   0031FE  01                 	db	1
   209   0031FF  09                 	db	9
   210                           
   211                           	psect	smallconst
   212   001000                     __psmallconst:
   213                           	callstack 0
   214   001000  00                 	db	0
   215   001001                     _btn_values:
   216                           	callstack 0
   217   001001  37                 	db	55
   218   001002  38                 	db	56
   219   001003  39                 	db	57
   220   001004  2F                 	db	47
   221   001005  34                 	db	52
   222   001006  35                 	db	53
   223   001007  36                 	db	54
   224   001008  2A                 	db	42
   225   001009  31                 	db	49
   226   00100A  32                 	db	50
   227   00100B  33                 	db	51
   228   00100C  2D                 	db	45
   229   00100D  23                 	db	35
   230   00100E  30                 	db	48
   231   00100F  3D                 	db	61
   232   001010  2B                 	db	43
   233   001011                     __end_of_btn_values:
   234                           	callstack 0
   235   000000                     _SPBRGH	set	4016
   236   000000                     _SPBRG	set	4015
   237   000000                     _TXREG	set	4013
   238   000000                     _TXSTAbits	set	4012
   239   000000                     _RCREG	set	4014
   240   000000                     _RCSTAbits	set	4011
   241   000000                     _TMR3L	set	4018
   242   000000                     _TMR3H	set	4019
   243   000000                     _TMR2	set	4044
   244   000000                     _T2CONbits	set	4042
   245   000000                     _TMR1L	set	4046
   246   000000                     _TMR1H	set	4047
   247   000000                     _T1CONbits	set	4045
   248   000000                     _TMR0L	set	4054
   249   000000                     _TMR0H	set	4055
   250   000000                     _T0CONbits	set	4053
   251   000000                     _INTCON2bits	set	4081
   252   000000                     _INTCON3bits	set	4080
   253   000000                     _SSPBUF	set	4041
   254   000000                     _SSPSTATbits	set	4039
   255   000000                     _SSPADD	set	4040
   256   000000                     _SSPCON2bits	set	4037
   257   000000                     _SSPCON1bits	set	4038
   258   000000                     _EECON2	set	4007
   259   000000                     _INTCONbits	set	4082
   260   000000                     _ADCON1bits	set	4033
   261   000000                     _ADRESL	set	4035
   262   000000                     _ADRESH	set	4036
   263   000000                     _TRISD	set	3989
   264   000000                     _TRISC	set	3988
   265   000000                     _PR2	set	4043
   266   000000                     _TRISB	set	3987
   267   000000                     _TRISE	set	3990
   268   000000                     _PORTBbits	set	3969
   269   000000                     _TRISCbits	set	3988
   270   000000                     _ADCON2bits	set	4032
   271   000000                     _ADCON0bits	set	4034
   272   000000                     _PORTE	set	3972
   273   000000                     _PORTD	set	3971
   274   000000                     _PORTC	set	3970
   275   000000                     _PORTB	set	3969
   276   000000                     _PORTA	set	3968
   277   000000                     _LATA	set	3977
   278   000000                     _TRISA	set	3986
   279   000000                     _PIE1bits	set	3997
   280   000000                     _EECON1bits	set	4006
   281   000000                     _EEDATA	set	4008
   282   000000                     _EEADR	set	4009
   283   000000                     _EEADRH	set	4010
   284   000000                     _T3CONbits	set	4017
   285   000000                     _CCP2CONbits	set	4026
   286   000000                     _CCP1CONbits	set	4029
   287   000000                     _CCPR1L	set	4030
   288   000000                     _CCPR2L	set	4027
   289   000000                     _LATE	set	3981
   290   000000                     _LATD	set	3980
   291   000000                     _LATC	set	3979
   292   000000                     _LATB	set	3978
   293   000000                     _PIR1bits	set	3998
   294   000000                     _PIE2bits	set	4000
   295   000000                     _PIR2bits	set	4001
   296   000000                     _BAUDCONbits	set	4024
   297   001011                     STR_4:
   298   001011  54                 	db	84	;'T'
   299   001012  65                 	db	101	;'e'
   300   001013  6D                 	db	109	;'m'
   301   001014  70                 	db	112	;'p'
   302   001015  65                 	db	101	;'e'
   303   001016  72                 	db	114	;'r'
   304   001017  61                 	db	97	;'a'
   305   001018  74                 	db	116	;'t'
   306   001019  75                 	db	117	;'u'
   307   00101A  72                 	db	114	;'r'
   308   00101B  65                 	db	101	;'e'
   309   00101C  00                 	db	0
   310   00101D                     STR_7:
   311   00101D  53                 	db	83	;'S'
   312   00101E  65                 	db	101	;'e'
   313   00101F  6E                 	db	110	;'n'
   314   001020  73                 	db	115	;'s'
   315   001021  6F                 	db	111	;'o'
   316   001022  72                 	db	114	;'r'
   317   001023  20                 	db	32
   318   001024  31                 	db	49	;'1'
   319   001025  3A                 	db	58	;':'
   320   001026  20                 	db	32
   321   001027  00                 	db	0
   322   001028                     STR_5:
   323   001028  4D                 	db	77	;'M'
   324   001029  6F                 	db	111	;'o'
   325   00102A  6E                 	db	110	;'n'
   326   00102B  69                 	db	105	;'i'
   327   00102C  74                 	db	116	;'t'
   328   00102D  6F                 	db	111	;'o'
   329   00102E  72                 	db	114	;'r'
   330   00102F  69                 	db	105	;'i'
   331   001030  6E                 	db	110	;'n'
   332   001031  67                 	db	103	;'g'
   333   001032  00                 	db	0
   334   001033                     STR_9:
   335   001033  43                 	db	67	;'C'
   336   001034  65                 	db	101	;'e'
   337   001035  6C                 	db	108	;'l'
   338   001036  73                 	db	115	;'s'
   339   001037  69                 	db	105	;'i'
   340   001038  75                 	db	117	;'u'
   341   001039  73                 	db	115	;'s'
   342   00103A  00                 	db	0
   343   00103B                     STR_6:
   344   00103B  53                 	db	83	;'S'
   345   00103C  79                 	db	121	;'y'
   346   00103D  73                 	db	115	;'s'
   347   00103E  74                 	db	116	;'t'
   348   00103F  65                 	db	101	;'e'
   349   001040  6D                 	db	109	;'m'
   350   001041  00                 	db	0
   351   001042                     STR_1:
   352   001042  25                 	db	37
   353   001043  69                 	db	105	;'i'
   354   001044  00                 	db	0
   355   001045  00                 	db	0	; dummy byte at the end
   356   000000                     
   357                           ; #config settings
   358                           
   359                           	psect	cinit
   360   002D6E                     __pcinit:
   361                           	callstack 0
   362   002D6E                     start_initialization:
   363                           	callstack 0
   364   002D6E                     __initialization:
   365                           	callstack 0
   366                           
   367                           ; Initialize objects allocated to BANK0 (44 bytes)
   368                           ; load TBLPTR registers with __pidataBANK0
   369   002D6E  0ED4               	movlw	low __pidataBANK0
   370   002D70  6EF6               	movwf	tblptrl,c
   371   002D72  0E31               	movlw	high __pidataBANK0
   372   002D74  6EF7               	movwf	tblptrh,c
   373   002D76  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   374   002D78  6EF8               	movwf	tblptru,c
   375   002D7A  EE00  F0C9         	lfsr	0,__pdataBANK0
   376   002D7E  EE10 F02C          	lfsr	1,44
   377   002D82                     copy_data0:
   378   002D82  0009               	tblrd		*+
   379   002D84  CFF5 FFEE          	movff	tablat,postinc0
   380   002D88  50E5               	movf	postdec1,w,c
   381   002D8A  50E1               	movf	fsr1l,w,c
   382   002D8C  E1FA               	bnz	copy_data0
   383                           
   384                           ; Initialize objects allocated to COMRAM (12 bytes)
   385                           ; load TBLPTR registers with __pidataCOMRAM
   386   002D8E  0EC0               	movlw	low __pidataCOMRAM
   387   002D90  6EF6               	movwf	tblptrl,c
   388   002D92  0E32               	movlw	high __pidataCOMRAM
   389   002D94  6EF7               	movwf	tblptrh,c
   390   002D96  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   391   002D98  6EF8               	movwf	tblptru,c
   392   002D9A  EE00  F072         	lfsr	0,__pdataCOMRAM
   393   002D9E  EE10 F00C          	lfsr	1,12
   394   002DA2                     copy_data1:
   395   002DA2  0009               	tblrd		*+
   396   002DA4  CFF5 FFEE          	movff	tablat,postinc0
   397   002DA8  50E5               	movf	postdec1,w,c
   398   002DAA  50E1               	movf	fsr1l,w,c
   399   002DAC  E1FA               	bnz	copy_data1
   400                           
   401                           ; Clear objects allocated to BANK1 (32 bytes)
   402   002DAE  EE01  F000         	lfsr	0,__pbssBANK1
   403   002DB2  0E20               	movlw	32
   404   002DB4                     clear_0:
   405   002DB4  6AEE               	clrf	postinc0,c
   406   002DB6  06E8               	decf	wreg,f,c
   407   002DB8  E1FD               	bnz	clear_0
   408                           
   409                           ; Clear objects allocated to BANK0 (73 bytes)
   410   002DBA  EE00  F080         	lfsr	0,__pbssBANK0
   411   002DBE  0E49               	movlw	73
   412   002DC0                     clear_1:
   413   002DC0  6AEE               	clrf	postinc0,c
   414   002DC2  06E8               	decf	wreg,f,c
   415   002DC4  E1FD               	bnz	clear_1
   416                           
   417                           ; Clear objects allocated to COMRAM (17 bytes)
   418   002DC6  EE00  F061         	lfsr	0,__pbssCOMRAM
   419   002DCA  0E11               	movlw	17
   420   002DCC                     clear_2:
   421   002DCC  6AEE               	clrf	postinc0,c
   422   002DCE  06E8               	decf	wreg,f,c
   423   002DD0  E1FD               	bnz	clear_2
   424   002DD2                     end_of_initialization:
   425                           	callstack 0
   426   002DD2                     __end_of__initialization:
   427                           	callstack 0
   428   002DD2  907E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   429   002DD4  927E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   430   002DD6  0100               	movlb	0
   431   002DD8  EF38  F00A         	goto	_main	;jump to C main() function
   432                           
   433                           	psect	bssCOMRAM
   434   000061                     __pbssCOMRAM:
   435                           	callstack 0
   436   000061                     _lm35_res_2_Celsius:
   437                           	callstack 0
   438   000061                     	ds	2
   439   000063                     _lm35_res_1_Celsius:
   440                           	callstack 0
   441   000063                     	ds	2
   442   000065                     _flags:
   443                           	callstack 0
   444   000065                     	ds	1
   445   000066                     _Timer2_preload:
   446                           	callstack 0
   447   000066                     	ds	1
   448   000067                     relay_turn_off@F3046:
   449                           	callstack 0
   450   000067                     	ds	1
   451   000068                     relay_turn_on@F3041:
   452                           	callstack 0
   453   000068                     	ds	1
   454   000069                     relay_initialize@F3036:
   455                           	callstack 0
   456   000069                     	ds	1
   457   00006A                     led_turn_toggle@F3057:
   458                           	callstack 0
   459   00006A                     	ds	1
   460   00006B                     led_turn_off@F3052:
   461                           	callstack 0
   462   00006B                     	ds	1
   463   00006C                     led_turn_on@F3047:
   464                           	callstack 0
   465   00006C                     	ds	1
   466   00006D                     led_initialize@F3042:
   467                           	callstack 0
   468   00006D                     	ds	1
   469   00006E                     _lm35_res_2:
   470                           	callstack 0
   471   00006E                     	ds	2
   472   000070                     _lm35_res_1:
   473                           	callstack 0
   474   000070                     	ds	2
   475                           
   476                           	psect	dataCOMRAM
   477   000072                     __pdataCOMRAM:
   478                           	callstack 0
   479   000072                     _ret:
   480                           	callstack 0
   481   000072                     	ds	1
   482   000073                     MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3100:
   483                           	callstack 0
   484   000073                     	ds	1
   485   000074                     MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3098:
   486                           	callstack 0
   487   000074                     	ds	1
   488   000075                     MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3096:
   489                           	callstack 0
   490   000075                     	ds	1
   491   000076                     MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3094:
   492                           	callstack 0
   493   000076                     	ds	1
   494   000077                     MSSP_SPI_Master_Mode_GPIO_PIN_Configurations@F3089:
   495                           	callstack 0
   496   000077                     	ds	1
   497   000078                     MSSP_SPI_Master_Mode_GPIO_PIN_Configurations@F3087:
   498                           	callstack 0
   499   000078                     	ds	1
   500   000079                     MSSP_SPI_Master_Mode_GPIO_PIN_Configurations@F3085:
   501                           	callstack 0
   502   000079                     	ds	1
   503   00007A                     _RB7_Flag:
   504                           	callstack 0
   505   00007A                     	ds	1
   506   00007B                     _RB6_Flag:
   507                           	callstack 0
   508   00007B                     	ds	1
   509   00007C                     _RB5_Flag:
   510                           	callstack 0
   511   00007C                     	ds	1
   512   00007D                     _RB4_Flag:
   513                           	callstack 0
   514   00007D                     	ds	1
   515                           
   516                           	psect	bssBANK0
   517   000080                     __pbssBANK0:
   518                           	callstack 0
   519   000080                     	ds	11
   520   00008B                     	ds	6
   521   000091                     	ds	4
   522   000095                     _width:
   523                           	callstack 0
   524   000095                     	ds	2
   525   000097                     _prec:
   526                           	callstack 0
   527   000097                     	ds	2
   528   000099                     _Timer3_preload:
   529                           	callstack 0
   530   000099                     	ds	2
   531   00009B                     _Timer1_preload:
   532                           	callstack 0
   533   00009B                     	ds	2
   534   00009D                     _Timer0_preload:
   535                           	callstack 0
   536   00009D                     	ds	2
   537   00009F                     _RB7_InterruptHandler_Low:
   538                           	callstack 0
   539   00009F                     	ds	2
   540   0000A1                     _RB7_InterruptHandler_High:
   541                           	callstack 0
   542   0000A1                     	ds	2
   543   0000A3                     _RB6_InterruptHandler_Low:
   544                           	callstack 0
   545   0000A3                     	ds	2
   546   0000A5                     _RB6_InterruptHandler_High:
   547                           	callstack 0
   548   0000A5                     	ds	2
   549   0000A7                     _RB5_InterruptHandler_Low:
   550                           	callstack 0
   551   0000A7                     	ds	2
   552   0000A9                     _RB5_InterruptHandler_High:
   553                           	callstack 0
   554   0000A9                     	ds	2
   555   0000AB                     _RB4_InterruptHandler_Low:
   556                           	callstack 0
   557   0000AB                     	ds	2
   558   0000AD                     _RB4_InterruptHandler_High:
   559                           	callstack 0
   560   0000AD                     	ds	2
   561   0000AF                     _INT2_InterruptHandler:
   562                           	callstack 0
   563   0000AF                     	ds	2
   564   0000B1                     _INT1_InterruptHandler:
   565                           	callstack 0
   566   0000B1                     	ds	2
   567   0000B3                     _INT0_InterruptHandler:
   568                           	callstack 0
   569   0000B3                     	ds	2
   570   0000B5                     _I2C_Report_Receive_Overflow_InterruptHandle:
   571                           	callstack 0
   572   0000B5                     	ds	2
   573   0000B7                     _I2C_DefaultInterruptHandle:
   574                           	callstack 0
   575   0000B7                     	ds	2
   576   0000B9                     _I2C_Report_Write_Collision_InterruptHandler:
   577                           	callstack 0
   578   0000B9                     	ds	2
   579   0000BB                     _Resultstr2:
   580                           	callstack 0
   581   0000BB                     	ds	7
   582   0000C2                     _Resultstr1:
   583                           	callstack 0
   584   0000C2                     	ds	7
   585                           
   586                           	psect	dataBANK0
   587   0000C9                     __pdataBANK0:
   588                           	callstack 0
   589   0000C9                     _port_registers:
   590                           	callstack 0
   591   0000C9                     	ds	10
   592   0000D3                     _lat_registers:
   593                           	callstack 0
   594   0000D3                     	ds	10
   595   0000DD                     _tris_registers:
   596                           	callstack 0
   597   0000DD                     	ds	10
   598   0000E7                     _LCD1:
   599                           	callstack 0
   600   0000E7                     	ds	6
   601   0000ED                     _ADC1:
   602                           	callstack 0
   603   0000ED                     	ds	4
   604   0000F1                     _dc_motor_02:
   605                           	callstack 0
   606   0000F1                     	ds	2
   607   0000F3                     _dc_motor_01:
   608                           	callstack 0
   609   0000F3                     	ds	2
   610                           
   611                           	psect	bssBANK1
   612   000100                     __pbssBANK1:
   613                           	callstack 0
   614   000100                     _dbuf:
   615                           	callstack 0
   616   000100                     	ds	32
   617                           
   618                           	psect	cstackCOMRAM
   619   000001                     __pcstackCOMRAM:
   620                           	callstack 0
   621   000001                     RB4_ISR@RB4_Source:
   622                           	callstack 0
   623   000001                     RB5_ISR@RB5_Source:
   624                           	callstack 0
   625   000001                     RB6_ISR@RB6_Source:
   626                           	callstack 0
   627   000001                     RB7_ISR@RB7_Source:
   628                           	callstack 0
   629   000001                     
   630                           ; 1 bytes @ 0x0
   631   000001                     	ds	1
   632   000002                     ??_adc_input_channel_port_configure:
   633   000002                     ?___awdiv:
   634                           	callstack 0
   635   000002                     ?___awmod:
   636                           	callstack 0
   637   000002                     ?___lwdiv:
   638                           	callstack 0
   639   000002                     ?___xxtofl:
   640                           	callstack 0
   641   000002                     ADC_Start_Conversion@ADC_obj:
   642                           	callstack 0
   643   000002                     ADC_Get_Conversion_Result@ADC_obj:
   644                           	callstack 0
   645   000002                     select_result_format@ADC_obj:
   646                           	callstack 0
   647   000002                     configure_voltage_reference@ADC_obj:
   648                           	callstack 0
   649   000002                     gpio_pin_direction_intialize@_pin_config:
   650                           	callstack 0
   651   000002                     gpio_pin_write_logic@_pin_config:
   652                           	callstack 0
   653   000002                     ___awdiv@dividend:
   654                           	callstack 0
   655   000002                     ___awmod@dividend:
   656                           	callstack 0
   657   000002                     ___lwdiv@dividend:
   658                           	callstack 0
   659   000002                     memset@dest:
   660                           	callstack 0
   661   000002                     fputc@c:
   662                           	callstack 0
   663   000002                     ___xxtofl@val:
   664                           	callstack 0
   665                           
   666                           ; 4 bytes @ 0x1
   667   000002                     	ds	2
   668   000004                     ??_gpio_pin_direction_intialize:
   669   000004                     ADC_Start_Conversion@ret:
   670                           	callstack 0
   671   000004                     adc_input_channel_port_configure@channel:
   672                           	callstack 0
   673   000004                     gpio_pin_write_logic@logic:
   674                           	callstack 0
   675   000004                     ADC_Get_Conversion_Result@Conversion_Result:
   676                           	callstack 0
   677   000004                     ___awdiv@divisor:
   678                           	callstack 0
   679   000004                     ___awmod@divisor:
   680                           	callstack 0
   681   000004                     ___lwdiv@divisor:
   682                           	callstack 0
   683   000004                     memset@c:
   684                           	callstack 0
   685   000004                     fputc@fp:
   686                           	callstack 0
   687                           
   688                           ; 2 bytes @ 0x3
   689   000004                     	ds	1
   690   000005                     ??_gpio_pin_write_logic:
   691   000005                     ADC_initialize@ADC_obj:
   692                           	callstack 0
   693   000005                     ADC_Selsect_Channel@ADC_obj:
   694                           	callstack 0
   695                           
   696                           ; 2 bytes @ 0x4
   697   000005                     	ds	1
   698   000006                     ??_fputc:
   699   000006                     ??_ADC_Get_Conversion_Result:
   700   000006                     ??___xxtofl:
   701   000006                     ___awdiv@counter:
   702                           	callstack 0
   703   000006                     ___awmod@counter:
   704                           	callstack 0
   705   000006                     ___lwdiv@quotient:
   706                           	callstack 0
   707   000006                     memset@n:
   708                           	callstack 0
   709                           
   710                           ; 2 bytes @ 0x5
   711   000006                     	ds	1
   712   000007                     ??_ADC_initialize:
   713   000007                     ADC_Selsect_Channel@channel:
   714                           	callstack 0
   715   000007                     ___awdiv@sign:
   716                           	callstack 0
   717   000007                     ___awmod@sign:
   718                           	callstack 0
   719                           
   720                           ; 1 bytes @ 0x6
   721   000007                     	ds	1
   722   000008                     ??_memset:
   723   000008                     ??_ADC_Selsect_Channel:
   724   000008                     ?_abs:
   725                           	callstack 0
   726   000008                     ADC_initialize@ret:
   727                           	callstack 0
   728   000008                     ___lwdiv@counter:
   729                           	callstack 0
   730   000008                     ___awdiv@quotient:
   731                           	callstack 0
   732   000008                     abs@a:
   733                           	callstack 0
   734                           
   735                           ; 2 bytes @ 0x7
   736   000008                     	ds	1
   737   000009                     ADC_Selsect_Channel@ret:
   738                           	callstack 0
   739                           
   740                           ; 1 bytes @ 0x8
   741   000009                     	ds	1
   742   00000A                     ??_abs:
   743   00000A                     ADC_Get_Conversion_Result@ret:
   744                           	callstack 0
   745   00000A                     gpio_pin_direction_intialize@ret:
   746                           	callstack 0
   747   00000A                     ___xxtofl@sign:
   748                           	callstack 0
   749   00000A                     memset@k:
   750                           	callstack 0
   751                           
   752                           ; 2 bytes @ 0x9
   753   00000A                     	ds	1
   754   00000B                     gpio_pin_write_logic@ret:
   755                           	callstack 0
   756   00000B                     ___xxtofl@exp:
   757                           	callstack 0
   758   00000B                     ADC_Get_Conversion_Blocking@ADC_obj:
   759                           	callstack 0
   760   00000B                     fputs@s:
   761                           	callstack 0
   762                           
   763                           ; 2 bytes @ 0xA
   764   00000B                     	ds	1
   765   00000C                     lcd_send_4bit@lcd:
   766                           	callstack 0
   767   00000C                     lcd_4bit_send_enable_signal@lcd:
   768                           	callstack 0
   769   00000C                     dc_motor_move_left@_dc_motor:
   770                           	callstack 0
   771   00000C                     dc_motor_stop@_dc_motor:
   772                           	callstack 0
   773   00000C                     gpio_pin_intialize@_pin_config:
   774                           	callstack 0
   775   00000C                     memset@s:
   776                           	callstack 0
   777   00000C                     ___xxtofl@arg:
   778                           	callstack 0
   779                           
   780                           ; 4 bytes @ 0xB
   781   00000C                     	ds	1
   782   00000D                     ADC_Get_Conversion_Blocking@channel:
   783                           	callstack 0
   784   00000D                     fputs@fp:
   785                           	callstack 0
   786                           
   787                           ; 2 bytes @ 0xC
   788   00000D                     	ds	1
   789   00000E                     ??_gpio_pin_intialize:
   790   00000E                     lcd_send_4bit@command:
   791                           	callstack 0
   792   00000E                     lcd_4bit_send_enable_signal@ret:
   793                           	callstack 0
   794   00000E                     dc_motor_move_left@ret:
   795                           	callstack 0
   796   00000E                     dc_motor_stop@ret:
   797                           	callstack 0
   798   00000E                     ADC_Get_Conversion_Blocking@Conversion_Result:
   799                           	callstack 0
   800                           
   801                           ; 2 bytes @ 0xD
   802   00000E                     	ds	1
   803   00000F                     lcd_send_4bit@ret:
   804                           	callstack 0
   805   00000F                     gpio_pin_intialize@ret:
   806                           	callstack 0
   807   00000F                     fputs@c:
   808                           	callstack 0
   809                           
   810                           ; 1 bytes @ 0xE
   811   00000F                     	ds	1
   812   000010                     ?___flmul:
   813                           	callstack 0
   814   000010                     ADC_Get_Conversion_Blocking@ret:
   815                           	callstack 0
   816   000010                     lcd_4bit_send_command@lcd:
   817                           	callstack 0
   818   000010                     lcd_4bit_send_char_data@lcd:
   819                           	callstack 0
   820   000010                     dc_motor_initialize@_dc_motor:
   821                           	callstack 0
   822   000010                     fputs@i:
   823                           	callstack 0
   824   000010                     ___flmul@b:
   825                           	callstack 0
   826                           
   827                           ; 4 bytes @ 0xF
   828   000010                     	ds	2
   829   000012                     lcd_4bit_send_command@command:
   830                           	callstack 0
   831   000012                     lcd_4bit_send_char_data@data:
   832                           	callstack 0
   833   000012                     dc_motor_initialize@ret:
   834                           	callstack 0
   835   000012                     pad@fp:
   836                           	callstack 0
   837                           
   838                           ; 2 bytes @ 0x11
   839   000012                     	ds	1
   840   000013                     lcd_4bit_send_command@ret:
   841                           	callstack 0
   842   000013                     lcd_4bit_send_char_data@ret:
   843                           	callstack 0
   844                           
   845                           ; 1 bytes @ 0x12
   846   000013                     	ds	1
   847   000014                     lcd_4bit_initialize@lcd:
   848                           	callstack 0
   849   000014                     lcd_4bit_send_string@lcd:
   850                           	callstack 0
   851   000014                     lcd_4bit_set_cursor@lcd:
   852                           	callstack 0
   853   000014                     pad@buf:
   854                           	callstack 0
   855   000014                     ___flmul@a:
   856                           	callstack 0
   857                           
   858                           ; 4 bytes @ 0x13
   859   000014                     	ds	2
   860   000016                     ??_lcd_4bit_initialize:
   861   000016                     lcd_4bit_set_cursor@row:
   862                           	callstack 0
   863   000016                     lcd_4bit_send_string@str:
   864                           	callstack 0
   865   000016                     pad@p:
   866                           	callstack 0
   867                           
   868                           ; 2 bytes @ 0x15
   869   000016                     	ds	1
   870   000017                     lcd_4bit_set_cursor@column:
   871                           	callstack 0
   872                           
   873                           ; 1 bytes @ 0x16
   874   000017                     	ds	1
   875   000018                     ??_lcd_4bit_set_cursor:
   876   000018                     ??___flmul:
   877   000018                     ??_pad:
   878   000018                     lcd_4bit_initialize@count:
   879                           	callstack 0
   880   000018                     lcd_4bit_send_string@ret:
   881                           	callstack 0
   882                           
   883                           ; 1 bytes @ 0x17
   884   000018                     	ds	1
   885   000019                     lcd_4bit_initialize@ret:
   886                           	callstack 0
   887   000019                     pad@i:
   888                           	callstack 0
   889                           
   890                           ; 2 bytes @ 0x18
   891   000019                     	ds	1
   892   00001A                     lcd_4bit_set_cursor@ret:
   893                           	callstack 0
   894                           
   895                           ; 1 bytes @ 0x19
   896   00001A                     	ds	1
   897   00001B                     lcd_4bit_send_string_pos@lcd:
   898                           	callstack 0
   899   00001B                     pad@w:
   900                           	callstack 0
   901                           
   902                           ; 2 bytes @ 0x1A
   903   00001B                     	ds	1
   904   00001C                     ___flmul@sign:
   905                           	callstack 0
   906                           
   907                           ; 1 bytes @ 0x1B
   908   00001C                     	ds	1
   909   00001D                     lcd_4bit_send_string_pos@row:
   910                           	callstack 0
   911   00001D                     dtoa@fp:
   912                           	callstack 0
   913   00001D                     ___flmul@grs:
   914                           	callstack 0
   915                           
   916                           ; 4 bytes @ 0x1C
   917   00001D                     	ds	1
   918   00001E                     lcd_4bit_send_string_pos@column:
   919                           	callstack 0
   920                           
   921                           ; 1 bytes @ 0x1D
   922   00001E                     	ds	1
   923   00001F                     lcd_4bit_send_string_pos@str:
   924                           	callstack 0
   925   00001F                     dtoa@d:
   926                           	callstack 0
   927                           
   928                           ; 2 bytes @ 0x1E
   929   00001F                     	ds	2
   930   000021                     lcd_4bit_send_string_pos@ret:
   931                           	callstack 0
   932   000021                     ___flmul@aexp:
   933                           	callstack 0
   934   000021                     _dtoa$4404:
   935                           	callstack 0
   936                           
   937                           ; 2 bytes @ 0x20
   938   000021                     	ds	1
   939   000022                     ___flmul@bexp:
   940                           	callstack 0
   941                           
   942                           ; 1 bytes @ 0x21
   943   000022                     	ds	1
   944   000023                     dtoa@p:
   945                           	callstack 0
   946   000023                     ___flmul@prod:
   947                           	callstack 0
   948                           
   949                           ; 4 bytes @ 0x22
   950   000023                     	ds	2
   951   000025                     dtoa@w:
   952                           	callstack 0
   953                           
   954                           ; 2 bytes @ 0x24
   955   000025                     	ds	2
   956   000027                     ___flmul@temp:
   957                           	callstack 0
   958   000027                     dtoa@i:
   959                           	callstack 0
   960                           
   961                           ; 2 bytes @ 0x26
   962   000027                     	ds	2
   963   000029                     ?___fltol:
   964                           	callstack 0
   965   000029                     dtoa@s:
   966                           	callstack 0
   967   000029                     ___fltol@f1:
   968                           	callstack 0
   969                           
   970                           ; 4 bytes @ 0x28
   971   000029                     	ds	1
   972   00002A                     vfpfcnvrt@fp:
   973                           	callstack 0
   974                           
   975                           ; 2 bytes @ 0x29
   976   00002A                     	ds	2
   977   00002C                     vfpfcnvrt@fmt:
   978                           	callstack 0
   979                           
   980                           ; 2 bytes @ 0x2B
   981   00002C                     	ds	1
   982   00002D                     ??___fltol:
   983                           
   984                           ; 1 bytes @ 0x2C
   985   00002D                     	ds	1
   986   00002E                     vfpfcnvrt@ap:
   987                           	callstack 0
   988                           
   989                           ; 2 bytes @ 0x2D
   990   00002E                     	ds	2
   991   000030                     ??_vfpfcnvrt:
   992                           
   993                           ; 1 bytes @ 0x2F
   994   000030                     	ds	1
   995   000031                     ___fltol@sign1:
   996                           	callstack 0
   997                           
   998                           ; 1 bytes @ 0x30
   999   000031                     	ds	1
  1000   000032                     ___fltol@exp1:
  1001                           	callstack 0
  1002   000032                     vfpfcnvrt@convarg:
  1003                           	callstack 0
  1004                           
  1005                           ; 4 bytes @ 0x31
  1006   000032                     	ds	4
  1007   000036                     vfpfcnvrt@cp:
  1008                           	callstack 0
  1009                           
  1010                           ; 2 bytes @ 0x35
  1011   000036                     	ds	2
  1012   000038                     ?_vfprintf:
  1013                           	callstack 0
  1014   000038                     vfprintf@fp:
  1015                           	callstack 0
  1016                           
  1017                           ; 2 bytes @ 0x37
  1018   000038                     	ds	2
  1019   00003A                     vfprintf@fmt:
  1020                           	callstack 0
  1021                           
  1022                           ; 2 bytes @ 0x39
  1023   00003A                     	ds	2
  1024   00003C                     vfprintf@ap:
  1025                           	callstack 0
  1026                           
  1027                           ; 2 bytes @ 0x3B
  1028   00003C                     	ds	2
  1029   00003E                     vfprintf@cfmt:
  1030                           	callstack 0
  1031                           
  1032                           ; 2 bytes @ 0x3D
  1033   00003E                     	ds	2
  1034   000040                     ?_sprintf:
  1035                           	callstack 0
  1036   000040                     sprintf@s:
  1037                           	callstack 0
  1038                           
  1039                           ; 2 bytes @ 0x3F
  1040   000040                     	ds	2
  1041   000042                     sprintf@fmt:
  1042                           	callstack 0
  1043                           
  1044                           ; 2 bytes @ 0x41
  1045   000042                     	ds	6
  1046   000048                     sprintf@ap:
  1047                           	callstack 0
  1048                           
  1049                           ; 2 bytes @ 0x47
  1050   000048                     	ds	2
  1051   00004A                     sprintf@f:
  1052                           	callstack 0
  1053                           
  1054                           ; 12 bytes @ 0x49
  1055   00004A                     	ds	12
  1056   000056                     convert_uint8_to_string@str:
  1057                           	callstack 0
  1058                           
  1059                           ; 2 bytes @ 0x55
  1060   000056                     	ds	2
  1061   000058                     convert_uint8_to_string@Tempstr:
  1062                           	callstack 0
  1063                           
  1064                           ; 4 bytes @ 0x57
  1065   000058                     	ds	4
  1066   00005C                     convert_uint8_to_string@value:
  1067                           	callstack 0
  1068                           
  1069                           ; 1 bytes @ 0x5B
  1070   00005C                     	ds	1
  1071   00005D                     convert_uint8_to_string@ret:
  1072                           	callstack 0
  1073                           
  1074                           ; 1 bytes @ 0x5C
  1075   00005D                     	ds	1
  1076   00005E                     convert_uint8_to_string@DataCounter:
  1077                           	callstack 0
  1078                           
  1079                           ; 1 bytes @ 0x5D
  1080   00005E                     	ds	1
  1081   00005F                     ??_main:
  1082                           
  1083                           ; 1 bytes @ 0x5E
  1084   00005F                     	ds	2
  1085                           
  1086 ;;
  1087 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1088 ;;
  1089 ;; *************** function _main *****************
  1090 ;; Defined at:
  1091 ;;		line 14 in file "application.c"
  1092 ;; Parameters:    Size  Location     Type
  1093 ;;		None
  1094 ;; Auto vars:     Size  Location     Type
  1095 ;;		None
  1096 ;; Return value:  Size  Location     Type
  1097 ;;                  2  1630[None  ] int 
  1098 ;; Registers used:
  1099 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1100 ;; Tracked objects:
  1101 ;;		On entry : 0/0
  1102 ;;		On exit  : 0/0
  1103 ;;		Unchanged: 0/0
  1104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1107 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1108 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1109 ;;Total ram usage:        2 bytes
  1110 ;; Hardware stack levels required when called: 11
  1111 ;; This function calls:
  1112 ;;		_ADC_Get_Conversion_Blocking
  1113 ;;		___flmul
  1114 ;;		___fltol
  1115 ;;		___lwdiv
  1116 ;;		___xxtofl
  1117 ;;		_application_intialize
  1118 ;;		_convert_uint8_to_string
  1119 ;;		_dc_motor_move_left
  1120 ;;		_dc_motor_stop
  1121 ;;		_lcd_4bit_send_command
  1122 ;;		_lcd_4bit_send_string_pos
  1123 ;; This function is called by:
  1124 ;;		Startup code after reset
  1125 ;; This function uses a non-reentrant model
  1126 ;;
  1127                           
  1128                           	psect	text0
  1129   001470                     __ptext0:
  1130                           	callstack 0
  1131   001470                     _main:
  1132                           	callstack 20
  1133   001470                     
  1134                           ;application.c: 15:     application_intialize();
  1135   001470  EC66  F019         	call	_application_intialize	;wreg free
  1136   001474                     
  1137                           ;application.c: 18:     ret = lcd_4bit_send_string_pos(&LCD1, 1, 5, "Temperature");
  1138   001474  0EE7               	movlw	low _LCD1
  1139   001476  6E1B               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1140   001478  0E00               	movlw	high _LCD1
  1141   00147A  6E1C               	movwf	(lcd_4bit_send_string_pos@lcd+1)^0,c
  1142   00147C  0E01               	movlw	1
  1143   00147E  6E1D               	movwf	lcd_4bit_send_string_pos@row^0,c
  1144   001480  0E05               	movlw	5
  1145   001482  6E1E               	movwf	lcd_4bit_send_string_pos@column^0,c
  1146   001484  0E11               	movlw	low STR_4
  1147   001486  6E1F               	movwf	lcd_4bit_send_string_pos@str^0,c
  1148   001488  0E10               	movlw	high STR_4
  1149   00148A  6E20               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1150   00148C  ECCB  F017         	call	_lcd_4bit_send_string_pos	;wreg free
  1151   001490  6E72               	movwf	_ret^0,c
  1152   001492                     
  1153                           ;application.c: 19:     ret = lcd_4bit_send_string_pos(&LCD1, 2, 6, "Monitoring");
  1154   001492  0EE7               	movlw	low _LCD1
  1155   001494  6E1B               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1156   001496  0E00               	movlw	high _LCD1
  1157   001498  6E1C               	movwf	(lcd_4bit_send_string_pos@lcd+1)^0,c
  1158   00149A  0E02               	movlw	2
  1159   00149C  6E1D               	movwf	lcd_4bit_send_string_pos@row^0,c
  1160   00149E  0E06               	movlw	6
  1161   0014A0  6E1E               	movwf	lcd_4bit_send_string_pos@column^0,c
  1162   0014A2  0E28               	movlw	low STR_5
  1163   0014A4  6E1F               	movwf	lcd_4bit_send_string_pos@str^0,c
  1164   0014A6  0E10               	movlw	high STR_5
  1165   0014A8  6E20               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1166   0014AA  ECCB  F017         	call	_lcd_4bit_send_string_pos	;wreg free
  1167   0014AE  6E72               	movwf	_ret^0,c
  1168   0014B0                     
  1169                           ;application.c: 20:     ret = lcd_4bit_send_string_pos(&LCD1, 3, 8, "System");
  1170   0014B0  0EE7               	movlw	low _LCD1
  1171   0014B2  6E1B               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1172   0014B4  0E00               	movlw	high _LCD1
  1173   0014B6  6E1C               	movwf	(lcd_4bit_send_string_pos@lcd+1)^0,c
  1174   0014B8  0E03               	movlw	3
  1175   0014BA  6E1D               	movwf	lcd_4bit_send_string_pos@row^0,c
  1176   0014BC  0E08               	movlw	8
  1177   0014BE  6E1E               	movwf	lcd_4bit_send_string_pos@column^0,c
  1178   0014C0  0E3B               	movlw	low STR_6
  1179   0014C2  6E1F               	movwf	lcd_4bit_send_string_pos@str^0,c
  1180   0014C4  0E10               	movlw	high STR_6
  1181   0014C6  6E20               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1182   0014C8  ECCB  F017         	call	_lcd_4bit_send_string_pos	;wreg free
  1183   0014CC  6E72               	movwf	_ret^0,c
  1184   0014CE                     
  1185                           ;application.c: 21:     _delay((unsigned long)((2000)*(8000000UL/4000.0)));
  1186   0014CE  0E15               	movlw	21
  1187   0014D0  6E60               	movwf	(??_main+1)^0,c
  1188   0014D2  0E4B               	movlw	75
  1189   0014D4  6E5F               	movwf	??_main^0,c
  1190   0014D6  0EBE               	movlw	190
  1191   0014D8                     u7187:
  1192   0014D8  2EE8               	decfsz	wreg,f,c
  1193   0014DA  D7FE               	bra	u7187
  1194   0014DC  2E5F               	decfsz	??_main^0,f,c
  1195   0014DE  D7FC               	bra	u7187
  1196   0014E0  2E60               	decfsz	(??_main+1)^0,f,c
  1197   0014E2  D7FA               	bra	u7187
  1198   0014E4  D000               	nop2	
  1199   0014E6                     
  1200                           ;application.c: 23:     ret = lcd_4bit_send_command(&LCD1, 0x01);
  1201   0014E6  0EE7               	movlw	low _LCD1
  1202   0014E8  6E10               	movwf	lcd_4bit_send_command@lcd^0,c
  1203   0014EA  0E00               	movlw	high _LCD1
  1204   0014EC  6E11               	movwf	(lcd_4bit_send_command@lcd+1)^0,c
  1205   0014EE  0E01               	movlw	1
  1206   0014F0  6E12               	movwf	lcd_4bit_send_command@command^0,c
  1207   0014F2  EC7E  F016         	call	_lcd_4bit_send_command	;wreg free
  1208   0014F6  6E72               	movwf	_ret^0,c
  1209   0014F8                     
  1210                           ;application.c: 24:     ret = lcd_4bit_send_command(&LCD1, 0x02);
  1211   0014F8  0EE7               	movlw	low _LCD1
  1212   0014FA  6E10               	movwf	lcd_4bit_send_command@lcd^0,c
  1213   0014FC  0E00               	movlw	high _LCD1
  1214   0014FE  6E11               	movwf	(lcd_4bit_send_command@lcd+1)^0,c
  1215   001500  0E02               	movlw	2
  1216   001502  6E12               	movwf	lcd_4bit_send_command@command^0,c
  1217   001504  EC7E  F016         	call	_lcd_4bit_send_command	;wreg free
  1218   001508  6E72               	movwf	_ret^0,c
  1219   00150A                     
  1220                           ;application.c: 27:     ret = lcd_4bit_send_string_pos(&LCD1, 2, 1, "Sensor 1: ");
  1221   00150A  0EE7               	movlw	low _LCD1
  1222   00150C  6E1B               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1223   00150E  0E00               	movlw	high _LCD1
  1224   001510  6E1C               	movwf	(lcd_4bit_send_string_pos@lcd+1)^0,c
  1225   001512  0E02               	movlw	2
  1226   001514  6E1D               	movwf	lcd_4bit_send_string_pos@row^0,c
  1227   001516  0E01               	movlw	1
  1228   001518  6E1E               	movwf	lcd_4bit_send_string_pos@column^0,c
  1229   00151A  0E1D               	movlw	low STR_7
  1230   00151C  6E1F               	movwf	lcd_4bit_send_string_pos@str^0,c
  1231   00151E  0E10               	movlw	high STR_7
  1232   001520  6E20               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1233   001522  ECCB  F017         	call	_lcd_4bit_send_string_pos	;wreg free
  1234   001526  6E72               	movwf	_ret^0,c
  1235   001528                     
  1236                           ;application.c: 28:     ret = lcd_4bit_send_string_pos(&LCD1, 3, 1, "Sensor 1: ");
  1237   001528  0EE7               	movlw	low _LCD1
  1238   00152A  6E1B               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1239   00152C  0E00               	movlw	high _LCD1
  1240   00152E  6E1C               	movwf	(lcd_4bit_send_string_pos@lcd+1)^0,c
  1241   001530  0E03               	movlw	3
  1242   001532  6E1D               	movwf	lcd_4bit_send_string_pos@row^0,c
  1243   001534  0E01               	movlw	1
  1244   001536  6E1E               	movwf	lcd_4bit_send_string_pos@column^0,c
  1245   001538  0E1D               	movlw	low STR_7
  1246   00153A  6E1F               	movwf	lcd_4bit_send_string_pos@str^0,c
  1247   00153C  0E10               	movlw	high STR_7
  1248   00153E  6E20               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1249   001540  ECCB  F017         	call	_lcd_4bit_send_string_pos	;wreg free
  1250   001544  6E72               	movwf	_ret^0,c
  1251   001546                     
  1252                           ;application.c: 30:     ret = lcd_4bit_send_string_pos(&LCD1, 2, 14, "Celsius");
  1253   001546  0EE7               	movlw	low _LCD1
  1254   001548  6E1B               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1255   00154A  0E00               	movlw	high _LCD1
  1256   00154C  6E1C               	movwf	(lcd_4bit_send_string_pos@lcd+1)^0,c
  1257   00154E  0E02               	movlw	2
  1258   001550  6E1D               	movwf	lcd_4bit_send_string_pos@row^0,c
  1259   001552  0E0E               	movlw	14
  1260   001554  6E1E               	movwf	lcd_4bit_send_string_pos@column^0,c
  1261   001556  0E33               	movlw	low STR_9
  1262   001558  6E1F               	movwf	lcd_4bit_send_string_pos@str^0,c
  1263   00155A  0E10               	movlw	high STR_9
  1264   00155C  6E20               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1265   00155E  ECCB  F017         	call	_lcd_4bit_send_string_pos	;wreg free
  1266   001562  6E72               	movwf	_ret^0,c
  1267   001564                     
  1268                           ;application.c: 31:     ret = lcd_4bit_send_string_pos(&LCD1, 3, 14, "Celsius");
  1269   001564  0EE7               	movlw	low _LCD1
  1270   001566  6E1B               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1271   001568  0E00               	movlw	high _LCD1
  1272   00156A  6E1C               	movwf	(lcd_4bit_send_string_pos@lcd+1)^0,c
  1273   00156C  0E03               	movlw	3
  1274   00156E  6E1D               	movwf	lcd_4bit_send_string_pos@row^0,c
  1275   001570  0E0E               	movlw	14
  1276   001572  6E1E               	movwf	lcd_4bit_send_string_pos@column^0,c
  1277   001574  0E33               	movlw	low STR_9
  1278   001576  6E1F               	movwf	lcd_4bit_send_string_pos@str^0,c
  1279   001578  0E10               	movlw	high STR_9
  1280   00157A  6E20               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1281   00157C  ECCB  F017         	call	_lcd_4bit_send_string_pos	;wreg free
  1282   001580  6E72               	movwf	_ret^0,c
  1283   001582                     l7666:
  1284                           
  1285                           ;application.c: 36:         ret = ADC_Get_Conversion_Blocking(&ADC1, ADC_CHANNEL_AN0, &l
      +                          m35_res_1);
  1286   001582  0EED               	movlw	low _ADC1
  1287   001584  6E0B               	movwf	ADC_Get_Conversion_Blocking@ADC_obj^0,c
  1288   001586  0E00               	movlw	high _ADC1
  1289   001588  6E0C               	movwf	(ADC_Get_Conversion_Blocking@ADC_obj+1)^0,c
  1290   00158A  0E00               	movlw	0
  1291   00158C  6E0D               	movwf	ADC_Get_Conversion_Blocking@channel^0,c
  1292   00158E  0E70               	movlw	low _lm35_res_1
  1293   001590  6E0E               	movwf	ADC_Get_Conversion_Blocking@Conversion_Result^0,c
  1294   001592  0E00               	movlw	high _lm35_res_1
  1295   001594  6E0F               	movwf	(ADC_Get_Conversion_Blocking@Conversion_Result+1)^0,c
  1296   001596  EC0B  F016         	call	_ADC_Get_Conversion_Blocking	;wreg free
  1297   00159A  6E72               	movwf	_ret^0,c
  1298   00159C                     
  1299                           ;application.c: 37:         ret = ADC_Get_Conversion_Blocking(&ADC1, ADC_CHANNEL_AN1, &l
      +                          m35_res_2);
  1300   00159C  0EED               	movlw	low _ADC1
  1301   00159E  6E0B               	movwf	ADC_Get_Conversion_Blocking@ADC_obj^0,c
  1302   0015A0  0E00               	movlw	high _ADC1
  1303   0015A2  6E0C               	movwf	(ADC_Get_Conversion_Blocking@ADC_obj+1)^0,c
  1304   0015A4  0E01               	movlw	1
  1305   0015A6  6E0D               	movwf	ADC_Get_Conversion_Blocking@channel^0,c
  1306   0015A8  0E6E               	movlw	low _lm35_res_2
  1307   0015AA  6E0E               	movwf	ADC_Get_Conversion_Blocking@Conversion_Result^0,c
  1308   0015AC  0E00               	movlw	high _lm35_res_2
  1309   0015AE  6E0F               	movwf	(ADC_Get_Conversion_Blocking@Conversion_Result+1)^0,c
  1310   0015B0  EC0B  F016         	call	_ADC_Get_Conversion_Blocking	;wreg free
  1311   0015B4  6E72               	movwf	_ret^0,c
  1312   0015B6                     
  1313                           ;application.c: 39:         lm35_res_1_Celsius = lm35_res_1 * 4.88f;
  1314   0015B6  0EF6               	movlw	246
  1315   0015B8  6E14               	movwf	___flmul@a^0,c
  1316   0015BA  0E28               	movlw	40
  1317   0015BC  6E15               	movwf	(___flmul@a+1)^0,c
  1318   0015BE  0E9C               	movlw	156
  1319   0015C0  6E16               	movwf	(___flmul@a+2)^0,c
  1320   0015C2  0E40               	movlw	64
  1321   0015C4  6E17               	movwf	(___flmul@a+3)^0,c
  1322   0015C6  C070  F002         	movff	_lm35_res_1,___xxtofl@val
  1323   0015CA  C071  F003         	movff	_lm35_res_1+1,___xxtofl@val+1
  1324   0015CE  6A04               	clrf	(___xxtofl@val+2)^0,c
  1325   0015D0  6A05               	clrf	(___xxtofl@val+3)^0,c
  1326   0015D2  0E00               	movlw	0
  1327   0015D4  EC10  F00D         	call	___xxtofl
  1328   0015D8  C002  F010         	movff	?___xxtofl,___flmul@b
  1329   0015DC  C003  F011         	movff	?___xxtofl+1,___flmul@b+1
  1330   0015E0  C004  F012         	movff	?___xxtofl+2,___flmul@b+2
  1331   0015E4  C005  F013         	movff	?___xxtofl+3,___flmul@b+3
  1332   0015E8  EC23  F008         	call	___flmul	;wreg free
  1333   0015EC  C010  F029         	movff	?___flmul,___fltol@f1
  1334   0015F0  C011  F02A         	movff	?___flmul+1,___fltol@f1+1
  1335   0015F4  C012  F02B         	movff	?___flmul+2,___fltol@f1+2
  1336   0015F8  C013  F02C         	movff	?___flmul+3,___fltol@f1+3
  1337   0015FC  ECDB  F011         	call	___fltol	;wreg free
  1338   001600  C029  F063         	movff	?___fltol,_lm35_res_1_Celsius
  1339   001604  C02A  F064         	movff	?___fltol+1,_lm35_res_1_Celsius+1
  1340   001608                     
  1341                           ;application.c: 40:         lm35_res_2_Celsius = lm35_res_2 * 4.88f;
  1342   001608  0EF6               	movlw	246
  1343   00160A  6E14               	movwf	___flmul@a^0,c
  1344   00160C  0E28               	movlw	40
  1345   00160E  6E15               	movwf	(___flmul@a+1)^0,c
  1346   001610  0E9C               	movlw	156
  1347   001612  6E16               	movwf	(___flmul@a+2)^0,c
  1348   001614  0E40               	movlw	64
  1349   001616  6E17               	movwf	(___flmul@a+3)^0,c
  1350   001618  C06E  F002         	movff	_lm35_res_2,___xxtofl@val
  1351   00161C  C06F  F003         	movff	_lm35_res_2+1,___xxtofl@val+1
  1352   001620  6A04               	clrf	(___xxtofl@val+2)^0,c
  1353   001622  6A05               	clrf	(___xxtofl@val+3)^0,c
  1354   001624  0E00               	movlw	0
  1355   001626  EC10  F00D         	call	___xxtofl
  1356   00162A  C002  F010         	movff	?___xxtofl,___flmul@b
  1357   00162E  C003  F011         	movff	?___xxtofl+1,___flmul@b+1
  1358   001632  C004  F012         	movff	?___xxtofl+2,___flmul@b+2
  1359   001636  C005  F013         	movff	?___xxtofl+3,___flmul@b+3
  1360   00163A  EC23  F008         	call	___flmul	;wreg free
  1361   00163E  C010  F029         	movff	?___flmul,___fltol@f1
  1362   001642  C011  F02A         	movff	?___flmul+1,___fltol@f1+1
  1363   001646  C012  F02B         	movff	?___flmul+2,___fltol@f1+2
  1364   00164A  C013  F02C         	movff	?___flmul+3,___fltol@f1+3
  1365   00164E  ECDB  F011         	call	___fltol	;wreg free
  1366   001652  C029  F061         	movff	?___fltol,_lm35_res_2_Celsius
  1367   001656  C02A  F062         	movff	?___fltol+1,_lm35_res_2_Celsius+1
  1368   00165A                     
  1369                           ;application.c: 42:         lm35_res_1_Celsius /= 10;
  1370   00165A  C063  F002         	movff	_lm35_res_1_Celsius,___lwdiv@dividend
  1371   00165E  C064  F003         	movff	_lm35_res_1_Celsius+1,___lwdiv@dividend+1
  1372   001662  0E00               	movlw	0
  1373   001664  6E05               	movwf	(___lwdiv@divisor+1)^0,c
  1374   001666  0E0A               	movlw	10
  1375   001668  6E04               	movwf	___lwdiv@divisor^0,c
  1376   00166A  ECD1  F015         	call	___lwdiv	;wreg free
  1377   00166E  C002  F063         	movff	?___lwdiv,_lm35_res_1_Celsius
  1378   001672  C003  F064         	movff	?___lwdiv+1,_lm35_res_1_Celsius+1
  1379   001676                     
  1380                           ;application.c: 43:         lm35_res_2_Celsius /= 10;
  1381   001676  C061  F002         	movff	_lm35_res_2_Celsius,___lwdiv@dividend
  1382   00167A  C062  F003         	movff	_lm35_res_2_Celsius+1,___lwdiv@dividend+1
  1383   00167E  0E00               	movlw	0
  1384   001680  6E05               	movwf	(___lwdiv@divisor+1)^0,c
  1385   001682  0E0A               	movlw	10
  1386   001684  6E04               	movwf	___lwdiv@divisor^0,c
  1387   001686  ECD1  F015         	call	___lwdiv	;wreg free
  1388   00168A  C002  F061         	movff	?___lwdiv,_lm35_res_2_Celsius
  1389   00168E  C003  F062         	movff	?___lwdiv+1,_lm35_res_2_Celsius+1
  1390   001692                     
  1391                           ;application.c: 46:         ret = convert_uint8_to_string(lm35_res_1_Celsius, Resultstr1
      +                          );
  1392   001692  0EC2               	movlw	low _Resultstr1
  1393   001694  6E56               	movwf	convert_uint8_to_string@str^0,c
  1394   001696  0E00               	movlw	high _Resultstr1
  1395   001698  6E57               	movwf	(convert_uint8_to_string@str+1)^0,c
  1396   00169A  5063               	movf	_lm35_res_1_Celsius^0,w,c
  1397   00169C  ECF4  F013         	call	_convert_uint8_to_string
  1398   0016A0  6E72               	movwf	_ret^0,c
  1399   0016A2                     
  1400                           ;application.c: 47:         ret = convert_uint8_to_string(lm35_res_2_Celsius, Resultstr2
      +                          );
  1401   0016A2  0EBB               	movlw	low _Resultstr2
  1402   0016A4  6E56               	movwf	convert_uint8_to_string@str^0,c
  1403   0016A6  0E00               	movlw	high _Resultstr2
  1404   0016A8  6E57               	movwf	(convert_uint8_to_string@str+1)^0,c
  1405   0016AA  5061               	movf	_lm35_res_2_Celsius^0,w,c
  1406   0016AC  ECF4  F013         	call	_convert_uint8_to_string
  1407   0016B0  6E72               	movwf	_ret^0,c
  1408   0016B2                     
  1409                           ;application.c: 50:         ret = lcd_4bit_send_string_pos(&LCD1, 2, 11, Resultstr1);
  1410   0016B2  0EE7               	movlw	low _LCD1
  1411   0016B4  6E1B               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1412   0016B6  0E00               	movlw	high _LCD1
  1413   0016B8  6E1C               	movwf	(lcd_4bit_send_string_pos@lcd+1)^0,c
  1414   0016BA  0E02               	movlw	2
  1415   0016BC  6E1D               	movwf	lcd_4bit_send_string_pos@row^0,c
  1416   0016BE  0E0B               	movlw	11
  1417   0016C0  6E1E               	movwf	lcd_4bit_send_string_pos@column^0,c
  1418   0016C2  0EC2               	movlw	low _Resultstr1
  1419   0016C4  6E1F               	movwf	lcd_4bit_send_string_pos@str^0,c
  1420   0016C6  0E00               	movlw	high _Resultstr1
  1421   0016C8  6E20               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1422   0016CA  ECCB  F017         	call	_lcd_4bit_send_string_pos	;wreg free
  1423   0016CE  6E72               	movwf	_ret^0,c
  1424   0016D0                     
  1425                           ;application.c: 51:         ret = lcd_4bit_send_string_pos(&LCD1, 3, 11, Resultstr2);
  1426   0016D0  0EE7               	movlw	low _LCD1
  1427   0016D2  6E1B               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1428   0016D4  0E00               	movlw	high _LCD1
  1429   0016D6  6E1C               	movwf	(lcd_4bit_send_string_pos@lcd+1)^0,c
  1430   0016D8  0E03               	movlw	3
  1431   0016DA  6E1D               	movwf	lcd_4bit_send_string_pos@row^0,c
  1432   0016DC  0E0B               	movlw	11
  1433   0016DE  6E1E               	movwf	lcd_4bit_send_string_pos@column^0,c
  1434   0016E0  0EBB               	movlw	low _Resultstr2
  1435   0016E2  6E1F               	movwf	lcd_4bit_send_string_pos@str^0,c
  1436   0016E4  0E00               	movlw	high _Resultstr2
  1437   0016E6  6E20               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1438   0016E8  ECCB  F017         	call	_lcd_4bit_send_string_pos	;wreg free
  1439   0016EC  6E72               	movwf	_ret^0,c
  1440   0016EE                     
  1441                           ;application.c: 54:         if(lm35_res_1_Celsius > 25){
  1442   0016EE  5064               	movf	(_lm35_res_1_Celsius+1)^0,w,c
  1443   0016F0  E109               	bnz	u7160
  1444   0016F2  0E1A               	movlw	26
  1445   0016F4  5C63               	subwf	_lm35_res_1_Celsius^0,w,c
  1446   0016F6  A0D8               	btfss	status,0,c
  1447   0016F8  EF80  F00B         	goto	u7161
  1448   0016FC  EF82  F00B         	goto	u7160
  1449   001700                     u7161:
  1450   001700  EF8A  F00B         	goto	l7690
  1451   001704                     u7160:
  1452   001704                     
  1453                           ;application.c: 55:             dc_motor_move_left(&dc_motor_01);
  1454   001704  0EF3               	movlw	low _dc_motor_01
  1455   001706  6E0C               	movwf	dc_motor_move_left@_dc_motor^0,c
  1456   001708  0E00               	movlw	high _dc_motor_01
  1457   00170A  6E0D               	movwf	(dc_motor_move_left@_dc_motor+1)^0,c
  1458   00170C  EC53  F018         	call	_dc_motor_move_left	;wreg free
  1459                           
  1460                           ;application.c: 56:         }
  1461   001710  EF90  F00B         	goto	l7692
  1462   001714                     l7690:
  1463                           
  1464                           ;application.c: 58:             dc_motor_stop(&dc_motor_01);
  1465   001714  0EF3               	movlw	low _dc_motor_01
  1466   001716  6E0C               	movwf	dc_motor_stop@_dc_motor^0,c
  1467   001718  0E00               	movlw	high _dc_motor_01
  1468   00171A  6E0D               	movwf	(dc_motor_stop@_dc_motor+1)^0,c
  1469   00171C  EC33  F018         	call	_dc_motor_stop	;wreg free
  1470   001720                     l7692:
  1471                           
  1472                           ;application.c: 61:         if(lm35_res_2_Celsius > 25){
  1473   001720  5062               	movf	(_lm35_res_2_Celsius+1)^0,w,c
  1474   001722  E109               	bnz	u7170
  1475   001724  0E1A               	movlw	26
  1476   001726  5C61               	subwf	_lm35_res_2_Celsius^0,w,c
  1477   001728  A0D8               	btfss	status,0,c
  1478   00172A  EF99  F00B         	goto	u7171
  1479   00172E  EF9B  F00B         	goto	u7170
  1480   001732                     u7171:
  1481   001732  EFA3  F00B         	goto	l7696
  1482   001736                     u7170:
  1483   001736                     
  1484                           ;application.c: 62:             dc_motor_move_left(&dc_motor_02);
  1485   001736  0EF1               	movlw	low _dc_motor_02
  1486   001738  6E0C               	movwf	dc_motor_move_left@_dc_motor^0,c
  1487   00173A  0E00               	movlw	high _dc_motor_02
  1488   00173C  6E0D               	movwf	(dc_motor_move_left@_dc_motor+1)^0,c
  1489   00173E  EC53  F018         	call	_dc_motor_move_left	;wreg free
  1490                           
  1491                           ;application.c: 63:         }
  1492   001742  EFC1  F00A         	goto	l7666
  1493   001746                     l7696:
  1494                           
  1495                           ;application.c: 65:             dc_motor_stop(&dc_motor_02);
  1496   001746  0EF1               	movlw	low _dc_motor_02
  1497   001748  6E0C               	movwf	dc_motor_stop@_dc_motor^0,c
  1498   00174A  0E00               	movlw	high _dc_motor_02
  1499   00174C  6E0D               	movwf	(dc_motor_stop@_dc_motor+1)^0,c
  1500   00174E  EC33  F018         	call	_dc_motor_stop	;wreg free
  1501   001752  EFC1  F00A         	goto	l7666
  1502   001756  EF07  F000         	goto	start
  1503   00175A                     __end_of_main:
  1504                           	callstack 0
  1505                           
  1506 ;; *************** function _lcd_4bit_send_string_pos *****************
  1507 ;; Defined at:
  1508 ;;		line 169 in file "ECU_layer/Character_LCD/ecu_chr_lcd.c"
  1509 ;; Parameters:    Size  Location     Type
  1510 ;;  lcd             2   26[COMRAM] PTR const struct .
  1511 ;;		 -> LCD1(6), 
  1512 ;;  row             1   28[COMRAM] unsigned char 
  1513 ;;  column          1   29[COMRAM] unsigned char 
  1514 ;;  str             2   30[COMRAM] PTR unsigned char 
  1515 ;;		 -> Resultstr2(7), Resultstr1(7), STR_10(8), STR_9(8), 
  1516 ;;		 -> STR_8(11), STR_7(11), STR_6(7), STR_5(11), 
  1517 ;;		 -> STR_4(12), 
  1518 ;; Auto vars:     Size  Location     Type
  1519 ;;  ret             1   32[COMRAM] unsigned char 
  1520 ;; Return value:  Size  Location     Type
  1521 ;;                  1    wreg      unsigned char 
  1522 ;; Registers used:
  1523 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1524 ;; Tracked objects:
  1525 ;;		On entry : 0/0
  1526 ;;		On exit  : 0/0
  1527 ;;		Unchanged: 0/0
  1528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1529 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1530 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1532 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1533 ;;Total ram usage:        7 bytes
  1534 ;; Hardware stack levels used: 1
  1535 ;; Hardware stack levels required when called: 6
  1536 ;; This function calls:
  1537 ;;		_lcd_4bit_send_string
  1538 ;;		_lcd_4bit_set_cursor
  1539 ;; This function is called by:
  1540 ;;		_main
  1541 ;; This function uses a non-reentrant model
  1542 ;;
  1543                           
  1544                           	psect	text1
  1545   002F96                     __ptext1:
  1546                           	callstack 0
  1547   002F96                     _lcd_4bit_send_string_pos:
  1548                           	callstack 24
  1549   002F96                     
  1550                           ;ECU_layer/Character_LCD/ecu_chr_lcd.c: 171:     if(((void*)0) == lcd)
  1551   002F96  501B               	movf	lcd_4bit_send_string_pos@lcd^0,w,c
  1552   002F98  101C               	iorwf	(lcd_4bit_send_string_pos@lcd+1)^0,w,c
  1553   002F9A  A4D8               	btfss	status,2,c
  1554   002F9C  EFD2  F017         	goto	u4891
  1555   002FA0  EFD4  F017         	goto	u4890
  1556   002FA4                     u4891:
  1557   002FA4  EFD8  F017         	goto	l6052
  1558   002FA8                     u4890:
  1559   002FA8                     
  1560                           ;ECU_layer/Character_LCD/ecu_chr_lcd.c: 172:     {;ECU_layer/Character_LCD/ecu_chr_lcd.c
      +                          : 173:         ret = (Std_ReturnType)0x00;
  1561   002FA8  0E00               	movlw	0
  1562   002FAA  6E21               	movwf	lcd_4bit_send_string_pos@ret^0,c
  1563                           
  1564                           ;ECU_layer/Character_LCD/ecu_chr_lcd.c: 174:     }else
  1565   002FAC  EFED  F017         	goto	l6056
  1566   002FB0                     l6052:
  1567   002FB0  C01B  F014         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_set_cursor@lcd
  1568   002FB4  C01C  F015         	movff	lcd_4bit_send_string_pos@lcd+1,lcd_4bit_set_cursor@lcd+1
  1569   002FB8  C01D  F016         	movff	lcd_4bit_send_string_pos@row,lcd_4bit_set_cursor@row
  1570   002FBC  C01E  F017         	movff	lcd_4bit_send_string_pos@column,lcd_4bit_set_cursor@column
  1571   002FC0  ECA9  F014         	call	_lcd_4bit_set_cursor	;wreg free
  1572   002FC4                     
  1573                           ;ECU_layer/Character_LCD/ecu_chr_lcd.c: 177:         ret = lcd_4bit_send_string(lcd, str
      +                          );
  1574   002FC4  C01B  F014         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_send_string@lcd
  1575   002FC8  C01C  F015         	movff	lcd_4bit_send_string_pos@lcd+1,lcd_4bit_send_string@lcd+1
  1576   002FCC  C01F  F016         	movff	lcd_4bit_send_string_pos@str,lcd_4bit_send_string@str
  1577   002FD0  C020  F017         	movff	lcd_4bit_send_string_pos@str+1,lcd_4bit_send_string@str+1
  1578   002FD4  EC4F  F015         	call	_lcd_4bit_send_string	;wreg free
  1579   002FD8  6E21               	movwf	lcd_4bit_send_string_pos@ret^0,c
  1580   002FDA                     l6056:
  1581                           
  1582                           ;ECU_layer/Character_LCD/ecu_chr_lcd.c: 179:     return ret;
  1583   002FDA  5021               	movf	lcd_4bit_send_string_pos@ret^0,w,c
  1584   002FDC  0012               	return		;funcret
  1585   002FDE                     __end_of_lcd_4bit_send_string_pos:
  1586                           	callstack 0
  1587                           
  1588 ;; *************** function _lcd_4bit_set_cursor *****************
  1589 ;; Defined at:
  1590 ;;		line 532 in file "ECU_layer/Character_LCD/ecu_chr_lcd.c"
  1591 ;; Parameters:    Size  Location     Type
  1592 ;;  lcd             2   19[COMRAM] PTR const struct .
  1593 ;;		 -> LCD1(6), 
  1594 ;;  row             1   21[COMRAM] unsigned char 
  1595 ;;  column          1   22[COMRAM] unsigned char 
  1596 ;; Auto vars:     Size  Location     Type
  1597 ;;  ret             1   25[COMRAM] unsigned char 
  1598 ;; Return value:  Size  Location     Type
  1599 ;;                  1    wreg      unsigned char 
  1600 ;; Registers used:
  1601 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1602 ;; Tracked objects:
  1603 ;;		On entry : 0/0
  1604 ;;		On exit  : 0/0
  1605 ;;		Unchanged: 0/0
  1606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1607 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1608 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1609 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1610 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1611 ;;Total ram usage:        7 bytes
  1612 ;; Hardware stack levels used: 1
  1613 ;; Hardware stack levels required when called: 5
  1614 ;; This function calls:
  1615 ;;		_lcd_4bit_send_command
  1616 ;; This function is called by:
  1617 ;;		_lcd_4bit_send_string_pos
  1618 ;;		_lcd_4bit_send_char_data_pos
  1619 ;; This function uses a non-reentrant model
  1620 ;;
  1621                           
  1622                           	psect	text2
  1623   002952                     __ptext2:
  1624                           	callstack 0
  1625   002952                     _lcd_4bit_set_cursor:
  1626                           	callstack 24
  1627   002952                     
  1628                           ;ECU_layer/Character_LCD/ecu_chr_lcd.c: 533:     Std_ReturnType ret = (Std_ReturnType)0x
      +                          01;
  1629   002952  0E01               	movlw	1
  1630   002954  6E1A               	movwf	lcd_4bit_set_cursor@ret^0,c
  1631   002956                     
  1632                           ;ECU_layer/Character_LCD/ecu_chr_lcd.c: 534:     column--;
  1633   002956  0617               	decf	lcd_4bit_set_cursor@column^0,f,c
  1634                           
  1635                           ;ECU_layer/Character_LCD/ecu_chr_lcd.c: 535:     switch(row)
  1636   002958  EFDE  F014         	goto	l5868
  1637   00295C                     l5860:
  1638   00295C  C014  F010         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1639   002960  C015  F011         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  1640   002964  5017               	movf	lcd_4bit_set_cursor@column^0,w,c
  1641   002966  0F80               	addlw	128
  1642   002968  6E12               	movwf	lcd_4bit_send_command@command^0,c
  1643   00296A  EC7E  F016         	call	_lcd_4bit_send_command	;wreg free
  1644   00296E  6E1A               	movwf	lcd_4bit_set_cursor@ret^0,c
  1645   002970  EFFB  F014         	goto	l5870
  1646   002974                     l5862:
  1647   002974  C014  F010         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1648   002978  C015  F011         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  1649   00297C  5017               	movf	lcd_4bit_set_cursor@column^0,w,c
  1650   00297E  0FC0               	addlw	192
  1651   002980  6E12               	movwf	lcd_4bit_send_command@command^0,c
  1652   002982  EC7E  F016         	call	_lcd_4bit_send_command	;wreg free
  1653   002986  6E1A               	movwf	lcd_4bit_set_cursor@ret^0,c
  1654   002988  EFFB  F014         	goto	l5870
  1655   00298C                     l5864:
  1656   00298C  C014  F010         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1657   002990  C015  F011         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  1658   002994  5017               	movf	lcd_4bit_set_cursor@column^0,w,c
  1659   002996  0F94               	addlw	148
  1660   002998  6E12               	movwf	lcd_4bit_send_command@command^0,c
  1661   00299A  EC7E  F016         	call	_lcd_4bit_send_command	;wreg free
  1662   00299E  6E1A               	movwf	lcd_4bit_set_cursor@ret^0,c
  1663   0029A0  EFFB  F014         	goto	l5870
  1664   0029A4                     l5866:
  1665   0029A4  C014  F010         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1666   0029A8  C015  F011         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  1667   0029AC  5017               	movf	lcd_4bit_set_cursor@column^0,w,c
  1668   0029AE  0FD4               	addlw	212
  1669   0029B0  6E12               	movwf	lcd_4bit_send_command@command^0,c
  1670   0029B2  EC7E  F016         	call	_lcd_4bit_send_command	;wreg free
  1671   0029B6  6E1A               	movwf	lcd_4bit_set_cursor@ret^0,c
  1672   0029B8  EFFB  F014         	goto	l5870
  1673   0029BC                     l5868:
  1674   0029BC  5016               	movf	lcd_4bit_set_cursor@row^0,w,c
  1675   0029BE  6E18               	movwf	??_lcd_4bit_set_cursor^0,c
  1676   0029C0  6A19               	clrf	(??_lcd_4bit_set_cursor+1)^0,c
  1677                           
  1678                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1679                           ; Switch size 1, requested type "simple"
  1680                           ; Number of cases is 1, Range of values is 0 to 0
  1681                           ; switch strategies available:
  1682                           ; Name         Instructions Cycles
  1683                           ; simple_byte            4     3 (average)
  1684                           ;	Chosen strategy is simple_byte
  1685   0029C2  5019               	movf	(??_lcd_4bit_set_cursor+1)^0,w,c
  1686   0029C4  0A00               	xorlw	0	; case 0
  1687   0029C6  B4D8               	btfsc	status,2,c
  1688   0029C8  EFE8  F014         	goto	l7778
  1689   0029CC  EFFB  F014         	goto	l5870
  1690   0029D0                     l7778:
  1691                           
  1692                           ; Switch size 1, requested type "simple"
  1693                           ; Number of cases is 4, Range of values is 1 to 4
  1694                           ; switch strategies available:
  1695                           ; Name         Instructions Cycles
  1696                           ; simple_byte           13     7 (average)
  1697                           ;	Chosen strategy is simple_byte
  1698   0029D0  5018               	movf	??_lcd_4bit_set_cursor^0,w,c
  1699   0029D2  0A01               	xorlw	1	; case 1
  1700   0029D4  B4D8               	btfsc	status,2,c
  1701   0029D6  EFAE  F014         	goto	l5860
  1702   0029DA  0A03               	xorlw	3	; case 2
  1703   0029DC  B4D8               	btfsc	status,2,c
  1704   0029DE  EFBA  F014         	goto	l5862
  1705   0029E2  0A01               	xorlw	1	; case 3
  1706   0029E4  B4D8               	btfsc	status,2,c
  1707   0029E6  EFC6  F014         	goto	l5864
  1708   0029EA  0A07               	xorlw	7	; case 4
  1709   0029EC  B4D8               	btfsc	status,2,c
  1710   0029EE  EFD2  F014         	goto	l5866
  1711   0029F2  EFFB  F014         	goto	l5870
  1712   0029F6                     l5870:
  1713                           
  1714                           ;ECU_layer/Character_LCD/ecu_chr_lcd.c: 543:     return ret;
  1715   0029F6  501A               	movf	lcd_4bit_set_cursor@ret^0,w,c
  1716   0029F8  0012               	return		;funcret
  1717   0029FA                     __end_of_lcd_4bit_set_cursor:
  1718                           	callstack 0
  1719                           
  1720 ;; *************** function _lcd_4bit_send_string *****************
  1721 ;; Defined at:
  1722 ;;		line 145 in file "ECU_layer/Character_LCD/ecu_chr_lcd.c"
  1723 ;; Parameters:    Size  Location     Type
  1724 ;;  lcd             2   19[COMRAM] PTR const struct .
  1725 ;;		 -> LCD1(6), 
  1726 ;;  str             2   21[COMRAM] PTR unsigned char 
  1727 ;;		 -> Resultstr2(7), Resultstr1(7), STR_10(8), STR_9(8), 
  1728 ;;		 -> STR_8(11), STR_7(11), STR_6(7), STR_5(11), 
  1729 ;;		 -> STR_4(12), 
  1730 ;; Auto vars:     Size  Location     Type
  1731 ;;  ret             1   23[COMRAM] unsigned char 
  1732 ;; Return value:  Size  Location     Type
  1733 ;;                  1    wreg      unsigned char 
  1734 ;; Registers used:
  1735 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1736 ;; Tracked objects:
  1737 ;;		On entry : 0/0
  1738 ;;		On exit  : 0/0
  1739 ;;		Unchanged: 0/0
  1740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1741 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1742 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1744 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1745 ;;Total ram usage:        5 bytes
  1746 ;; Hardware stack levels used: 1
  1747 ;; Hardware stack levels required when called: 5
  1748 ;; This function calls:
  1749 ;;		_lcd_4bit_send_char_data
  1750 ;; This function is called by:
  1751 ;;		_lcd_4bit_send_string_pos
  1752 ;; This function uses a non-reentrant model
  1753 ;;
  1754                           
  1755                           	psect	text3
  1756   002A9E                     __ptext3:
  1757                           	callstack 0
  1758   002A9E                     _lcd_4bit_send_string:
  1759                           	callstack 24
  1760   002A9E                     
  1761                           ;ECU_layer/Character_LCD/ecu_chr_lcd.c: 146:     Std_ReturnType ret = (Std_ReturnType)0x
      +                          01;
  1762   002A9E  0E01               	movlw	1
  1763   002AA0  6E18               	movwf	lcd_4bit_send_string@ret^0,c
  1764   002AA2                     
  1765                           ;ECU_layer/Character_LCD/ecu_chr_lcd.c: 147:     if(((void*)0) == lcd)
  1766   002AA2  5014               	movf	lcd_4bit_send_string@lcd^0,w,c
  1767   002AA4  1015               	iorwf	(lcd_4bit_send_string@lcd+1)^0,w,c
  1768   002AA6  A4D8               	btfss	status,2,c
  1769   002AA8  EF58  F015         	goto	u4691
  1770   002AAC  EF5A  F015         	goto	u4690
  1771   002AB0                     u4691:
  1772   002AB0  EF79  F015         	goto	l5888
  1773   002AB4                     u4690:
  1774   002AB4                     
  1775                           ;ECU_layer/Character_LCD/ecu_chr_lcd.c: 148:     {;ECU_layer/Character_LCD/ecu_chr_lcd.c
      +                          : 149:         ret = (Std_ReturnType)0x00;
  1776   002AB4  0E00               	movlw	0
  1777   002AB6  6E18               	movwf	lcd_4bit_send_string@ret^0,c
  1778                           
  1779                           ;ECU_layer/Character_LCD/ecu_chr_lcd.c: 150:     }else
  1780   002AB8  EF92  F015         	goto	l5890
  1781   002ABC                     l5884:
  1782                           
  1783                           ;ECU_layer/Character_LCD/ecu_chr_lcd.c: 153:         {;ECU_layer/Character_LCD/ecu_chr_l
      +                          cd.c: 154:             ret = lcd_4bit_send_char_data(lcd, *str++);
  1784   002ABC  C014  F010         	movff	lcd_4bit_send_string@lcd,lcd_4bit_send_char_data@lcd
  1785   002AC0  C015  F011         	movff	lcd_4bit_send_string@lcd+1,lcd_4bit_send_char_data@lcd+1
  1786   002AC4  C016  FFF6         	movff	lcd_4bit_send_string@str,tblptrl
  1787   002AC8  C017  FFF7         	movff	lcd_4bit_send_string@str+1,tblptrh
  1788   002ACC  0E00               	movlw	low (__smallconst shr (0+16))
  1789   002ACE  6EF8               	movwf	tblptru,c
  1790   002AD0  0E0F               	movlw	(high __ramtop+-1)
  1791   002AD2  64F7               	cpfsgt	tblptrh,c
  1792   002AD4  D003               	bra	u4707
  1793   002AD6  0008               	tblrd		*
  1794   002AD8  50F5               	movf	tablat,w,c
  1795   002ADA  D005               	bra	u4700
  1796   002ADC                     u4707:
  1797   002ADC  CFF6 FFE9          	movff	tblptrl,fsr0l
  1798   002AE0  CFF7 FFEA          	movff	tblptrh,fsr0h
  1799   002AE4  50EF               	movf	indf0,w,c
  1800   002AE6                     u4700:
  1801   002AE6  6E12               	movwf	lcd_4bit_send_char_data@data^0,c
  1802   002AE8  EC45  F016         	call	_lcd_4bit_send_char_data	;wreg free
  1803   002AEC  6E18               	movwf	lcd_4bit_send_string@ret^0,c
  1804   002AEE  4A16               	infsnz	lcd_4bit_send_string@str^0,f,c
  1805   002AF0  2A17               	incf	(lcd_4bit_send_string@str+1)^0,f,c
  1806   002AF2                     l5888:
  1807                           
  1808                           ;ECU_layer/Character_LCD/ecu_chr_lcd.c: 152:         while(*str)
  1809   002AF2  C016  FFF6         	movff	lcd_4bit_send_string@str,tblptrl
  1810   002AF6  C017  FFF7         	movff	lcd_4bit_send_string@str+1,tblptrh
  1811   002AFA  0E00               	movlw	low (__smallconst shr (0+16))
  1812   002AFC  6EF8               	movwf	tblptru,c
  1813   002AFE  0E0F               	movlw	(high __ramtop+-1)
  1814   002B00  64F7               	cpfsgt	tblptrh,c
  1815   002B02  D003               	bra	u4717
  1816   002B04  0008               	tblrd		*
  1817   002B06  50F5               	movf	tablat,w,c
  1818   002B08  D005               	bra	u4710
  1819   002B0A                     u4717:
  1820   002B0A  CFF6 FFE9          	movff	tblptrl,fsr0l
  1821   002B0E  CFF7 FFEA          	movff	tblptrh,fsr0h
  1822   002B12  50EF               	movf	indf0,w,c
  1823   002B14                     u4710:
  1824   002B14  0900               	iorlw	0
  1825   002B16  A4D8               	btfss	status,2,c
  1826   002B18  EF90  F015         	goto	u4721
  1827   002B1C  EF92  F015         	goto	u4720
  1828   002B20                     u4721:
  1829   002B20  EF5E  F015         	goto	l5884
  1830   002B24                     u4720:
  1831   002B24                     l5890:
  1832                           
  1833                           ;ECU_layer/Character_LCD/ecu_chr_lcd.c: 157:     return ret;
  1834   002B24  5018               	movf	lcd_4bit_send_string@ret^0,w,c
  1835   002B26  0012               	return		;funcret
  1836   002B28                     __end_of_lcd_4bit_send_string:
  1837                           	callstack 0
  1838                           
  1839 ;; *************** function _lcd_4bit_send_char_data *****************
  1840 ;; Defined at:
  1841 ;;		line 92 in file "ECU_layer/Character_LCD/ecu_chr_lcd.c"
  1842 ;; Parameters:    Size  Location     Type
  1843 ;;  lcd             2   15[COMRAM] PTR const struct .
  1844 ;;		 -> LCD1(6), 
  1845 ;;  data            1   17[COMRAM] unsigned char 
  1846 ;; Auto vars:     Size  Location     Type
  1847 ;;  ret             1   18[COMRAM] unsigned char 
  1848 ;; Return value:  Size  Location     Type
  1849 ;;                  1    wreg      unsigned char 
  1850 ;; Registers used:
  1851 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1852 ;; Tracked objects:
  1853 ;;		On entry : 0/0
  1854 ;;		On exit  : 0/0
  1855 ;;		Unchanged: 0/0
  1856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1857 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1858 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1860 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1861 ;;Total ram usage:        4 bytes
  1862 ;; Hardware stack levels used: 1
  1863 ;; Hardware stack levels required when called: 4
  1864 ;; This function calls:
  1865 ;;		_gpio_pin_write_logic
  1866 ;;		_lcd_4bit_send_enable_signal
  1867 ;;		_lcd_send_4bit
  1868 ;; This function is called by:
  1869 ;;		_lcd_4bit_send_string
  1870 ;;		_lcd_4bit_send_char_data_pos
  1871 ;;		_lcd_4bit_send_custom_char
  1872 ;; This function uses a non-reentrant model
  1873 ;;
  1874                           
  1875                           	psect	text4
  1876   002C8A                     __ptext4:
  1877                           	callstack 0
  1878   002C8A                     _lcd_4bit_send_char_data:
  1879                           	callstack 24
  1880   002C8A                     
  1881                           ;ECU_layer/Character_LCD/ecu_chr_lcd.c: 94:     if(((void*)0) == lcd)
  1882   002C8A  5010               	movf	lcd_4bit_send_char_data@lcd^0,w,c
  1883   002C8C  1011               	iorwf	(lcd_4bit_send_char_data@lcd+1)^0,w,c
  1884   002C8E  A4D8               	btfss	status,2,c
  1885   002C90  EF4C  F016         	goto	u4651
  1886   002C94  EF4E  F016         	goto	u4650
  1887   002C98                     u4651:
  1888   002C98  EF52  F016         	goto	l5808
  1889   002C9C                     u4650:
  1890   002C9C                     
  1891                           ;ECU_layer/Character_LCD/ecu_chr_lcd.c: 95:     {;ECU_layer/Character_LCD/ecu_chr_lcd.c:
      +                           96:         ret = (Std_ReturnType)0x00;
  1892   002C9C  0E00               	movlw	0
  1893   002C9E  6E13               	movwf	lcd_4bit_send_char_data@ret^0,c
  1894                           
  1895                           ;ECU_layer/Character_LCD/ecu_chr_lcd.c: 97:     }else
  1896   002CA0  EF7C  F016         	goto	l5810
  1897   002CA4                     l5808:
  1898                           
  1899                           ;ECU_layer/Character_LCD/ecu_chr_lcd.c: 98:     {;ECU_layer/Character_LCD/ecu_chr_lcd.c:
      +                           101:         ret = gpio_pin_write_logic(&(lcd->lcd_rs_pin), GPIO_HIGH);
  1900   002CA4  C010  F002         	movff	lcd_4bit_send_char_data@lcd,gpio_pin_write_logic@_pin_config
  1901   002CA8  C011  F003         	movff	lcd_4bit_send_char_data@lcd+1,gpio_pin_write_logic@_pin_config+1
  1902   002CAC  0E01               	movlw	1
  1903   002CAE  6E04               	movwf	gpio_pin_write_logic@logic^0,c
  1904   002CB0  EC45  F011         	call	_gpio_pin_write_logic	;wreg free
  1905   002CB4  6E13               	movwf	lcd_4bit_send_char_data@ret^0,c
  1906                           
  1907                           ;ECU_layer/Character_LCD/ecu_chr_lcd.c: 104:         ret = lcd_send_4bit(lcd, data >> 4)
      +                          ;
  1908   002CB6  C010  F00C         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bit@lcd
  1909   002CBA  C011  F00D         	movff	lcd_4bit_send_char_data@lcd+1,lcd_send_4bit@lcd+1
  1910   002CBE  3812               	swapf	lcd_4bit_send_char_data@data^0,w,c
  1911   002CC0  0B0F               	andlw	15
  1912   002CC2  6E0E               	movwf	lcd_send_4bit@command^0,c
  1913   002CC4  EC24  F017         	call	_lcd_send_4bit	;wreg free
  1914   002CC8  6E13               	movwf	lcd_4bit_send_char_data@ret^0,c
  1915                           
  1916                           ;ECU_layer/Character_LCD/ecu_chr_lcd.c: 106:         ret = lcd_4bit_send_enable_signal(l
      +                          cd);
  1917   002CCA  C010  F00C         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_enable_signal@lcd
  1918   002CCE  C011  F00D         	movff	lcd_4bit_send_char_data@lcd+1,lcd_4bit_send_enable_signal@lcd+1
  1919   002CD2  ECCF  F018         	call	_lcd_4bit_send_enable_signal	;wreg free
  1920   002CD6  6E13               	movwf	lcd_4bit_send_char_data@ret^0,c
  1921                           
  1922                           ;ECU_layer/Character_LCD/ecu_chr_lcd.c: 109:         ret = lcd_send_4bit(lcd, data);
  1923   002CD8  C010  F00C         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bit@lcd
  1924   002CDC  C011  F00D         	movff	lcd_4bit_send_char_data@lcd+1,lcd_send_4bit@lcd+1
  1925   002CE0  C012  F00E         	movff	lcd_4bit_send_char_data@data,lcd_send_4bit@command
  1926   002CE4  EC24  F017         	call	_lcd_send_4bit	;wreg free
  1927   002CE8  6E13               	movwf	lcd_4bit_send_char_data@ret^0,c
  1928                           
  1929                           ;ECU_layer/Character_LCD/ecu_chr_lcd.c: 111:         ret = lcd_4bit_send_enable_signal(l
      +                          cd);
  1930   002CEA  C010  F00C         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_enable_signal@lcd
  1931   002CEE  C011  F00D         	movff	lcd_4bit_send_char_data@lcd+1,lcd_4bit_send_enable_signal@lcd+1
  1932   002CF2  ECCF  F018         	call	_lcd_4bit_send_enable_signal	;wreg free
  1933   002CF6  6E13               	movwf	lcd_4bit_send_char_data@ret^0,c
  1934   002CF8                     l5810:
  1935                           
  1936                           ;ECU_layer/Character_LCD/ecu_chr_lcd.c: 113:     return ret;
  1937   002CF8  5013               	movf	lcd_4bit_send_char_data@ret^0,w,c
  1938   002CFA  0012               	return		;funcret
  1939   002CFC                     __end_of_lcd_4bit_send_char_data:
  1940                           	callstack 0
  1941                           
  1942 ;; *************** function _dc_motor_stop *****************
  1943 ;; Defined at:
  1944 ;;		line 74 in file "ECU_layer/DC_Motor/ecu_dc_motor.c"
  1945 ;; Parameters:    Size  Location     Type
  1946 ;;  _dc_motor       2   11[COMRAM] PTR const struct .
  1947 ;;		 -> dc_motor_02(2), dc_motor_01(2), 
  1948 ;; Auto vars:     Size  Location     Type
  1949 ;;  ret             1   13[COMRAM] unsigned char 
  1950 ;; Return value:  Size  Location     Type
  1951 ;;                  1    wreg      unsigned char 
  1952 ;; Registers used:
  1953 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1954 ;; Tracked objects:
  1955 ;;		On entry : 0/0
  1956 ;;		On exit  : 0/0
  1957 ;;		Unchanged: 0/0
  1958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1959 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1960 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1962 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1963 ;;Total ram usage:        3 bytes
  1964 ;; Hardware stack levels used: 1
  1965 ;; Hardware stack levels required when called: 3
  1966 ;; This function calls:
  1967 ;;		_gpio_pin_write_logic
  1968 ;; This function is called by:
  1969 ;;		_main
  1970 ;; This function uses a non-reentrant model
  1971 ;;
  1972                           
  1973                           	psect	text5
  1974   003066                     __ptext5:
  1975                           	callstack 0
  1976   003066                     _dc_motor_stop:
  1977                           	callstack 27
  1978   003066                     
  1979                           ;ECU_layer/DC_Motor/ecu_dc_motor.c: 76:     if(((void*)0) == _dc_motor)
  1980   003066  500C               	movf	dc_motor_stop@_dc_motor^0,w,c
  1981   003068  100D               	iorwf	(dc_motor_stop@_dc_motor+1)^0,w,c
  1982   00306A  A4D8               	btfss	status,2,c
  1983   00306C  EF3A  F018         	goto	u4991
  1984   003070  EF3C  F018         	goto	u4990
  1985   003074                     u4991:
  1986   003074  EF3E  F018         	goto	l6152
  1987   003078                     u4990:
  1988   003078                     
  1989                           ;ECU_layer/DC_Motor/ecu_dc_motor.c: 79:     }else
  1990   003078  EF52  F018         	goto	l235
  1991   00307C                     l6152:
  1992                           
  1993                           ;ECU_layer/DC_Motor/ecu_dc_motor.c: 80:     {;ECU_layer/DC_Motor/ecu_dc_motor.c: 81:    
      +                               ret = gpio_pin_write_logic(&(_dc_motor->dc_motor_pin[0x00U]), GPIO_LOW);
  1994   00307C  C00C  F002         	movff	dc_motor_stop@_dc_motor,gpio_pin_write_logic@_pin_config
  1995   003080  C00D  F003         	movff	dc_motor_stop@_dc_motor+1,gpio_pin_write_logic@_pin_config+1
  1996   003084  0E00               	movlw	0
  1997   003086  6E04               	movwf	gpio_pin_write_logic@logic^0,c
  1998   003088  EC45  F011         	call	_gpio_pin_write_logic	;wreg free
  1999   00308C  6E0E               	movwf	dc_motor_stop@ret^0,c
  2000                           
  2001                           ;ECU_layer/DC_Motor/ecu_dc_motor.c: 82:         ret = gpio_pin_write_logic(&(_dc_motor->
      +                          dc_motor_pin[0x01U]), GPIO_LOW);
  2002   00308E  0E01               	movlw	1
  2003   003090  240C               	addwf	dc_motor_stop@_dc_motor^0,w,c
  2004   003092  6E02               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2005   003094  0E00               	movlw	0
  2006   003096  200D               	addwfc	(dc_motor_stop@_dc_motor+1)^0,w,c
  2007   003098  6E03               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  2008   00309A  0E00               	movlw	0
  2009   00309C  6E04               	movwf	gpio_pin_write_logic@logic^0,c
  2010   00309E  EC45  F011         	call	_gpio_pin_write_logic	;wreg free
  2011   0030A2  6E0E               	movwf	dc_motor_stop@ret^0,c
  2012   0030A4                     l235:
  2013   0030A4  0012               	return		;funcret
  2014   0030A6                     __end_of_dc_motor_stop:
  2015                           	callstack 0
  2016                           
  2017 ;; *************** function _dc_motor_move_left *****************
  2018 ;; Defined at:
  2019 ;;		line 55 in file "ECU_layer/DC_Motor/ecu_dc_motor.c"
  2020 ;; Parameters:    Size  Location     Type
  2021 ;;  _dc_motor       2   11[COMRAM] PTR const struct .
  2022 ;;		 -> dc_motor_02(2), dc_motor_01(2), 
  2023 ;; Auto vars:     Size  Location     Type
  2024 ;;  ret             1   13[COMRAM] unsigned char 
  2025 ;; Return value:  Size  Location     Type
  2026 ;;                  1    wreg      unsigned char 
  2027 ;; Registers used:
  2028 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2029 ;; Tracked objects:
  2030 ;;		On entry : 0/0
  2031 ;;		On exit  : 0/0
  2032 ;;		Unchanged: 0/0
  2033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2034 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2035 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2037 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2038 ;;Total ram usage:        3 bytes
  2039 ;; Hardware stack levels used: 1
  2040 ;; Hardware stack levels required when called: 3
  2041 ;; This function calls:
  2042 ;;		_gpio_pin_write_logic
  2043 ;; This function is called by:
  2044 ;;		_main
  2045 ;; This function uses a non-reentrant model
  2046 ;;
  2047                           
  2048                           	psect	text6
  2049   0030A6                     __ptext6:
  2050                           	callstack 0
  2051   0030A6                     _dc_motor_move_left:
  2052                           	callstack 27
  2053   0030A6                     
  2054                           ;ECU_layer/DC_Motor/ecu_dc_motor.c: 57:     if(((void*)0) == _dc_motor)
  2055   0030A6  500C               	movf	dc_motor_move_left@_dc_motor^0,w,c
  2056   0030A8  100D               	iorwf	(dc_motor_move_left@_dc_motor+1)^0,w,c
  2057   0030AA  A4D8               	btfss	status,2,c
  2058   0030AC  EF5A  F018         	goto	u4981
  2059   0030B0  EF5C  F018         	goto	u4980
  2060   0030B4                     u4981:
  2061   0030B4  EF5E  F018         	goto	l6142
  2062   0030B8                     u4980:
  2063   0030B8                     
  2064                           ;ECU_layer/DC_Motor/ecu_dc_motor.c: 60:     }else
  2065   0030B8  EF72  F018         	goto	l230
  2066   0030BC                     l6142:
  2067                           
  2068                           ;ECU_layer/DC_Motor/ecu_dc_motor.c: 61:     {;ECU_layer/DC_Motor/ecu_dc_motor.c: 62:    
      +                               ret = gpio_pin_write_logic(&(_dc_motor->dc_motor_pin[0x00U]), GPIO_LOW);
  2069   0030BC  C00C  F002         	movff	dc_motor_move_left@_dc_motor,gpio_pin_write_logic@_pin_config
  2070   0030C0  C00D  F003         	movff	dc_motor_move_left@_dc_motor+1,gpio_pin_write_logic@_pin_config+1
  2071   0030C4  0E00               	movlw	0
  2072   0030C6  6E04               	movwf	gpio_pin_write_logic@logic^0,c
  2073   0030C8  EC45  F011         	call	_gpio_pin_write_logic	;wreg free
  2074   0030CC  6E0E               	movwf	dc_motor_move_left@ret^0,c
  2075                           
  2076                           ;ECU_layer/DC_Motor/ecu_dc_motor.c: 63:         ret = gpio_pin_write_logic(&(_dc_motor->
      +                          dc_motor_pin[0x01U]), GPIO_HIGH);
  2077   0030CE  0E01               	movlw	1
  2078   0030D0  240C               	addwf	dc_motor_move_left@_dc_motor^0,w,c
  2079   0030D2  6E02               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2080   0030D4  0E00               	movlw	0
  2081   0030D6  200D               	addwfc	(dc_motor_move_left@_dc_motor+1)^0,w,c
  2082   0030D8  6E03               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  2083   0030DA  0E01               	movlw	1
  2084   0030DC  6E04               	movwf	gpio_pin_write_logic@logic^0,c
  2085   0030DE  EC45  F011         	call	_gpio_pin_write_logic	;wreg free
  2086   0030E2  6E0E               	movwf	dc_motor_move_left@ret^0,c
  2087   0030E4                     l230:
  2088   0030E4  0012               	return		;funcret
  2089   0030E6                     __end_of_dc_motor_move_left:
  2090                           	callstack 0
  2091                           
  2092 ;; *************** function _convert_uint8_to_string *****************
  2093 ;; Defined at:
  2094 ;;		line 406 in file "ECU_layer/Character_LCD/ecu_chr_lcd.c"
  2095 ;; Parameters:    Size  Location     Type
  2096 ;;  value           1    wreg     unsigned char 
  2097 ;;  str             2   85[COMRAM] PTR unsigned char 
  2098 ;;		 -> Resultstr2(7), Resultstr1(7), 
  2099 ;; Auto vars:     Size  Location     Type
  2100 ;;  value           1   91[COMRAM] unsigned char 
  2101 ;;  Tempstr         4   87[COMRAM] unsigned char [4]
  2102 ;;  DataCounter     1   93[COMRAM] unsigned char 
  2103 ;;  ret             1   92[COMRAM] unsigned char 
  2104 ;; Return value:  Size  Location     Type
  2105 ;;                  1    wreg      unsigned char 
  2106 ;; Registers used:
  2107 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2108 ;; Tracked objects:
  2109 ;;		On entry : 0/0
  2110 ;;		On exit  : 0/0
  2111 ;;		Unchanged: 0/0
  2112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2113 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2114 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2116 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2117 ;;Total ram usage:        9 bytes
  2118 ;; Hardware stack levels used: 1
  2119 ;; Hardware stack levels required when called: 10
  2120 ;; This function calls:
  2121 ;;		_memset
  2122 ;;		_sprintf
  2123 ;; This function is called by:
  2124 ;;		_main
  2125 ;; This function uses a non-reentrant model
  2126 ;;
  2127                           
  2128                           	psect	text7
  2129   0027E8                     __ptext7:
  2130                           	callstack 0
  2131   0027E8                     _convert_uint8_to_string:
  2132                           	callstack 20
  2133                           
  2134                           ;incstack = 0
  2135                           ;convert_uint8_to_string@value stored from wreg
  2136   0027E8  6E5C               	movwf	convert_uint8_to_string@value^0,c
  2137   0027EA                     
  2138                           ;ECU_layer/Character_LCD/ecu_chr_lcd.c: 407:     Std_ReturnType ret = (Std_ReturnType)0x
      +                          01;
  2139   0027EA  0E01               	movlw	1
  2140   0027EC  6E5D               	movwf	convert_uint8_to_string@ret^0,c
  2141                           
  2142                           ;ECU_layer/Character_LCD/ecu_chr_lcd.c: 408:     uint8_t Tempstr[4] = {0};
  2143   0027EE  0E00               	movlw	0
  2144   0027F0  6E58               	movwf	convert_uint8_to_string@Tempstr^0,c
  2145   0027F2  0E00               	movlw	0
  2146   0027F4  6E59               	movwf	(convert_uint8_to_string@Tempstr+1)^0,c
  2147   0027F6  0E00               	movlw	0
  2148   0027F8  6E5A               	movwf	(convert_uint8_to_string@Tempstr+2)^0,c
  2149   0027FA  0E00               	movlw	0
  2150   0027FC  6E5B               	movwf	(convert_uint8_to_string@Tempstr+3)^0,c
  2151                           
  2152                           ;ECU_layer/Character_LCD/ecu_chr_lcd.c: 409:     uint8_t DataCounter = 0;
  2153   0027FE  0E00               	movlw	0
  2154   002800  6E5E               	movwf	convert_uint8_to_string@DataCounter^0,c
  2155   002802                     
  2156                           ;ECU_layer/Character_LCD/ecu_chr_lcd.c: 410:     if(((void*)0) == str)
  2157   002802  5056               	movf	convert_uint8_to_string@str^0,w,c
  2158   002804  1057               	iorwf	(convert_uint8_to_string@str+1)^0,w,c
  2159   002806  A4D8               	btfss	status,2,c
  2160   002808  EF08  F014         	goto	u4961
  2161   00280C  EF0A  F014         	goto	u4960
  2162   002810                     u4961:
  2163   002810  EF0E  F014         	goto	l6120
  2164   002814                     u4960:
  2165   002814                     
  2166                           ;ECU_layer/Character_LCD/ecu_chr_lcd.c: 411:     {;ECU_layer/Character_LCD/ecu_chr_lcd.c
      +                          : 412:         ret = (Std_ReturnType)0x00;
  2167   002814  0E00               	movlw	0
  2168   002816  6E5D               	movwf	convert_uint8_to_string@ret^0,c
  2169                           
  2170                           ;ECU_layer/Character_LCD/ecu_chr_lcd.c: 413:     }else
  2171   002818  EF4F  F014         	goto	l6132
  2172   00281C                     l6120:
  2173                           
  2174                           ;ECU_layer/Character_LCD/ecu_chr_lcd.c: 414:     {;ECU_layer/Character_LCD/ecu_chr_lcd.c
      +                          : 415:         memset(str, ' ', 3);
  2175   00281C  C056  F002         	movff	convert_uint8_to_string@str,memset@dest
  2176   002820  C057  F003         	movff	convert_uint8_to_string@str+1,memset@dest+1
  2177   002824  0E00               	movlw	0
  2178   002826  6E05               	movwf	(memset@c+1)^0,c
  2179   002828  0E20               	movlw	32
  2180   00282A  6E04               	movwf	memset@c^0,c
  2181   00282C  0E00               	movlw	0
  2182   00282E  6E07               	movwf	(memset@n+1)^0,c
  2183   002830  0E03               	movlw	3
  2184   002832  6E06               	movwf	memset@n^0,c
  2185   002834  ECB5  F00E         	call	_memset	;wreg free
  2186   002838                     
  2187                           ;ECU_layer/Character_LCD/ecu_chr_lcd.c: 416:         str[3] = '\0';
  2188   002838  EE20 F003          	lfsr	2,3
  2189   00283C  5056               	movf	convert_uint8_to_string@str^0,w,c
  2190   00283E  26D9               	addwf	fsr2l,f,c
  2191   002840  5057               	movf	(convert_uint8_to_string@str+1)^0,w,c
  2192   002842  22DA               	addwfc	fsr2h,f,c
  2193   002844  6ADF               	clrf	indf2,c
  2194   002846                     
  2195                           ;ECU_layer/Character_LCD/ecu_chr_lcd.c: 417:         sprintf(Tempstr, "%i", value);
  2196   002846  0E58               	movlw	low convert_uint8_to_string@Tempstr
  2197   002848  6E40               	movwf	sprintf@s^0,c
  2198   00284A  0E00               	movlw	high convert_uint8_to_string@Tempstr
  2199   00284C  6E41               	movwf	(sprintf@s+1)^0,c
  2200   00284E  0E42               	movlw	low STR_1
  2201   002850  6E42               	movwf	sprintf@fmt^0,c
  2202   002852  0E10               	movlw	high STR_1
  2203   002854  6E43               	movwf	(sprintf@fmt+1)^0,c
  2204   002856  C05C  F044         	movff	convert_uint8_to_string@value,?_sprintf+4
  2205   00285A  6A45               	clrf	(?_sprintf+5)^0,c
  2206   00285C  EC80  F017         	call	_sprintf	;wreg free
  2207                           
  2208                           ;ECU_layer/Character_LCD/ecu_chr_lcd.c: 418:         while(Tempstr[DataCounter] != '\0')
      +                          {
  2209   002860  EF41  F014         	goto	l6130
  2210   002864                     l6126:
  2211                           
  2212                           ;ECU_layer/Character_LCD/ecu_chr_lcd.c: 419:             str[DataCounter] = Tempstr[Data
      +                          Counter];
  2213   002864  0E58               	movlw	low convert_uint8_to_string@Tempstr
  2214   002866  245E               	addwf	convert_uint8_to_string@DataCounter^0,w,c
  2215   002868  6ED9               	movwf	fsr2l,c
  2216   00286A  6ADA               	clrf	fsr2h,c
  2217   00286C  0E00               	movlw	high convert_uint8_to_string@Tempstr
  2218   00286E  22DA               	addwfc	fsr2h,f,c
  2219   002870  505E               	movf	convert_uint8_to_string@DataCounter^0,w,c
  2220   002872  2456               	addwf	convert_uint8_to_string@str^0,w,c
  2221   002874  6EE1               	movwf	fsr1l,c
  2222   002876  0E00               	movlw	0
  2223   002878  2057               	addwfc	(convert_uint8_to_string@str+1)^0,w,c
  2224   00287A  6EE2               	movwf	fsr1h,c
  2225   00287C  CFDF FFE7          	movff	indf2,indf1
  2226   002880                     
  2227                           ;ECU_layer/Character_LCD/ecu_chr_lcd.c: 420:             DataCounter++;
  2228   002880  2A5E               	incf	convert_uint8_to_string@DataCounter^0,f,c
  2229   002882                     l6130:
  2230                           
  2231                           ;ECU_layer/Character_LCD/ecu_chr_lcd.c: 418:         while(Tempstr[DataCounter] != '\0')
      +                          {
  2232   002882  0E58               	movlw	low convert_uint8_to_string@Tempstr
  2233   002884  245E               	addwf	convert_uint8_to_string@DataCounter^0,w,c
  2234   002886  6ED9               	movwf	fsr2l,c
  2235   002888  6ADA               	clrf	fsr2h,c
  2236   00288A  0E00               	movlw	high convert_uint8_to_string@Tempstr
  2237   00288C  22DA               	addwfc	fsr2h,f,c
  2238   00288E  50DF               	movf	indf2,w,c
  2239   002890  A4D8               	btfss	status,2,c
  2240   002892  EF4D  F014         	goto	u4971
  2241   002896  EF4F  F014         	goto	u4970
  2242   00289A                     u4971:
  2243   00289A  EF32  F014         	goto	l6126
  2244   00289E                     u4970:
  2245   00289E                     l6132:
  2246                           
  2247                           ;ECU_layer/Character_LCD/ecu_chr_lcd.c: 423:     return ret;
  2248   00289E  505D               	movf	convert_uint8_to_string@ret^0,w,c
  2249   0028A0  0012               	return		;funcret
  2250   0028A2                     __end_of_convert_uint8_to_string:
  2251                           	callstack 0
  2252                           
  2253 ;; *************** function _sprintf *****************
  2254 ;; Defined at:
  2255 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_sprintf.c"
  2256 ;; Parameters:    Size  Location     Type
  2257 ;;  s               2   63[COMRAM] PTR unsigned char 
  2258 ;;		 -> convert_uint32_to_string@Tempstr(11), convert_uint16_to_string@Tempstr(6), convert_uint8_to_string@Tempstr(4), 
  2259 ;;  fmt             2   65[COMRAM] PTR const unsigned char 
  2260 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2261 ;; Auto vars:     Size  Location     Type
  2262 ;;  f              12   73[COMRAM] struct _IO_FILE
  2263 ;;  ap              2   71[COMRAM] PTR void [1]
  2264 ;;		 -> ?_sprintf(2), 
  2265 ;;  ret             2    0        int 
  2266 ;; Return value:  Size  Location     Type
  2267 ;;                  2   63[COMRAM] int 
  2268 ;; Registers used:
  2269 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2270 ;; Tracked objects:
  2271 ;;		On entry : 0/0
  2272 ;;		On exit  : 0/0
  2273 ;;		Unchanged: 0/0
  2274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2275 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2276 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2278 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2279 ;;Total ram usage:       22 bytes
  2280 ;; Hardware stack levels used: 1
  2281 ;; Hardware stack levels required when called: 9
  2282 ;; This function calls:
  2283 ;;		_vfprintf
  2284 ;; This function is called by:
  2285 ;;		_convert_uint8_to_string
  2286 ;;		_convert_uint16_to_string
  2287 ;;		_convert_uint32_to_string
  2288 ;; This function uses a non-reentrant model
  2289 ;;
  2290                           
  2291                           	psect	text8
  2292   002F00                     __ptext8:
  2293                           	callstack 0
  2294   002F00                     _sprintf:
  2295                           	callstack 20
  2296   002F00  0E44               	movlw	low (?_sprintf+4)
  2297   002F02  6E48               	movwf	sprintf@ap^0,c
  2298   002F04  0E00               	movlw	high (?_sprintf+4)
  2299   002F06  6E49               	movwf	(sprintf@ap+1)^0,c
  2300   002F08  C040  F04A         	movff	sprintf@s,sprintf@f
  2301   002F0C  C041  F04B         	movff	sprintf@s+1,sprintf@f+1
  2302   002F10  0E00               	movlw	0
  2303   002F12  6E4E               	movwf	(sprintf@f+4)^0,c
  2304   002F14  0E00               	movlw	0
  2305   002F16  6E4D               	movwf	(sprintf@f+3)^0,c
  2306   002F18  0E00               	movlw	0
  2307   002F1A  6E55               	movwf	(sprintf@f+11)^0,c
  2308   002F1C  0E00               	movlw	0
  2309   002F1E  6E54               	movwf	(sprintf@f+10)^0,c
  2310   002F20  0E4A               	movlw	low sprintf@f
  2311   002F22  6E38               	movwf	vfprintf@fp^0,c
  2312   002F24  0E00               	movlw	high sprintf@f
  2313   002F26  6E39               	movwf	(vfprintf@fp+1)^0,c
  2314   002F28  C042  F03A         	movff	sprintf@fmt,vfprintf@fmt
  2315   002F2C  C043  F03B         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2316   002F30  0E48               	movlw	low sprintf@ap
  2317   002F32  6E3C               	movwf	vfprintf@ap^0,c
  2318   002F34  0E00               	movlw	high sprintf@ap
  2319   002F36  6E3D               	movwf	(vfprintf@ap+1)^0,c
  2320   002F38  EC58  F017         	call	_vfprintf	;wreg free
  2321   002F3C  504D               	movf	(sprintf@f+3)^0,w,c
  2322   002F3E  2440               	addwf	sprintf@s^0,w,c
  2323   002F40  6ED9               	movwf	fsr2l,c
  2324   002F42  504E               	movf	(sprintf@f+4)^0,w,c
  2325   002F44  2041               	addwfc	(sprintf@s+1)^0,w,c
  2326   002F46  6EDA               	movwf	fsr2h,c
  2327   002F48  6ADF               	clrf	indf2,c
  2328   002F4A  0012               	return		;funcret
  2329   002F4C                     __end_of_sprintf:
  2330                           	callstack 0
  2331                           
  2332 ;; *************** function _vfprintf *****************
  2333 ;; Defined at:
  2334 ;;		line 1546 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2335 ;; Parameters:    Size  Location     Type
  2336 ;;  fp              2   55[COMRAM] PTR struct _IO_FILE
  2337 ;;		 -> sprintf@f(12), 
  2338 ;;  fmt             2   57[COMRAM] PTR const unsigned char 
  2339 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2340 ;;  ap              2   59[COMRAM] PTR PTR void 
  2341 ;;		 -> sprintf@ap(2), 
  2342 ;; Auto vars:     Size  Location     Type
  2343 ;;  cfmt            2   61[COMRAM] PTR unsigned char 
  2344 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2345 ;; Return value:  Size  Location     Type
  2346 ;;                  2   55[COMRAM] int 
  2347 ;; Registers used:
  2348 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2349 ;; Tracked objects:
  2350 ;;		On entry : 0/0
  2351 ;;		On exit  : 0/0
  2352 ;;		Unchanged: 0/0
  2353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2354 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2355 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2357 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2358 ;;Total ram usage:        8 bytes
  2359 ;; Hardware stack levels used: 1
  2360 ;; Hardware stack levels required when called: 8
  2361 ;; This function calls:
  2362 ;;		_vfpfcnvrt
  2363 ;; This function is called by:
  2364 ;;		_sprintf
  2365 ;; This function uses a non-reentrant model
  2366 ;;
  2367                           
  2368                           	psect	text9
  2369   002EB0                     __ptext9:
  2370                           	callstack 0
  2371   002EB0                     _vfprintf:
  2372                           	callstack 20
  2373   002EB0                     
  2374                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
  2375   002EB0  C03A  F03E         	movff	vfprintf@fmt,vfprintf@cfmt
  2376   002EB4  C03B  F03F         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2377                           
  2378                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  2379   002EB8  EF6C  F017         	goto	l5850
  2380   002EBC                     l5848:
  2381                           
  2382                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2383   002EBC  C038  F02A         	movff	vfprintf@fp,vfpfcnvrt@fp
  2384   002EC0  C039  F02B         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2385   002EC4  0E3E               	movlw	low vfprintf@cfmt
  2386   002EC6  6E2C               	movwf	vfpfcnvrt@fmt^0,c
  2387   002EC8  0E00               	movlw	high vfprintf@cfmt
  2388   002ECA  6E2D               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2389   002ECC  C03C  F02E         	movff	vfprintf@ap,vfpfcnvrt@ap
  2390   002ED0  C03D  F02F         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2391   002ED4  ECAF  F010         	call	_vfpfcnvrt	;wreg free
  2392   002ED8                     l5850:
  2393                           
  2394                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  2395   002ED8  C03E  FFF6         	movff	vfprintf@cfmt,tblptrl
  2396   002EDC  C03F  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2397   002EE0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2398   002EE0  6AF8               	clrf	tblptru,c
  2399   002EE2                     	endif
  2400   002EE2                     	if	0	;tblptru may be non-zero
  2401   002EE2                     	endif
  2402   002EE2  0008               	tblrd		*
  2403   002EE4  50F5               	movf	tablat,w,c
  2404   002EE6  0900               	iorlw	0
  2405   002EE8  A4D8               	btfss	status,2,c
  2406   002EEA  EF79  F017         	goto	u4681
  2407   002EEE  EF7B  F017         	goto	u4680
  2408   002EF2                     u4681:
  2409   002EF2  EF5E  F017         	goto	l5848
  2410   002EF6                     u4680:
  2411   002EF6                     
  2412                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
  2413   002EF6  0E00               	movlw	0
  2414   002EF8  6E39               	movwf	(?_vfprintf+1)^0,c
  2415   002EFA  0E00               	movlw	0
  2416   002EFC  6E38               	movwf	?_vfprintf^0,c
  2417   002EFE  0012               	return		;funcret
  2418   002F00                     __end_of_vfprintf:
  2419                           	callstack 0
  2420                           
  2421 ;; *************** function _vfpfcnvrt *****************
  2422 ;; Defined at:
  2423 ;;		line 1048 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2424 ;; Parameters:    Size  Location     Type
  2425 ;;  fp              2   41[COMRAM] PTR struct _IO_FILE
  2426 ;;		 -> sprintf@f(12), 
  2427 ;;  fmt             2   43[COMRAM] PTR PTR unsigned char 
  2428 ;;		 -> vfprintf@cfmt(2), 
  2429 ;;  ap              2   45[COMRAM] PTR PTR void 
  2430 ;;		 -> sprintf@ap(2), 
  2431 ;; Auto vars:     Size  Location     Type
  2432 ;;  convarg         4   49[COMRAM] struct .
  2433 ;;  cp              2   53[COMRAM] PTR unsigned char 
  2434 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2435 ;;  i               2    0        int 
  2436 ;;  done            2    0        int 
  2437 ;;  c               1    0        unsigned char 
  2438 ;; Return value:  Size  Location     Type
  2439 ;;                  1    wreg      void 
  2440 ;; Registers used:
  2441 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2442 ;; Tracked objects:
  2443 ;;		On entry : 0/0
  2444 ;;		On exit  : 0/0
  2445 ;;		Unchanged: 0/0
  2446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2447 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2448 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2449 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2450 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2451 ;;Total ram usage:       14 bytes
  2452 ;; Hardware stack levels used: 1
  2453 ;; Hardware stack levels required when called: 7
  2454 ;; This function calls:
  2455 ;;		_dtoa
  2456 ;;		_fputc
  2457 ;; This function is called by:
  2458 ;;		_vfprintf
  2459 ;; This function uses a non-reentrant model
  2460 ;;
  2461                           
  2462                           	psect	text10
  2463   00215E                     __ptext10:
  2464                           	callstack 0
  2465   00215E                     _vfpfcnvrt:
  2466                           	callstack 20
  2467   00215E                     
  2468                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
  2469   00215E  C02C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2470   002162  C02D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2471   002166  CFDE FFF6          	movff	postinc2,tblptrl
  2472   00216A  CFDD FFF7          	movff	postdec2,tblptrh
  2473   00216E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2474   00216E  6AF8               	clrf	tblptru,c
  2475   002170                     	endif
  2476   002170                     	if	0	;tblptru may be non-zero
  2477   002170                     	endif
  2478   002170  0008               	tblrd		*
  2479   002172  50F5               	movf	tablat,w,c
  2480   002174  0A25               	xorlw	37
  2481   002176  A4D8               	btfss	status,2,c
  2482   002178  EFC0  F010         	goto	u4601
  2483   00217C  EFC2  F010         	goto	u4600
  2484   002180                     u4601:
  2485   002180  EF2F  F011         	goto	l5750
  2486   002184                     u4600:
  2487   002184                     
  2488                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
  2489   002184  C02C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2490   002188  C02D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2491   00218C  2ADE               	incf	postinc2,f,c
  2492   00218E  0E00               	movlw	0
  2493   002190  22DD               	addwfc	postdec2,f,c
  2494   002192                     
  2495                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
  2496   002192  0E00               	movlw	0
  2497   002194  0100               	movlb	0	; () banked
  2498   002196  6F96               	movwf	(_width+1)& (0+255),b
  2499   002198  0E00               	movlw	0
  2500   00219A  6F95               	movwf	_width& (0+255),b
  2501   00219C  C095  F065         	movff	_width,_flags
  2502   0021A0                     
  2503                           ; BSR set to: 0
  2504                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
  2505   0021A0  6997               	setf	_prec& (0+255),b
  2506   0021A2  6998               	setf	(_prec+1)& (0+255),b
  2507   0021A4                     
  2508                           ; BSR set to: 0
  2509                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1143:   cp = *fmt
      +                          ;
  2510   0021A4  C02C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2511   0021A8  C02D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2512   0021AC  CFDE F036          	movff	postinc2,vfpfcnvrt@cp
  2513   0021B0  CFDD F037          	movff	postdec2,vfpfcnvrt@cp+1
  2514   0021B4                     
  2515                           ; BSR set to: 0
  2516                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1213:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2517   0021B4  C036  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2518   0021B8  C037  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2519   0021BC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2520   0021BC  6AF8               	clrf	tblptru,c
  2521   0021BE                     	endif
  2522   0021BE                     	if	0	;tblptru may be non-zero
  2523   0021BE                     	endif
  2524   0021BE  0008               	tblrd		*
  2525   0021C0  50F5               	movf	tablat,w,c
  2526   0021C2  0A64               	xorlw	100
  2527   0021C4  B4D8               	btfsc	status,2,c
  2528   0021C6  EFE7  F010         	goto	u4611
  2529   0021CA  EFE9  F010         	goto	u4610
  2530   0021CE                     u4611:
  2531   0021CE  EFF8  F010         	goto	l5740
  2532   0021D2                     u4610:
  2533   0021D2                     
  2534                           ; BSR set to: 0
  2535   0021D2  C036  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2536   0021D6  C037  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2537   0021DA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2538   0021DA  6AF8               	clrf	tblptru,c
  2539   0021DC                     	endif
  2540   0021DC                     	if	0	;tblptru may be non-zero
  2541   0021DC                     	endif
  2542   0021DC  0008               	tblrd		*
  2543   0021DE  50F5               	movf	tablat,w,c
  2544   0021E0  0A69               	xorlw	105
  2545   0021E2  A4D8               	btfss	status,2,c
  2546   0021E4  EFF6  F010         	goto	u4621
  2547   0021E8  EFF8  F010         	goto	u4620
  2548   0021EC                     u4621:
  2549   0021EC  EF26  F011         	goto	l5746
  2550   0021F0                     u4620:
  2551   0021F0                     l5740:
  2552                           
  2553                           ; BSR set to: 0
  2554                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1256:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2555   0021F0  C02E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2556   0021F4  C02F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2557   0021F8  CFDF F030          	movff	indf2,??_vfpfcnvrt
  2558   0021FC  0E02               	movlw	2
  2559   0021FE  26DE               	addwf	postinc2,f,c
  2560   002200  CFDF F031          	movff	indf2,??_vfpfcnvrt+1
  2561   002204  0E00               	movlw	0
  2562   002206  22DD               	addwfc	postdec2,f,c
  2563   002208  C030  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2564   00220C  C031  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2565   002210  CFDE F032          	movff	postinc2,vfpfcnvrt@convarg
  2566   002214  CFDD F033          	movff	postdec2,vfpfcnvrt@convarg+1
  2567                           
  2568                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1258:    *fmt = c
      +                          p+1;
  2569   002218  0E01               	movlw	1
  2570   00221A  2436               	addwf	vfpfcnvrt@cp^0,w,c
  2571   00221C  6E30               	movwf	??_vfpfcnvrt^0,c
  2572   00221E  0E00               	movlw	0
  2573   002220  2037               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  2574   002222  6E31               	movwf	(??_vfpfcnvrt+1)^0,c
  2575   002224  C02C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2576   002228  C02D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2577   00222C  C030  FFDE         	movff	??_vfpfcnvrt,postinc2
  2578   002230  C031  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2579   002234                     
  2580                           ; BSR set to: 0
  2581                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1259:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  2582   002234  C02A  F01D         	movff	vfpfcnvrt@fp,dtoa@fp
  2583   002238  C02B  F01E         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2584   00223C  C032  F01F         	movff	vfpfcnvrt@convarg,dtoa@d
  2585   002240  C033  F020         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2586   002244  ECEA  F00D         	call	_dtoa	;wreg free
  2587   002248  EF44  F011         	goto	l2384
  2588   00224C                     l5746:
  2589                           
  2590                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
  2591   00224C  C02C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2592   002250  C02D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2593   002254  2ADE               	incf	postinc2,f,c
  2594   002256  0E00               	movlw	0
  2595   002258  22DD               	addwfc	postdec2,f,c
  2596   00225A  EF44  F011         	goto	l2384
  2597   00225E                     l5750:
  2598                           
  2599                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
  2600   00225E  C02C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2601   002262  C02D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2602   002266  CFDE FFF6          	movff	postinc2,tblptrl
  2603   00226A  CFDD FFF7          	movff	postdec2,tblptrh
  2604   00226E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2605   00226E  6AF8               	clrf	tblptru,c
  2606   002270                     	endif
  2607   002270                     	if	0	;tblptru may be non-zero
  2608   002270                     	endif
  2609   002270  0008               	tblrd		*
  2610   002272  50F5               	movf	tablat,w,c
  2611   002274  6E02               	movwf	fputc@c^0,c
  2612   002276  6A03               	clrf	(fputc@c+1)^0,c
  2613   002278  C02A  F004         	movff	vfpfcnvrt@fp,fputc@fp
  2614   00227C  C02B  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2615   002280  ECCA  F012         	call	_fputc	;wreg free
  2616   002284  EF26  F011         	goto	l5746
  2617   002288                     l2384:
  2618   002288  0012               	return		;funcret
  2619   00228A                     __end_of_vfpfcnvrt:
  2620                           	callstack 0
  2621                           
  2622 ;; *************** function _dtoa *****************
  2623 ;; Defined at:
  2624 ;;		line 470 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2625 ;; Parameters:    Size  Location     Type
  2626 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
  2627 ;;		 -> sprintf@f(12), 
  2628 ;;  d               2   30[COMRAM] int 
  2629 ;; Auto vars:     Size  Location     Type
  2630 ;;  i               2   38[COMRAM] int 
  2631 ;;  w               2   36[COMRAM] int 
  2632 ;;  p               2   34[COMRAM] int 
  2633 ;;  s               1   40[COMRAM] unsigned char 
  2634 ;; Return value:  Size  Location     Type
  2635 ;;                  1    wreg      void 
  2636 ;; Registers used:
  2637 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2638 ;; Tracked objects:
  2639 ;;		On entry : 0/0
  2640 ;;		On exit  : 0/0
  2641 ;;		Unchanged: 0/0
  2642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2643 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2644 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2646 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2647 ;;Total ram usage:       13 bytes
  2648 ;; Hardware stack levels used: 1
  2649 ;; Hardware stack levels required when called: 6
  2650 ;; This function calls:
  2651 ;;		___awdiv
  2652 ;;		___awmod
  2653 ;;		_abs
  2654 ;;		_pad
  2655 ;; This function is called by:
  2656 ;;		_vfpfcnvrt
  2657 ;; This function uses a non-reentrant model
  2658 ;;
  2659                           
  2660                           	psect	text11
  2661   001BD4                     __ptext11:
  2662                           	callstack 0
  2663   001BD4                     _dtoa:
  2664                           	callstack 20
  2665   001BD4                     
  2666                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 470: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\commo
      +                          n\doprnt.c: 471: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           472:  char s;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 473
      +                          :     int i, p, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           476:     s = d < 0 ? 1 : 0;
  2667   001BD4  BE20               	btfsc	(dtoa@d+1)^0,7,c
  2668   001BD6  EFEF  F00D         	goto	u4431
  2669   001BDA  EFF2  F00D         	goto	u4430
  2670   001BDE                     u4431:
  2671   001BDE  0E01               	movlw	1
  2672   001BE0  EFF3  F00D         	goto	u4440
  2673   001BE4                     u4430:
  2674   001BE4  0E00               	movlw	0
  2675   001BE6                     u4440:
  2676   001BE6  6E29               	movwf	dtoa@s^0,c
  2677   001BE8                     
  2678                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 477:     if (s) {
  2679   001BE8  5029               	movf	dtoa@s^0,w,c
  2680   001BEA  B4D8               	btfsc	status,2,c
  2681   001BEC  EFFA  F00D         	goto	u4451
  2682   001BF0  EFFC  F00D         	goto	u4450
  2683   001BF4                     u4451:
  2684   001BF4  EF00  F00E         	goto	l5608
  2685   001BF8                     u4450:
  2686   001BF8                     
  2687                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 478:         d = 
      +                          -d;
  2688   001BF8  6C1F               	negf	dtoa@d^0,c
  2689   001BFA  1E20               	comf	(dtoa@d+1)^0,f,c
  2690   001BFC  B0D8               	btfsc	status,0,c
  2691   001BFE  2A20               	incf	(dtoa@d+1)^0,f,c
  2692   001C00                     l5608:
  2693                           
  2694                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 487:     p = (0 <
      +                          = prec) ? prec : 1;
  2695   001C00  0100               	movlb	0	; () banked
  2696   001C02  BF98               	btfsc	(_prec+1)& (0+255),7,b
  2697   001C04  EF08  F00E         	goto	u4460
  2698   001C08  EF06  F00E         	goto	u4461
  2699   001C0C                     u4461:
  2700   001C0C  EF0E  F00E         	goto	l2363
  2701   001C10                     u4460:
  2702   001C10                     
  2703                           ; BSR set to: 0
  2704   001C10  0E00               	movlw	0
  2705   001C12  6E24               	movwf	(dtoa@p+1)^0,c
  2706   001C14  0E01               	movlw	1
  2707   001C16  6E23               	movwf	dtoa@p^0,c
  2708   001C18  EF12  F00E         	goto	l2365
  2709   001C1C                     l2363:
  2710                           
  2711                           ; BSR set to: 0
  2712   001C1C  C097  F023         	movff	_prec,dtoa@p
  2713   001C20  C098  F024         	movff	_prec+1,dtoa@p+1
  2714   001C24                     l2365:
  2715                           
  2716                           ; BSR set to: 0
  2717                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 488:     w = widt
      +                          h;
  2718   001C24  C095  F025         	movff	_width,dtoa@w
  2719   001C28  C096  F026         	movff	_width+1,dtoa@w+1
  2720   001C2C                     
  2721                           ; BSR set to: 0
  2722                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 489:     if (s
  2723   001C2C  5029               	movf	dtoa@s^0,w,c
  2724   001C2E  B4D8               	btfsc	status,2,c
  2725   001C30  EF1C  F00E         	goto	u4471
  2726   001C34  EF1E  F00E         	goto	u4470
  2727   001C38                     u4471:
  2728   001C38  EF35  F00E         	goto	l2366
  2729   001C3C                     u4470:
  2730   001C3C                     
  2731                           ; BSR set to: 0
  2732                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 493:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 494:         --w;
  2733   001C3C  0625               	decf	dtoa@w^0,f,c
  2734   001C3E  A0D8               	btfss	status,0,c
  2735   001C40  0626               	decf	(dtoa@w+1)^0,f,c
  2736   001C42                     
  2737                           ; BSR set to: 0
  2738                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 495:   s = s ? '-
      +                          ' : '+';
  2739   001C42  5029               	movf	dtoa@s^0,w,c
  2740   001C44  A4D8               	btfss	status,2,c
  2741   001C46  EF27  F00E         	goto	u4481
  2742   001C4A  EF29  F00E         	goto	u4480
  2743   001C4E                     u4481:
  2744   001C4E  EF2F  F00E         	goto	l5620
  2745   001C52                     u4480:
  2746   001C52                     
  2747                           ; BSR set to: 0
  2748   001C52  0E00               	movlw	0
  2749   001C54  6E22               	movwf	(_dtoa$4404+1)^0,c
  2750   001C56  0E2B               	movlw	43
  2751   001C58  6E21               	movwf	_dtoa$4404^0,c
  2752   001C5A  EF33  F00E         	goto	l5622
  2753   001C5E                     l5620:
  2754                           
  2755                           ; BSR set to: 0
  2756   001C5E  0E00               	movlw	0
  2757   001C60  6E22               	movwf	(_dtoa$4404+1)^0,c
  2758   001C62  0E2D               	movlw	45
  2759   001C64  6E21               	movwf	_dtoa$4404^0,c
  2760   001C66                     l5622:
  2761                           
  2762                           ; BSR set to: 0
  2763   001C66  C021  F029         	movff	_dtoa$4404,dtoa@s
  2764   001C6A                     l2366:
  2765                           
  2766                           ; BSR set to: 0
  2767                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 505:     i = size
      +                          of(dbuf) - 1;
  2768   001C6A  0E00               	movlw	0
  2769   001C6C  6E28               	movwf	(dtoa@i+1)^0,c
  2770   001C6E  0E1F               	movlw	31
  2771   001C70  6E27               	movwf	dtoa@i^0,c
  2772   001C72                     
  2773                           ; BSR set to: 0
  2774                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 506:     dbuf[i] 
      +                          = '\0';
  2775   001C72  0E00               	movlw	0
  2776   001C74  0101               	movlb	1	; () banked
  2777   001C76  6F1F               	movwf	(_dbuf+31)& (0+255),b
  2778                           
  2779                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  2780   001C78  EF6E  F00E         	goto	l5636
  2781   001C7C                     l5626:
  2782                           
  2783                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 511:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 512:         --i;
  2784   001C7C  0627               	decf	dtoa@i^0,f,c
  2785   001C7E  A0D8               	btfss	status,0,c
  2786   001C80  0628               	decf	(dtoa@i+1)^0,f,c
  2787   001C82                     
  2788                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 513:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  2789   001C82  0E00               	movlw	low _dbuf
  2790   001C84  2427               	addwf	dtoa@i^0,w,c
  2791   001C86  6ED9               	movwf	fsr2l,c
  2792   001C88  0E01               	movlw	high _dbuf
  2793   001C8A  2028               	addwfc	(dtoa@i+1)^0,w,c
  2794   001C8C  6EDA               	movwf	fsr2h,c
  2795   001C8E  C01F  F002         	movff	dtoa@d,___awmod@dividend
  2796   001C92  C020  F003         	movff	dtoa@d+1,___awmod@dividend+1
  2797   001C96  0E00               	movlw	0
  2798   001C98  6E05               	movwf	(___awmod@divisor+1)^0,c
  2799   001C9A  0E0A               	movlw	10
  2800   001C9C  6E04               	movwf	___awmod@divisor^0,c
  2801   001C9E  EC51  F014         	call	___awmod	;wreg free
  2802   001CA2  C002  F008         	movff	?___awmod,abs@a
  2803   001CA6  C003  F009         	movff	?___awmod+1,abs@a+1
  2804   001CAA  EC73  F018         	call	_abs	;wreg free
  2805   001CAE  5008               	movf	?_abs^0,w,c
  2806   001CB0  0F30               	addlw	48
  2807   001CB2  6EDF               	movwf	indf2,c
  2808   001CB4                     
  2809                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 514:         --p;
  2810   001CB4  0623               	decf	dtoa@p^0,f,c
  2811   001CB6  A0D8               	btfss	status,0,c
  2812   001CB8  0624               	decf	(dtoa@p+1)^0,f,c
  2813   001CBA                     
  2814                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 515:         --w;
  2815   001CBA  0625               	decf	dtoa@w^0,f,c
  2816   001CBC  A0D8               	btfss	status,0,c
  2817   001CBE  0626               	decf	(dtoa@w+1)^0,f,c
  2818   001CC0                     
  2819                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 516:         d = 
      +                          d / 10;
  2820   001CC0  C01F  F002         	movff	dtoa@d,___awdiv@dividend
  2821   001CC4  C020  F003         	movff	dtoa@d+1,___awdiv@dividend+1
  2822   001CC8  0E00               	movlw	0
  2823   001CCA  6E05               	movwf	(___awdiv@divisor+1)^0,c
  2824   001CCC  0E0A               	movlw	10
  2825   001CCE  6E04               	movwf	___awdiv@divisor^0,c
  2826   001CD0  EC92  F013         	call	___awdiv	;wreg free
  2827   001CD4  C002  F01F         	movff	?___awdiv,dtoa@d
  2828   001CD8  C003  F020         	movff	?___awdiv+1,dtoa@d+1
  2829   001CDC                     l5636:
  2830                           
  2831                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  2832   001CDC  BE28               	btfsc	(dtoa@i+1)^0,7,c
  2833   001CDE  EF79  F00E         	goto	u4491
  2834   001CE2  5028               	movf	(dtoa@i+1)^0,w,c
  2835   001CE4  E108               	bnz	u4490
  2836   001CE6  0427               	decf	dtoa@i^0,w,c
  2837   001CE8  A0D8               	btfss	status,0,c
  2838   001CEA  EF79  F00E         	goto	u4491
  2839   001CEE  EF7B  F00E         	goto	u4490
  2840   001CF2                     u4491:
  2841   001CF2  EF91  F00E         	goto	l5642
  2842   001CF6                     u4490:
  2843   001CF6  501F               	movf	dtoa@d^0,w,c
  2844   001CF8  1020               	iorwf	(dtoa@d+1)^0,w,c
  2845   001CFA  A4D8               	btfss	status,2,c
  2846   001CFC  EF82  F00E         	goto	u4501
  2847   001D00  EF84  F00E         	goto	u4500
  2848   001D04                     u4501:
  2849   001D04  EF3E  F00E         	goto	l5626
  2850   001D08                     u4500:
  2851   001D08  BE24               	btfsc	(dtoa@p+1)^0,7,c
  2852   001D0A  EF91  F00E         	goto	u4510
  2853   001D0E  5024               	movf	(dtoa@p+1)^0,w,c
  2854   001D10  E106               	bnz	u4511
  2855   001D12  0423               	decf	dtoa@p^0,w,c
  2856   001D14  B0D8               	btfsc	status,0,c
  2857   001D16  EF8F  F00E         	goto	u4511
  2858   001D1A  EF91  F00E         	goto	u4510
  2859   001D1E                     u4511:
  2860   001D1E  EF3E  F00E         	goto	l5626
  2861   001D22                     u4510:
  2862   001D22                     l5642:
  2863                           
  2864                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 520:     if (s !=
      +                           0) {
  2865   001D22  5029               	movf	dtoa@s^0,w,c
  2866   001D24  B4D8               	btfsc	status,2,c
  2867   001D26  EF97  F00E         	goto	u4521
  2868   001D2A  EF99  F00E         	goto	u4520
  2869   001D2E                     u4521:
  2870   001D2E  EFA4  F00E         	goto	l5648
  2871   001D32                     u4520:
  2872   001D32                     
  2873                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 521:         --i;
  2874   001D32  0627               	decf	dtoa@i^0,f,c
  2875   001D34  A0D8               	btfss	status,0,c
  2876   001D36  0628               	decf	(dtoa@i+1)^0,f,c
  2877   001D38                     
  2878                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 522:         dbuf
      +                          [i] = s;
  2879   001D38  0E00               	movlw	low _dbuf
  2880   001D3A  2427               	addwf	dtoa@i^0,w,c
  2881   001D3C  6ED9               	movwf	fsr2l,c
  2882   001D3E  0E01               	movlw	high _dbuf
  2883   001D40  2028               	addwfc	(dtoa@i+1)^0,w,c
  2884   001D42  6EDA               	movwf	fsr2h,c
  2885   001D44  C029  FFDF         	movff	dtoa@s,indf2
  2886   001D48                     l5648:
  2887                           
  2888                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 526:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2889   001D48  C01D  F012         	movff	dtoa@fp,pad@fp
  2890   001D4C  C01E  F013         	movff	dtoa@fp+1,pad@fp+1
  2891   001D50  0E00               	movlw	low _dbuf
  2892   001D52  2427               	addwf	dtoa@i^0,w,c
  2893   001D54  6E14               	movwf	pad@buf^0,c
  2894   001D56  0E01               	movlw	high _dbuf
  2895   001D58  2028               	addwfc	(dtoa@i+1)^0,w,c
  2896   001D5A  6E15               	movwf	(pad@buf+1)^0,c
  2897   001D5C  C025  F016         	movff	dtoa@w,pad@p
  2898   001D60  C026  F017         	movff	dtoa@w+1,pad@p+1
  2899   001D64  EC94  F015         	call	_pad	;wreg free
  2900   001D68  0012               	return		;funcret
  2901   001D6A                     __end_of_dtoa:
  2902                           	callstack 0
  2903                           
  2904 ;; *************** function _pad *****************
  2905 ;; Defined at:
  2906 ;;		line 152 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2907 ;; Parameters:    Size  Location     Type
  2908 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  2909 ;;		 -> sprintf@f(12), 
  2910 ;;  buf             2   19[COMRAM] PTR unsigned char 
  2911 ;;		 -> dbuf(32), 
  2912 ;;  p               2   21[COMRAM] int 
  2913 ;; Auto vars:     Size  Location     Type
  2914 ;;  w               2   26[COMRAM] int 
  2915 ;;  i               2   24[COMRAM] int 
  2916 ;; Return value:  Size  Location     Type
  2917 ;;                  1    wreg      void 
  2918 ;; Registers used:
  2919 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2920 ;; Tracked objects:
  2921 ;;		On entry : 0/0
  2922 ;;		On exit  : 0/0
  2923 ;;		Unchanged: 0/0
  2924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2925 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2926 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2927 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2928 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2929 ;;Total ram usage:       11 bytes
  2930 ;; Hardware stack levels used: 1
  2931 ;; Hardware stack levels required when called: 5
  2932 ;; This function calls:
  2933 ;;		_fputc
  2934 ;;		_fputs
  2935 ;; This function is called by:
  2936 ;;		_dtoa
  2937 ;; This function uses a non-reentrant model
  2938 ;;
  2939                           
  2940                           	psect	text12
  2941   002B28                     __ptext12:
  2942                           	callstack 0
  2943   002B28                     _pad:
  2944                           	callstack 20
  2945   002B28                     
  2946                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 152: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\com
      +                          mon\doprnt.c: 153: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.
      +                          c: 154:     int i, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt
      +                          .c: 164:     w = (p < 0) ? 0 : p;
  2947   002B28  BE17               	btfsc	(pad@p+1)^0,7,c
  2948   002B2A  EF99  F015         	goto	u4341
  2949   002B2E  EF9B  F015         	goto	u4340
  2950   002B32                     u4341:
  2951   002B32  EFA1  F015         	goto	l5540
  2952   002B36                     u4340:
  2953   002B36  C016  F01B         	movff	pad@p,pad@w
  2954   002B3A  C017  F01C         	movff	pad@p+1,pad@w+1
  2955   002B3E  EFA5  F015         	goto	l2354
  2956   002B42                     l5540:
  2957   002B42  0E00               	movlw	0
  2958   002B44  6E1C               	movwf	(pad@w+1)^0,c
  2959   002B46  0E00               	movlw	0
  2960   002B48  6E1B               	movwf	pad@w^0,c
  2961   002B4A                     l2354:
  2962                           
  2963                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 165:     i = 0;
  2964   002B4A  0E00               	movlw	0
  2965   002B4C  6E1A               	movwf	(pad@i+1)^0,c
  2966   002B4E  0E00               	movlw	0
  2967   002B50  6E19               	movwf	pad@i^0,c
  2968                           
  2969                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  2970   002B52  EFB7  F015         	goto	l5546
  2971   002B56                     l5542:
  2972                           
  2973                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 167:         fput
      +                          c(' ', fp);
  2974   002B56  0E00               	movlw	0
  2975   002B58  6E03               	movwf	(fputc@c+1)^0,c
  2976   002B5A  0E20               	movlw	32
  2977   002B5C  6E02               	movwf	fputc@c^0,c
  2978   002B5E  C012  F004         	movff	pad@fp,fputc@fp
  2979   002B62  C013  F005         	movff	pad@fp+1,fputc@fp+1
  2980   002B66  ECCA  F012         	call	_fputc	;wreg free
  2981   002B6A                     
  2982                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 168:         ++i;
  2983   002B6A  4A19               	infsnz	pad@i^0,f,c
  2984   002B6C  2A1A               	incf	(pad@i+1)^0,f,c
  2985   002B6E                     l5546:
  2986                           
  2987                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  2988   002B6E  501B               	movf	pad@w^0,w,c
  2989   002B70  5C19               	subwf	pad@i^0,w,c
  2990   002B72  501A               	movf	(pad@i+1)^0,w,c
  2991   002B74  0A80               	xorlw	128
  2992   002B76  6E18               	movwf	??_pad^0,c
  2993   002B78  501C               	movf	(pad@w+1)^0,w,c
  2994   002B7A  0A80               	xorlw	128
  2995   002B7C  5818               	subwfb	??_pad^0,w,c
  2996   002B7E  A0D8               	btfss	status,0,c
  2997   002B80  EFC4  F015         	goto	u4351
  2998   002B84  EFC6  F015         	goto	u4350
  2999   002B88                     u4351:
  3000   002B88  EFAB  F015         	goto	l5542
  3001   002B8C                     u4350:
  3002   002B8C                     
  3003                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 175:         fput
      +                          s((const char *)buf, fp);
  3004   002B8C  C014  F00B         	movff	pad@buf,fputs@s
  3005   002B90  C015  F00C         	movff	pad@buf+1,fputs@s+1
  3006   002B94  C012  F00D         	movff	pad@fp,fputs@fp
  3007   002B98  C013  F00E         	movff	pad@fp+1,fputs@fp+1
  3008   002B9C  ECEF  F017         	call	_fputs	;wreg free
  3009   002BA0  0012               	return		;funcret
  3010   002BA2                     __end_of_pad:
  3011                           	callstack 0
  3012                           
  3013 ;; *************** function _fputs *****************
  3014 ;; Defined at:
  3015 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputs.c"
  3016 ;; Parameters:    Size  Location     Type
  3017 ;;  s               2   10[COMRAM] PTR const unsigned char 
  3018 ;;		 -> dbuf(32), 
  3019 ;;  fp              2   12[COMRAM] PTR struct _IO_FILE
  3020 ;;		 -> sprintf@f(12), 
  3021 ;; Auto vars:     Size  Location     Type
  3022 ;;  i               2   15[COMRAM] int 
  3023 ;;  c               1   14[COMRAM] unsigned char 
  3024 ;; Return value:  Size  Location     Type
  3025 ;;                  2   10[COMRAM] int 
  3026 ;; Registers used:
  3027 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3028 ;; Tracked objects:
  3029 ;;		On entry : 0/0
  3030 ;;		On exit  : 0/0
  3031 ;;		Unchanged: 0/0
  3032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3033 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3034 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3036 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3037 ;;Total ram usage:        7 bytes
  3038 ;; Hardware stack levels used: 1
  3039 ;; Hardware stack levels required when called: 4
  3040 ;; This function calls:
  3041 ;;		_fputc
  3042 ;; This function is called by:
  3043 ;;		_pad
  3044 ;; This function uses a non-reentrant model
  3045 ;;
  3046                           
  3047                           	psect	text13
  3048   002FDE                     __ptext13:
  3049                           	callstack 0
  3050   002FDE                     _fputs:
  3051                           	callstack 20
  3052   002FDE  0E00               	movlw	0
  3053   002FE0  6E11               	movwf	(fputs@i+1)^0,c
  3054   002FE2  0E00               	movlw	0
  3055   002FE4  6E10               	movwf	fputs@i^0,c
  3056   002FE6  EF00  F018         	goto	l5430
  3057   002FEA                     l5426:
  3058   002FEA  C00F  F002         	movff	fputs@c,fputc@c
  3059   002FEE  6A03               	clrf	(fputc@c+1)^0,c
  3060   002FF0  C00D  F004         	movff	fputs@fp,fputc@fp
  3061   002FF4  C00E  F005         	movff	fputs@fp+1,fputc@fp+1
  3062   002FF8  ECCA  F012         	call	_fputc	;wreg free
  3063   002FFC  4A10               	infsnz	fputs@i^0,f,c
  3064   002FFE  2A11               	incf	(fputs@i+1)^0,f,c
  3065   003000                     l5430:
  3066   003000  5010               	movf	fputs@i^0,w,c
  3067   003002  240B               	addwf	fputs@s^0,w,c
  3068   003004  6ED9               	movwf	fsr2l,c
  3069   003006  5011               	movf	(fputs@i+1)^0,w,c
  3070   003008  200C               	addwfc	(fputs@s+1)^0,w,c
  3071   00300A  6EDA               	movwf	fsr2h,c
  3072   00300C  50DF               	movf	indf2,w,c
  3073   00300E  6E0F               	movwf	fputs@c^0,c
  3074   003010  500F               	movf	fputs@c^0,w,c
  3075   003012  A4D8               	btfss	status,2,c
  3076   003014  EF0E  F018         	goto	u4171
  3077   003018  EF10  F018         	goto	u4170
  3078   00301C                     u4171:
  3079   00301C  EFF5  F017         	goto	l5426
  3080   003020                     u4170:
  3081   003020  0012               	return		;funcret
  3082   003022                     __end_of_fputs:
  3083                           	callstack 0
  3084                           
  3085 ;; *************** function _fputc *****************
  3086 ;; Defined at:
  3087 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
  3088 ;; Parameters:    Size  Location     Type
  3089 ;;  c               2    1[COMRAM] int 
  3090 ;;  fp              2    3[COMRAM] PTR struct _IO_FILE
  3091 ;;		 -> sprintf@f(12), 
  3092 ;; Auto vars:     Size  Location     Type
  3093 ;;		None
  3094 ;; Return value:  Size  Location     Type
  3095 ;;                  2    1[COMRAM] int 
  3096 ;; Registers used:
  3097 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3098 ;; Tracked objects:
  3099 ;;		On entry : 0/0
  3100 ;;		On exit  : 0/0
  3101 ;;		Unchanged: 0/0
  3102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3103 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3105 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3106 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3107 ;;Total ram usage:        9 bytes
  3108 ;; Hardware stack levels used: 1
  3109 ;; Hardware stack levels required when called: 3
  3110 ;; This function calls:
  3111 ;;		_putch
  3112 ;; This function is called by:
  3113 ;;		_pad
  3114 ;;		_vfpfcnvrt
  3115 ;;		_fputs
  3116 ;; This function uses a non-reentrant model
  3117 ;;
  3118                           
  3119                           	psect	text14
  3120   002594                     __ptext14:
  3121                           	callstack 0
  3122   002594                     _fputc:
  3123                           	callstack 23
  3124   002594  5004               	movf	fputc@fp^0,w,c
  3125   002596  1005               	iorwf	(fputc@fp+1)^0,w,c
  3126   002598  B4D8               	btfsc	status,2,c
  3127   00259A  EFD1  F012         	goto	u4131
  3128   00259E  EFD3  F012         	goto	u4130
  3129   0025A2                     u4131:
  3130   0025A2  EFDC  F012         	goto	l5414
  3131   0025A6                     u4130:
  3132   0025A6  5004               	movf	fputc@fp^0,w,c
  3133   0025A8  1005               	iorwf	(fputc@fp+1)^0,w,c
  3134   0025AA  A4D8               	btfss	status,2,c
  3135   0025AC  EFDA  F012         	goto	u4141
  3136   0025B0  EFDC  F012         	goto	u4140
  3137   0025B4                     u4141:
  3138   0025B4  EFE1  F012         	goto	l5416
  3139   0025B8                     u4140:
  3140   0025B8                     l5414:
  3141   0025B8  5002               	movf	fputc@c^0,w,c
  3142   0025BA  EC75  F019         	call	_putch
  3143   0025BE  EF2E  F013         	goto	l2409
  3144   0025C2                     l5416:
  3145   0025C2  EE20 F00A          	lfsr	2,10
  3146   0025C6  5004               	movf	fputc@fp^0,w,c
  3147   0025C8  26D9               	addwf	fsr2l,f,c
  3148   0025CA  5005               	movf	(fputc@fp+1)^0,w,c
  3149   0025CC  22DA               	addwfc	fsr2h,f,c
  3150   0025CE  50DE               	movf	postinc2,w,c
  3151   0025D0  10DE               	iorwf	postinc2,w,c
  3152   0025D2  B4D8               	btfsc	status,2,c
  3153   0025D4  EFEE  F012         	goto	u4151
  3154   0025D8  EFF0  F012         	goto	u4150
  3155   0025DC                     u4151:
  3156   0025DC  EF0B  F013         	goto	l5420
  3157   0025E0                     u4150:
  3158   0025E0  EE20 F00A          	lfsr	2,10
  3159   0025E4  5004               	movf	fputc@fp^0,w,c
  3160   0025E6  26D9               	addwf	fsr2l,f,c
  3161   0025E8  5005               	movf	(fputc@fp+1)^0,w,c
  3162   0025EA  22DA               	addwfc	fsr2h,f,c
  3163   0025EC  EE10 F003          	lfsr	1,3
  3164   0025F0  5004               	movf	fputc@fp^0,w,c
  3165   0025F2  26E1               	addwf	fsr1l,f,c
  3166   0025F4  5005               	movf	(fputc@fp+1)^0,w,c
  3167   0025F6  22E2               	addwfc	fsr1h,f,c
  3168   0025F8  50DE               	movf	postinc2,w,c
  3169   0025FA  5CE6               	subwf	postinc1,w,c
  3170   0025FC  50E6               	movf	postinc1,w,c
  3171   0025FE  0A80               	xorlw	128
  3172   002600  6E0A               	movwf	(??_fputc+4)^0,c
  3173   002602  50DE               	movf	postinc2,w,c
  3174   002604  0A80               	xorlw	128
  3175   002606  580A               	subwfb	(??_fputc+4)^0,w,c
  3176   002608  B0D8               	btfsc	status,0,c
  3177   00260A  EF09  F013         	goto	u4161
  3178   00260E  EF0B  F013         	goto	u4160
  3179   002612                     u4161:
  3180   002612  EF2E  F013         	goto	l2409
  3181   002616                     u4160:
  3182   002616                     l5420:
  3183   002616  EE20 F003          	lfsr	2,3
  3184   00261A  5004               	movf	fputc@fp^0,w,c
  3185   00261C  26D9               	addwf	fsr2l,f,c
  3186   00261E  5005               	movf	(fputc@fp+1)^0,w,c
  3187   002620  22DA               	addwfc	fsr2h,f,c
  3188   002622  CFDE F006          	movff	postinc2,??_fputc
  3189   002626  CFDD F007          	movff	postdec2,??_fputc+1
  3190   00262A  C004  FFD9         	movff	fputc@fp,fsr2l
  3191   00262E  C005  FFDA         	movff	fputc@fp+1,fsr2h
  3192   002632  CFDE F008          	movff	postinc2,??_fputc+2
  3193   002636  CFDD F009          	movff	postdec2,??_fputc+3
  3194   00263A  5006               	movf	??_fputc^0,w,c
  3195   00263C  2408               	addwf	(??_fputc+2)^0,w,c
  3196   00263E  6ED9               	movwf	fsr2l,c
  3197   002640  5007               	movf	(??_fputc+1)^0,w,c
  3198   002642  2009               	addwfc	(??_fputc+3)^0,w,c
  3199   002644  6EDA               	movwf	fsr2h,c
  3200   002646  C002  FFDF         	movff	fputc@c,indf2
  3201   00264A  EE20 F003          	lfsr	2,3
  3202   00264E  5004               	movf	fputc@fp^0,w,c
  3203   002650  26D9               	addwf	fsr2l,f,c
  3204   002652  5005               	movf	(fputc@fp+1)^0,w,c
  3205   002654  22DA               	addwfc	fsr2h,f,c
  3206   002656  2ADE               	incf	postinc2,f,c
  3207   002658  0E00               	movlw	0
  3208   00265A  22DD               	addwfc	postdec2,f,c
  3209   00265C                     l2409:
  3210   00265C  0012               	return		;funcret
  3211   00265E                     __end_of_fputc:
  3212                           	callstack 0
  3213                           
  3214 ;; *************** function _putch *****************
  3215 ;; Defined at:
  3216 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\putch.c"
  3217 ;; Parameters:    Size  Location     Type
  3218 ;;  c               1    wreg     unsigned char 
  3219 ;; Auto vars:     Size  Location     Type
  3220 ;;  c               1    0[COMRAM] unsigned char 
  3221 ;; Return value:  Size  Location     Type
  3222 ;;                  1    wreg      void 
  3223 ;; Registers used:
  3224 ;;		wreg
  3225 ;; Tracked objects:
  3226 ;;		On entry : 0/0
  3227 ;;		On exit  : 0/0
  3228 ;;		Unchanged: 0/0
  3229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3234 ;;Total ram usage:        0 bytes
  3235 ;; Hardware stack levels used: 1
  3236 ;; Hardware stack levels required when called: 2
  3237 ;; This function calls:
  3238 ;;		Nothing
  3239 ;; This function is called by:
  3240 ;;		_fputc
  3241 ;; This function uses a non-reentrant model
  3242 ;;
  3243                           
  3244                           	psect	text15
  3245   0032EA                     __ptext15:
  3246                           	callstack 0
  3247   0032EA                     _putch:
  3248                           	callstack 23
  3249   0032EA  0012               	return		;funcret
  3250   0032EC                     __end_of_putch:
  3251                           	callstack 0
  3252                           
  3253 ;; *************** function _abs *****************
  3254 ;; Defined at:
  3255 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\abs.c"
  3256 ;; Parameters:    Size  Location     Type
  3257 ;;  a               2    7[COMRAM] int 
  3258 ;; Auto vars:     Size  Location     Type
  3259 ;;		None
  3260 ;; Return value:  Size  Location     Type
  3261 ;;                  2    7[COMRAM] int 
  3262 ;; Registers used:
  3263 ;;		wreg, status,2, status,0
  3264 ;; Tracked objects:
  3265 ;;		On entry : 0/0
  3266 ;;		On exit  : 0/0
  3267 ;;		Unchanged: 0/0
  3268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3269 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3271 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3272 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3273 ;;Total ram usage:        4 bytes
  3274 ;; Hardware stack levels used: 1
  3275 ;; Hardware stack levels required when called: 2
  3276 ;; This function calls:
  3277 ;;		Nothing
  3278 ;; This function is called by:
  3279 ;;		_dtoa
  3280 ;; This function uses a non-reentrant model
  3281 ;;
  3282                           
  3283                           	psect	text16
  3284   0030E6                     __ptext16:
  3285                           	callstack 0
  3286   0030E6                     _abs:
  3287                           	callstack 23
  3288   0030E6  BE09               	btfsc	(abs@a+1)^0,7,c
  3289   0030E8  EF80  F018         	goto	u4360
  3290   0030EC  5009               	movf	(abs@a+1)^0,w,c
  3291   0030EE  E106               	bnz	u4361
  3292   0030F0  0408               	decf	abs@a^0,w,c
  3293   0030F2  B0D8               	btfsc	status,0,c
  3294   0030F4  EF7E  F018         	goto	u4361
  3295   0030F8  EF80  F018         	goto	u4360
  3296   0030FC                     u4361:
  3297   0030FC  EF8E  F018         	goto	l2394
  3298   003100                     u4360:
  3299   003100  C008  F00A         	movff	abs@a,??_abs
  3300   003104  C009  F00B         	movff	abs@a+1,??_abs+1
  3301   003108  1E0A               	comf	??_abs^0,f,c
  3302   00310A  1E0B               	comf	(??_abs+1)^0,f,c
  3303   00310C  4A0A               	infsnz	??_abs^0,f,c
  3304   00310E  2A0B               	incf	(??_abs+1)^0,f,c
  3305   003110  C00A  F008         	movff	??_abs,?_abs
  3306   003114  C00B  F009         	movff	??_abs+1,?_abs+1
  3307   003118  EF92  F018         	goto	l2397
  3308   00311C                     l2394:
  3309   00311C  C008  F008         	movff	abs@a,?_abs
  3310   003120  C009  F009         	movff	abs@a+1,?_abs+1
  3311   003124                     l2397:
  3312   003124  0012               	return		;funcret
  3313   003126                     __end_of_abs:
  3314                           	callstack 0
  3315                           
  3316 ;; *************** function ___awmod *****************
  3317 ;; Defined at:
  3318 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  3319 ;; Parameters:    Size  Location     Type
  3320 ;;  dividend        2    1[COMRAM] int 
  3321 ;;  divisor         2    3[COMRAM] int 
  3322 ;; Auto vars:     Size  Location     Type
  3323 ;;  sign            1    6[COMRAM] unsigned char 
  3324 ;;  counter         1    5[COMRAM] unsigned char 
  3325 ;; Return value:  Size  Location     Type
  3326 ;;                  2    1[COMRAM] int 
  3327 ;; Registers used:
  3328 ;;		wreg, status,2, status,0
  3329 ;; Tracked objects:
  3330 ;;		On entry : 0/0
  3331 ;;		On exit  : 0/0
  3332 ;;		Unchanged: 0/0
  3333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3334 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3335 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3337 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3338 ;;Total ram usage:        6 bytes
  3339 ;; Hardware stack levels used: 1
  3340 ;; Hardware stack levels required when called: 2
  3341 ;; This function calls:
  3342 ;;		Nothing
  3343 ;; This function is called by:
  3344 ;;		_dtoa
  3345 ;; This function uses a non-reentrant model
  3346 ;;
  3347                           
  3348                           	psect	text17
  3349   0028A2                     __ptext17:
  3350                           	callstack 0
  3351   0028A2                     ___awmod:
  3352                           	callstack 23
  3353   0028A2  0E00               	movlw	0
  3354   0028A4  6E07               	movwf	___awmod@sign^0,c
  3355   0028A6  BE03               	btfsc	(___awmod@dividend+1)^0,7,c
  3356   0028A8  EF5A  F014         	goto	u4280
  3357   0028AC  EF58  F014         	goto	u4281
  3358   0028B0                     u4281:
  3359   0028B0  EF60  F014         	goto	l5508
  3360   0028B4                     u4280:
  3361   0028B4  6C02               	negf	___awmod@dividend^0,c
  3362   0028B6  1E03               	comf	(___awmod@dividend+1)^0,f,c
  3363   0028B8  B0D8               	btfsc	status,0,c
  3364   0028BA  2A03               	incf	(___awmod@dividend+1)^0,f,c
  3365   0028BC  0E01               	movlw	1
  3366   0028BE  6E07               	movwf	___awmod@sign^0,c
  3367   0028C0                     l5508:
  3368   0028C0  BE05               	btfsc	(___awmod@divisor+1)^0,7,c
  3369   0028C2  EF67  F014         	goto	u4290
  3370   0028C6  EF65  F014         	goto	u4291
  3371   0028CA                     u4291:
  3372   0028CA  EF6B  F014         	goto	l5512
  3373   0028CE                     u4290:
  3374   0028CE  6C04               	negf	___awmod@divisor^0,c
  3375   0028D0  1E05               	comf	(___awmod@divisor+1)^0,f,c
  3376   0028D2  B0D8               	btfsc	status,0,c
  3377   0028D4  2A05               	incf	(___awmod@divisor+1)^0,f,c
  3378   0028D6                     l5512:
  3379   0028D6  5004               	movf	___awmod@divisor^0,w,c
  3380   0028D8  1005               	iorwf	(___awmod@divisor+1)^0,w,c
  3381   0028DA  B4D8               	btfsc	status,2,c
  3382   0028DC  EF72  F014         	goto	u4301
  3383   0028E0  EF74  F014         	goto	u4300
  3384   0028E4                     u4301:
  3385   0028E4  EF98  F014         	goto	l5528
  3386   0028E8                     u4300:
  3387   0028E8  0E01               	movlw	1
  3388   0028EA  6E06               	movwf	___awmod@counter^0,c
  3389   0028EC  EF7C  F014         	goto	l5518
  3390   0028F0                     l5516:
  3391   0028F0  90D8               	bcf	status,0,c
  3392   0028F2  3604               	rlcf	___awmod@divisor^0,f,c
  3393   0028F4  3605               	rlcf	(___awmod@divisor+1)^0,f,c
  3394   0028F6  2A06               	incf	___awmod@counter^0,f,c
  3395   0028F8                     l5518:
  3396   0028F8  AE05               	btfss	(___awmod@divisor+1)^0,7,c
  3397   0028FA  EF81  F014         	goto	u4311
  3398   0028FE  EF83  F014         	goto	u4310
  3399   002902                     u4311:
  3400   002902  EF78  F014         	goto	l5516
  3401   002906                     u4310:
  3402   002906                     l5520:
  3403   002906  5004               	movf	___awmod@divisor^0,w,c
  3404   002908  5C02               	subwf	___awmod@dividend^0,w,c
  3405   00290A  5005               	movf	(___awmod@divisor+1)^0,w,c
  3406   00290C  5803               	subwfb	(___awmod@dividend+1)^0,w,c
  3407   00290E  A0D8               	btfss	status,0,c
  3408   002910  EF8C  F014         	goto	u4321
  3409   002914  EF8E  F014         	goto	u4320
  3410   002918                     u4321:
  3411   002918  EF92  F014         	goto	l5524
  3412   00291C                     u4320:
  3413   00291C  5004               	movf	___awmod@divisor^0,w,c
  3414   00291E  5E02               	subwf	___awmod@dividend^0,f,c
  3415   002920  5005               	movf	(___awmod@divisor+1)^0,w,c
  3416   002922  5A03               	subwfb	(___awmod@dividend+1)^0,f,c
  3417   002924                     l5524:
  3418   002924  90D8               	bcf	status,0,c
  3419   002926  3205               	rrcf	(___awmod@divisor+1)^0,f,c
  3420   002928  3204               	rrcf	___awmod@divisor^0,f,c
  3421   00292A  2E06               	decfsz	___awmod@counter^0,f,c
  3422   00292C  EF83  F014         	goto	l5520
  3423   002930                     l5528:
  3424   002930  5007               	movf	___awmod@sign^0,w,c
  3425   002932  B4D8               	btfsc	status,2,c
  3426   002934  EF9E  F014         	goto	u4331
  3427   002938  EFA0  F014         	goto	u4330
  3428   00293C                     u4331:
  3429   00293C  EFA4  F014         	goto	l5532
  3430   002940                     u4330:
  3431   002940  6C02               	negf	___awmod@dividend^0,c
  3432   002942  1E03               	comf	(___awmod@dividend+1)^0,f,c
  3433   002944  B0D8               	btfsc	status,0,c
  3434   002946  2A03               	incf	(___awmod@dividend+1)^0,f,c
  3435   002948                     l5532:
  3436   002948  C002  F002         	movff	___awmod@dividend,?___awmod
  3437   00294C  C003  F003         	movff	___awmod@dividend+1,?___awmod+1
  3438   002950  0012               	return		;funcret
  3439   002952                     __end_of___awmod:
  3440                           	callstack 0
  3441                           
  3442 ;; *************** function ___awdiv *****************
  3443 ;; Defined at:
  3444 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  3445 ;; Parameters:    Size  Location     Type
  3446 ;;  dividend        2    1[COMRAM] int 
  3447 ;;  divisor         2    3[COMRAM] int 
  3448 ;; Auto vars:     Size  Location     Type
  3449 ;;  quotient        2    7[COMRAM] int 
  3450 ;;  sign            1    6[COMRAM] unsigned char 
  3451 ;;  counter         1    5[COMRAM] unsigned char 
  3452 ;; Return value:  Size  Location     Type
  3453 ;;                  2    1[COMRAM] int 
  3454 ;; Registers used:
  3455 ;;		wreg, status,2, status,0
  3456 ;; Tracked objects:
  3457 ;;		On entry : 0/0
  3458 ;;		On exit  : 0/0
  3459 ;;		Unchanged: 0/0
  3460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3461 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3462 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3464 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3465 ;;Total ram usage:        8 bytes
  3466 ;; Hardware stack levels used: 1
  3467 ;; Hardware stack levels required when called: 2
  3468 ;; This function calls:
  3469 ;;		Nothing
  3470 ;; This function is called by:
  3471 ;;		_dtoa
  3472 ;; This function uses a non-reentrant model
  3473 ;;
  3474                           
  3475                           	psect	text18
  3476   002724                     __ptext18:
  3477                           	callstack 0
  3478   002724                     ___awdiv:
  3479                           	callstack 23
  3480   002724  0E00               	movlw	0
  3481   002726  6E07               	movwf	___awdiv@sign^0,c
  3482   002728  BE05               	btfsc	(___awdiv@divisor+1)^0,7,c
  3483   00272A  EF9B  F013         	goto	u4220
  3484   00272E  EF99  F013         	goto	u4221
  3485   002732                     u4221:
  3486   002732  EFA1  F013         	goto	l5464
  3487   002736                     u4220:
  3488   002736  6C04               	negf	___awdiv@divisor^0,c
  3489   002738  1E05               	comf	(___awdiv@divisor+1)^0,f,c
  3490   00273A  B0D8               	btfsc	status,0,c
  3491   00273C  2A05               	incf	(___awdiv@divisor+1)^0,f,c
  3492   00273E  0E01               	movlw	1
  3493   002740  6E07               	movwf	___awdiv@sign^0,c
  3494   002742                     l5464:
  3495   002742  BE03               	btfsc	(___awdiv@dividend+1)^0,7,c
  3496   002744  EFA8  F013         	goto	u4230
  3497   002748  EFA6  F013         	goto	u4231
  3498   00274C                     u4231:
  3499   00274C  EFAE  F013         	goto	l5470
  3500   002750                     u4230:
  3501   002750  6C02               	negf	___awdiv@dividend^0,c
  3502   002752  1E03               	comf	(___awdiv@dividend+1)^0,f,c
  3503   002754  B0D8               	btfsc	status,0,c
  3504   002756  2A03               	incf	(___awdiv@dividend+1)^0,f,c
  3505   002758  0E01               	movlw	1
  3506   00275A  1A07               	xorwf	___awdiv@sign^0,f,c
  3507   00275C                     l5470:
  3508   00275C  0E00               	movlw	0
  3509   00275E  6E09               	movwf	(___awdiv@quotient+1)^0,c
  3510   002760  0E00               	movlw	0
  3511   002762  6E08               	movwf	___awdiv@quotient^0,c
  3512   002764  5004               	movf	___awdiv@divisor^0,w,c
  3513   002766  1005               	iorwf	(___awdiv@divisor+1)^0,w,c
  3514   002768  B4D8               	btfsc	status,2,c
  3515   00276A  EFB9  F013         	goto	u4241
  3516   00276E  EFBB  F013         	goto	u4240
  3517   002772                     u4241:
  3518   002772  EFE3  F013         	goto	l5492
  3519   002776                     u4240:
  3520   002776  0E01               	movlw	1
  3521   002778  6E06               	movwf	___awdiv@counter^0,c
  3522   00277A  EFC3  F013         	goto	l5478
  3523   00277E                     l5476:
  3524   00277E  90D8               	bcf	status,0,c
  3525   002780  3604               	rlcf	___awdiv@divisor^0,f,c
  3526   002782  3605               	rlcf	(___awdiv@divisor+1)^0,f,c
  3527   002784  2A06               	incf	___awdiv@counter^0,f,c
  3528   002786                     l5478:
  3529   002786  AE05               	btfss	(___awdiv@divisor+1)^0,7,c
  3530   002788  EFC8  F013         	goto	u4251
  3531   00278C  EFCA  F013         	goto	u4250
  3532   002790                     u4251:
  3533   002790  EFBF  F013         	goto	l5476
  3534   002794                     u4250:
  3535   002794                     l5480:
  3536   002794  90D8               	bcf	status,0,c
  3537   002796  3608               	rlcf	___awdiv@quotient^0,f,c
  3538   002798  3609               	rlcf	(___awdiv@quotient+1)^0,f,c
  3539   00279A  5004               	movf	___awdiv@divisor^0,w,c
  3540   00279C  5C02               	subwf	___awdiv@dividend^0,w,c
  3541   00279E  5005               	movf	(___awdiv@divisor+1)^0,w,c
  3542   0027A0  5803               	subwfb	(___awdiv@dividend+1)^0,w,c
  3543   0027A2  A0D8               	btfss	status,0,c
  3544   0027A4  EFD6  F013         	goto	u4261
  3545   0027A8  EFD8  F013         	goto	u4260
  3546   0027AC                     u4261:
  3547   0027AC  EFDD  F013         	goto	l5488
  3548   0027B0                     u4260:
  3549   0027B0  5004               	movf	___awdiv@divisor^0,w,c
  3550   0027B2  5E02               	subwf	___awdiv@dividend^0,f,c
  3551   0027B4  5005               	movf	(___awdiv@divisor+1)^0,w,c
  3552   0027B6  5A03               	subwfb	(___awdiv@dividend+1)^0,f,c
  3553   0027B8  8008               	bsf	___awdiv@quotient^0,0,c
  3554   0027BA                     l5488:
  3555   0027BA  90D8               	bcf	status,0,c
  3556   0027BC  3205               	rrcf	(___awdiv@divisor+1)^0,f,c
  3557   0027BE  3204               	rrcf	___awdiv@divisor^0,f,c
  3558   0027C0  2E06               	decfsz	___awdiv@counter^0,f,c
  3559   0027C2  EFCA  F013         	goto	l5480
  3560   0027C6                     l5492:
  3561   0027C6  5007               	movf	___awdiv@sign^0,w,c
  3562   0027C8  B4D8               	btfsc	status,2,c
  3563   0027CA  EFE9  F013         	goto	u4271
  3564   0027CE  EFEB  F013         	goto	u4270
  3565   0027D2                     u4271:
  3566   0027D2  EFEF  F013         	goto	l5496
  3567   0027D6                     u4270:
  3568   0027D6  6C08               	negf	___awdiv@quotient^0,c
  3569   0027D8  1E09               	comf	(___awdiv@quotient+1)^0,f,c
  3570   0027DA  B0D8               	btfsc	status,0,c
  3571   0027DC  2A09               	incf	(___awdiv@quotient+1)^0,f,c
  3572   0027DE                     l5496:
  3573   0027DE  C008  F002         	movff	___awdiv@quotient,?___awdiv
  3574   0027E2  C009  F003         	movff	___awdiv@quotient+1,?___awdiv+1
  3575   0027E6  0012               	return		;funcret
  3576   0027E8                     __end_of___awdiv:
  3577                           	callstack 0
  3578                           
  3579 ;; *************** function _memset *****************
  3580 ;; Defined at:
  3581 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\memset.c"
  3582 ;; Parameters:    Size  Location     Type
  3583 ;;  dest            2    1[COMRAM] PTR void 
  3584 ;;		 -> Resultstr2(7), Resultstr1(7), 
  3585 ;;  c               2    3[COMRAM] int 
  3586 ;;  n               2    5[COMRAM] unsigned int 
  3587 ;; Auto vars:     Size  Location     Type
  3588 ;;  s               2   11[COMRAM] PTR unsigned char 
  3589 ;;		 -> Resultstr2(7), Resultstr1(7), 
  3590 ;;  k               2    9[COMRAM] unsigned int 
  3591 ;; Return value:  Size  Location     Type
  3592 ;;                  2    1[COMRAM] PTR void 
  3593 ;; Registers used:
  3594 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3595 ;; Tracked objects:
  3596 ;;		On entry : 0/0
  3597 ;;		On exit  : 0/0
  3598 ;;		Unchanged: 0/0
  3599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3600 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3601 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3602 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3603 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3604 ;;Total ram usage:       12 bytes
  3605 ;; Hardware stack levels used: 1
  3606 ;; Hardware stack levels required when called: 2
  3607 ;; This function calls:
  3608 ;;		Nothing
  3609 ;; This function is called by:
  3610 ;;		_convert_uint8_to_string
  3611 ;;		_convert_uint16_to_string
  3612 ;;		_convert_uint32_to_string
  3613 ;; This function uses a non-reentrant model
  3614 ;;
  3615                           
  3616                           	psect	text19
  3617   001D6A                     __ptext19:
  3618                           	callstack 0
  3619   001D6A                     _memset:
  3620                           	callstack 27
  3621   001D6A  C002  F00C         	movff	memset@dest,memset@s
  3622   001D6E  C003  F00D         	movff	memset@dest+1,memset@s+1
  3623   001D72  5006               	movf	memset@n^0,w,c
  3624   001D74  1007               	iorwf	(memset@n+1)^0,w,c
  3625   001D76  A4D8               	btfss	status,2,c
  3626   001D78  EFC0  F00E         	goto	u4761
  3627   001D7C  EFC2  F00E         	goto	u4760
  3628   001D80                     u4761:
  3629   001D80  EFC4  F00E         	goto	l5936
  3630   001D84                     u4760:
  3631   001D84  EF6F  F00F         	goto	l2319
  3632   001D88                     l5936:
  3633   001D88  C00C  FFD9         	movff	memset@s,fsr2l
  3634   001D8C  C00D  FFDA         	movff	memset@s+1,fsr2h
  3635   001D90  C004  FFDF         	movff	memset@c,indf2
  3636   001D94  5006               	movf	memset@n^0,w,c
  3637   001D96  240C               	addwf	memset@s^0,w,c
  3638   001D98  6E08               	movwf	??_memset^0,c
  3639   001D9A  5007               	movf	(memset@n+1)^0,w,c
  3640   001D9C  200D               	addwfc	(memset@s+1)^0,w,c
  3641   001D9E  6E09               	movwf	(??_memset+1)^0,c
  3642   001DA0  0EFF               	movlw	255
  3643   001DA2  2408               	addwf	??_memset^0,w,c
  3644   001DA4  6ED9               	movwf	fsr2l,c
  3645   001DA6  0EFF               	movlw	255
  3646   001DA8  2009               	addwfc	(??_memset+1)^0,w,c
  3647   001DAA  6EDA               	movwf	fsr2h,c
  3648   001DAC  C004  FFDF         	movff	memset@c,indf2
  3649   001DB0  5007               	movf	(memset@n+1)^0,w,c
  3650   001DB2  E107               	bnz	u4771
  3651   001DB4  0E03               	movlw	3
  3652   001DB6  5C06               	subwf	memset@n^0,w,c
  3653   001DB8  B0D8               	btfsc	status,0,c
  3654   001DBA  EFE1  F00E         	goto	u4771
  3655   001DBE  EFE3  F00E         	goto	u4770
  3656   001DC2                     u4771:
  3657   001DC2  EFE5  F00E         	goto	l5942
  3658   001DC6                     u4770:
  3659   001DC6  EF6F  F00F         	goto	l2319
  3660   001DCA                     l5942:
  3661   001DCA  EE20 F001          	lfsr	2,1
  3662   001DCE  500C               	movf	memset@s^0,w,c
  3663   001DD0  26D9               	addwf	fsr2l,f,c
  3664   001DD2  500D               	movf	(memset@s+1)^0,w,c
  3665   001DD4  22DA               	addwfc	fsr2h,f,c
  3666   001DD6  C004  FFDF         	movff	memset@c,indf2
  3667   001DDA  EE20 F002          	lfsr	2,2
  3668   001DDE  500C               	movf	memset@s^0,w,c
  3669   001DE0  26D9               	addwf	fsr2l,f,c
  3670   001DE2  500D               	movf	(memset@s+1)^0,w,c
  3671   001DE4  22DA               	addwfc	fsr2h,f,c
  3672   001DE6  C004  FFDF         	movff	memset@c,indf2
  3673   001DEA  5006               	movf	memset@n^0,w,c
  3674   001DEC  240C               	addwf	memset@s^0,w,c
  3675   001DEE  6E08               	movwf	??_memset^0,c
  3676   001DF0  5007               	movf	(memset@n+1)^0,w,c
  3677   001DF2  200D               	addwfc	(memset@s+1)^0,w,c
  3678   001DF4  6E09               	movwf	(??_memset+1)^0,c
  3679   001DF6  0EFE               	movlw	254
  3680   001DF8  2408               	addwf	??_memset^0,w,c
  3681   001DFA  6ED9               	movwf	fsr2l,c
  3682   001DFC  0EFF               	movlw	255
  3683   001DFE  2009               	addwfc	(??_memset+1)^0,w,c
  3684   001E00  6EDA               	movwf	fsr2h,c
  3685   001E02  C004  FFDF         	movff	memset@c,indf2
  3686   001E06  5006               	movf	memset@n^0,w,c
  3687   001E08  240C               	addwf	memset@s^0,w,c
  3688   001E0A  6E08               	movwf	??_memset^0,c
  3689   001E0C  5007               	movf	(memset@n+1)^0,w,c
  3690   001E0E  200D               	addwfc	(memset@s+1)^0,w,c
  3691   001E10  6E09               	movwf	(??_memset+1)^0,c
  3692   001E12  0EFD               	movlw	253
  3693   001E14  2408               	addwf	??_memset^0,w,c
  3694   001E16  6ED9               	movwf	fsr2l,c
  3695   001E18  0EFF               	movlw	255
  3696   001E1A  2009               	addwfc	(??_memset+1)^0,w,c
  3697   001E1C  6EDA               	movwf	fsr2h,c
  3698   001E1E  C004  FFDF         	movff	memset@c,indf2
  3699   001E22  5007               	movf	(memset@n+1)^0,w,c
  3700   001E24  E107               	bnz	u4781
  3701   001E26  0E07               	movlw	7
  3702   001E28  5C06               	subwf	memset@n^0,w,c
  3703   001E2A  B0D8               	btfsc	status,0,c
  3704   001E2C  EF1A  F00F         	goto	u4781
  3705   001E30  EF1C  F00F         	goto	u4780
  3706   001E34                     u4781:
  3707   001E34  EF1E  F00F         	goto	l5948
  3708   001E38                     u4780:
  3709   001E38  EF6F  F00F         	goto	l2319
  3710   001E3C                     l5948:
  3711   001E3C  EE20 F003          	lfsr	2,3
  3712   001E40  500C               	movf	memset@s^0,w,c
  3713   001E42  26D9               	addwf	fsr2l,f,c
  3714   001E44  500D               	movf	(memset@s+1)^0,w,c
  3715   001E46  22DA               	addwfc	fsr2h,f,c
  3716   001E48  C004  FFDF         	movff	memset@c,indf2
  3717   001E4C  5006               	movf	memset@n^0,w,c
  3718   001E4E  240C               	addwf	memset@s^0,w,c
  3719   001E50  6E08               	movwf	??_memset^0,c
  3720   001E52  5007               	movf	(memset@n+1)^0,w,c
  3721   001E54  200D               	addwfc	(memset@s+1)^0,w,c
  3722   001E56  6E09               	movwf	(??_memset+1)^0,c
  3723   001E58  0EFC               	movlw	252
  3724   001E5A  2408               	addwf	??_memset^0,w,c
  3725   001E5C  6ED9               	movwf	fsr2l,c
  3726   001E5E  0EFF               	movlw	255
  3727   001E60  2009               	addwfc	(??_memset+1)^0,w,c
  3728   001E62  6EDA               	movwf	fsr2h,c
  3729   001E64  C004  FFDF         	movff	memset@c,indf2
  3730   001E68  5007               	movf	(memset@n+1)^0,w,c
  3731   001E6A  E107               	bnz	u4791
  3732   001E6C  0E09               	movlw	9
  3733   001E6E  5C06               	subwf	memset@n^0,w,c
  3734   001E70  B0D8               	btfsc	status,0,c
  3735   001E72  EF3D  F00F         	goto	u4791
  3736   001E76  EF3F  F00F         	goto	u4790
  3737   001E7A                     u4791:
  3738   001E7A  EF41  F00F         	goto	l5954
  3739   001E7E                     u4790:
  3740   001E7E  EF6F  F00F         	goto	l2319
  3741   001E82                     l5954:
  3742   001E82  C00C  F008         	movff	memset@s,??_memset
  3743   001E86  C00D  F009         	movff	memset@s+1,??_memset+1
  3744   001E8A  1E08               	comf	??_memset^0,f,c
  3745   001E8C  1E09               	comf	(??_memset+1)^0,f,c
  3746   001E8E  4A08               	infsnz	??_memset^0,f,c
  3747   001E90  2A09               	incf	(??_memset+1)^0,f,c
  3748   001E92  0E03               	movlw	3
  3749   001E94  1408               	andwf	??_memset^0,w,c
  3750   001E96  6E0A               	movwf	memset@k^0,c
  3751   001E98  6A0B               	clrf	(memset@k+1)^0,c
  3752   001E9A  500A               	movf	memset@k^0,w,c
  3753   001E9C  260C               	addwf	memset@s^0,f,c
  3754   001E9E  500B               	movf	(memset@k+1)^0,w,c
  3755   001EA0  220D               	addwfc	(memset@s+1)^0,f,c
  3756   001EA2  500A               	movf	memset@k^0,w,c
  3757   001EA4  5E06               	subwf	memset@n^0,f,c
  3758   001EA6  500B               	movf	(memset@k+1)^0,w,c
  3759   001EA8  5A07               	subwfb	(memset@n+1)^0,f,c
  3760   001EAA  0EFC               	movlw	252
  3761   001EAC  1606               	andwf	memset@n^0,f,c
  3762   001EAE  0EFF               	movlw	255
  3763   001EB0  1607               	andwf	(memset@n+1)^0,f,c
  3764   001EB2  EF66  F00F         	goto	l5962
  3765   001EB6                     l5956:
  3766   001EB6  C00C  FFD9         	movff	memset@s,fsr2l
  3767   001EBA  C00D  FFDA         	movff	memset@s+1,fsr2h
  3768   001EBE  C004  FFDF         	movff	memset@c,indf2
  3769   001EC2  0606               	decf	memset@n^0,f,c
  3770   001EC4  A0D8               	btfss	status,0,c
  3771   001EC6  0607               	decf	(memset@n+1)^0,f,c
  3772   001EC8  4A0C               	infsnz	memset@s^0,f,c
  3773   001ECA  2A0D               	incf	(memset@s+1)^0,f,c
  3774   001ECC                     l5962:
  3775   001ECC  5006               	movf	memset@n^0,w,c
  3776   001ECE  1007               	iorwf	(memset@n+1)^0,w,c
  3777   001ED0  A4D8               	btfss	status,2,c
  3778   001ED2  EF6D  F00F         	goto	u4801
  3779   001ED6  EF6F  F00F         	goto	u4800
  3780   001EDA                     u4801:
  3781   001EDA  EF5B  F00F         	goto	l5956
  3782   001EDE                     u4800:
  3783   001EDE                     l2319:
  3784   001EDE  0012               	return		;funcret
  3785   001EE0                     __end_of_memset:
  3786                           	callstack 0
  3787                           
  3788 ;; *************** function _application_intialize *****************
  3789 ;; Defined at:
  3790 ;;		line 70 in file "application.c"
  3791 ;; Parameters:    Size  Location     Type
  3792 ;;		None
  3793 ;; Auto vars:     Size  Location     Type
  3794 ;;		None
  3795 ;; Return value:  Size  Location     Type
  3796 ;;                  1    wreg      void 
  3797 ;; Registers used:
  3798 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3799 ;; Tracked objects:
  3800 ;;		On entry : 0/0
  3801 ;;		On exit  : 0/0
  3802 ;;		Unchanged: 0/0
  3803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3808 ;;Total ram usage:        0 bytes
  3809 ;; Hardware stack levels used: 1
  3810 ;; Hardware stack levels required when called: 7
  3811 ;; This function calls:
  3812 ;;		_ecu_layer_intialize
  3813 ;;		_mcal_layer_intialize
  3814 ;; This function is called by:
  3815 ;;		_main
  3816 ;; This function uses a non-reentrant model
  3817 ;;
  3818                           
  3819                           	psect	text20
  3820   0032CC                     __ptext20:
  3821                           	callstack 0
  3822   0032CC                     _application_intialize:
  3823                           	callstack 23
  3824   0032CC                     
  3825                           ;application.c: 72:     ecu_layer_intialize();
  3826   0032CC  EC00  F019         	call	_ecu_layer_intialize	;wreg free
  3827   0032D0                     
  3828                           ;application.c: 73:     mcal_layer_intialize();
  3829   0032D0  EC59  F019         	call	_mcal_layer_intialize	;wreg free
  3830   0032D4  0012               	return		;funcret
  3831   0032D6                     __end_of_application_intialize:
  3832                           	callstack 0
  3833                           
  3834 ;; *************** function _mcal_layer_intialize *****************
  3835 ;; Defined at:
  3836 ;;		line 17 in file "MCAL_layer/mcal_layer_init.c"
  3837 ;; Parameters:    Size  Location     Type
  3838 ;;		None
  3839 ;; Auto vars:     Size  Location     Type
  3840 ;;  ret             1    0        unsigned char 
  3841 ;; Return value:  Size  Location     Type
  3842 ;;                  1    wreg      void 
  3843 ;; Registers used:
  3844 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3845 ;; Tracked objects:
  3846 ;;		On entry : 0/0
  3847 ;;		On exit  : 0/0
  3848 ;;		Unchanged: 0/0
  3849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3854 ;;Total ram usage:        0 bytes
  3855 ;; Hardware stack levels used: 1
  3856 ;; Hardware stack levels required when called: 4
  3857 ;; This function calls:
  3858 ;;		_ADC_initialize
  3859 ;; This function is called by:
  3860 ;;		_application_intialize
  3861 ;; This function uses a non-reentrant model
  3862 ;;
  3863                           
  3864                           	psect	text21
  3865   0032B2                     __ptext21:
  3866                           	callstack 0
  3867   0032B2                     _mcal_layer_intialize:
  3868                           	callstack 25
  3869   0032B2  0EED               	movlw	low _ADC1
  3870   0032B4  6E05               	movwf	ADC_initialize@ADC_obj^0,c
  3871   0032B6  0E00               	movlw	high _ADC1
  3872   0032B8  6E06               	movwf	(ADC_initialize@ADC_obj+1)^0,c
  3873   0032BA  ECFD  F014         	call	_ADC_initialize	;wreg free
  3874   0032BE  0012               	return		;funcret
  3875   0032C0                     __end_of_mcal_layer_intialize:
  3876                           	callstack 0
  3877                           
  3878 ;; *************** function _ADC_initialize *****************
  3879 ;; Defined at:
  3880 ;;		line 31 in file "MCAL_layer/ADC/hal_adc.c"
  3881 ;; Parameters:    Size  Location     Type
  3882 ;;  ADC_obj         2    4[COMRAM] PTR const struct .
  3883 ;;		 -> ADC1(4), 
  3884 ;; Auto vars:     Size  Location     Type
  3885 ;;  ret             1    7[COMRAM] unsigned char 
  3886 ;; Return value:  Size  Location     Type
  3887 ;;                  1    wreg      unsigned char 
  3888 ;; Registers used:
  3889 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3890 ;; Tracked objects:
  3891 ;;		On entry : 0/0
  3892 ;;		On exit  : 0/0
  3893 ;;		Unchanged: 0/0
  3894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3895 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3896 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3897 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3898 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3899 ;;Total ram usage:        4 bytes
  3900 ;; Hardware stack levels used: 1
  3901 ;; Hardware stack levels required when called: 3
  3902 ;; This function calls:
  3903 ;;		_adc_input_channel_port_configure
  3904 ;;		_configure_voltage_reference
  3905 ;;		_select_result_format
  3906 ;; This function is called by:
  3907 ;;		_mcal_layer_intialize
  3908 ;; This function uses a non-reentrant model
  3909 ;;
  3910                           
  3911                           	psect	text22
  3912   0029FA                     __ptext22:
  3913                           	callstack 0
  3914   0029FA                     _ADC_initialize:
  3915                           	callstack 25
  3916   0029FA                     
  3917                           ;MCAL_layer/ADC/hal_adc.c: 32:     Std_ReturnType ret = (Std_ReturnType)0x01;
  3918   0029FA  0E01               	movlw	1
  3919   0029FC  6E08               	movwf	ADC_initialize@ret^0,c
  3920   0029FE                     
  3921                           ;MCAL_layer/ADC/hal_adc.c: 33:     if(((void*)0) == ADC_obj)
  3922   0029FE  5005               	movf	ADC_initialize@ADC_obj^0,w,c
  3923   002A00  1006               	iorwf	(ADC_initialize@ADC_obj+1)^0,w,c
  3924   002A02  A4D8               	btfss	status,2,c
  3925   002A04  EF06  F015         	goto	u4671
  3926   002A08  EF08  F015         	goto	u4670
  3927   002A0C                     u4671:
  3928   002A0C  EF0C  F015         	goto	l363
  3929   002A10                     u4670:
  3930   002A10                     
  3931                           ;MCAL_layer/ADC/hal_adc.c: 34:     {;MCAL_layer/ADC/hal_adc.c: 35:         ret = (Std_Re
      +                          turnType)0x00;
  3932   002A10  0E00               	movlw	0
  3933   002A12  6E08               	movwf	ADC_initialize@ret^0,c
  3934                           
  3935                           ;MCAL_layer/ADC/hal_adc.c: 36:     }else
  3936   002A14  EF4D  F015         	goto	l5842
  3937   002A18                     l363:
  3938                           
  3939                           ;MCAL_layer/ADC/hal_adc.c: 37:     {;MCAL_layer/ADC/hal_adc.c: 39:         (ADCON0bits.A
      +                          DON = 0);
  3940   002A18  90C2               	bcf	194,0,c	;volatile
  3941   002A1A                     
  3942                           ;MCAL_layer/ADC/hal_adc.c: 41:         ADCON2bits.ACQT = ADC_obj->Acquisition_Time;
  3943   002A1A  C005  FFD9         	movff	ADC_initialize@ADC_obj,fsr2l
  3944   002A1E  C006  FFDA         	movff	ADC_initialize@ADC_obj+1,fsr2h
  3945   002A22  50DF               	movf	indf2,w,c
  3946   002A24  6E07               	movwf	??_ADC_initialize^0,c
  3947   002A26  4607               	rlncf	??_ADC_initialize^0,f,c
  3948   002A28  4607               	rlncf	??_ADC_initialize^0,f,c
  3949   002A2A  4607               	rlncf	??_ADC_initialize^0,f,c
  3950   002A2C  50C0               	movf	192,w,c	;volatile
  3951   002A2E  1807               	xorwf	??_ADC_initialize^0,w,c
  3952   002A30  0BC7               	andlw	-57
  3953   002A32  1807               	xorwf	??_ADC_initialize^0,w,c
  3954   002A34  6EC0               	movwf	192,c	;volatile
  3955                           
  3956                           ;MCAL_layer/ADC/hal_adc.c: 43:         ADCON2bits.ADCS = ADC_obj->Conversion_Clock;
  3957   002A36  EE20 F001          	lfsr	2,1
  3958   002A3A  5005               	movf	ADC_initialize@ADC_obj^0,w,c
  3959   002A3C  26D9               	addwf	fsr2l,f,c
  3960   002A3E  5006               	movf	(ADC_initialize@ADC_obj+1)^0,w,c
  3961   002A40  22DA               	addwfc	fsr2h,f,c
  3962   002A42  50DF               	movf	indf2,w,c
  3963   002A44  6E07               	movwf	??_ADC_initialize^0,c
  3964   002A46  50C0               	movf	192,w,c	;volatile
  3965   002A48  1807               	xorwf	??_ADC_initialize^0,w,c
  3966   002A4A  0BF8               	andlw	-8
  3967   002A4C  1807               	xorwf	??_ADC_initialize^0,w,c
  3968   002A4E  6EC0               	movwf	192,c	;volatile
  3969                           
  3970                           ;MCAL_layer/ADC/hal_adc.c: 45:         ADCON0bits.CHS = ADC_obj->ADC_Channel;
  3971   002A50  EE20 F002          	lfsr	2,2
  3972   002A54  5005               	movf	ADC_initialize@ADC_obj^0,w,c
  3973   002A56  26D9               	addwf	fsr2l,f,c
  3974   002A58  5006               	movf	(ADC_initialize@ADC_obj+1)^0,w,c
  3975   002A5A  22DA               	addwfc	fsr2h,f,c
  3976   002A5C  50DF               	movf	indf2,w,c
  3977   002A5E  6E07               	movwf	??_ADC_initialize^0,c
  3978   002A60  4607               	rlncf	??_ADC_initialize^0,f,c
  3979   002A62  4607               	rlncf	??_ADC_initialize^0,f,c
  3980   002A64  50C2               	movf	194,w,c	;volatile
  3981   002A66  1807               	xorwf	??_ADC_initialize^0,w,c
  3982   002A68  0BC3               	andlw	-61
  3983   002A6A  1807               	xorwf	??_ADC_initialize^0,w,c
  3984   002A6C  6EC2               	movwf	194,c	;volatile
  3985   002A6E                     
  3986                           ;MCAL_layer/ADC/hal_adc.c: 46:         adc_input_channel_port_configure(ADC_obj->ADC_Cha
      +                          nnel);
  3987   002A6E  EE20 F002          	lfsr	2,2
  3988   002A72  5005               	movf	ADC_initialize@ADC_obj^0,w,c
  3989   002A74  26D9               	addwf	fsr2l,f,c
  3990   002A76  5006               	movf	(ADC_initialize@ADC_obj+1)^0,w,c
  3991   002A78  22DA               	addwfc	fsr2h,f,c
  3992   002A7A  50DF               	movf	indf2,w,c
  3993   002A7C  EC5E  F012         	call	_adc_input_channel_port_configure
  3994   002A80                     
  3995                           ;MCAL_layer/ADC/hal_adc.c: 73:         select_result_format(ADC_obj);
  3996   002A80  C005  F002         	movff	ADC_initialize@ADC_obj,select_result_format@ADC_obj
  3997   002A84  C006  F003         	movff	ADC_initialize@ADC_obj+1,select_result_format@ADC_obj+1
  3998   002A88  EC11  F018         	call	_select_result_format	;wreg free
  3999   002A8C                     
  4000                           ;MCAL_layer/ADC/hal_adc.c: 75:         configure_voltage_reference(ADC_obj);
  4001   002A8C  C005  F002         	movff	ADC_initialize@ADC_obj,configure_voltage_reference@ADC_obj
  4002   002A90  C006  F003         	movff	ADC_initialize@ADC_obj+1,configure_voltage_reference@ADC_obj+1
  4003   002A94  ECA6  F017         	call	_configure_voltage_reference	;wreg free
  4004   002A98                     
  4005                           ;MCAL_layer/ADC/hal_adc.c: 77:         (ADCON0bits.ADON = 1);
  4006   002A98  80C2               	bsf	194,0,c	;volatile
  4007   002A9A                     l5842:
  4008                           
  4009                           ;MCAL_layer/ADC/hal_adc.c: 79:     return ret;
  4010   002A9A  5008               	movf	ADC_initialize@ret^0,w,c
  4011   002A9C  0012               	return		;funcret
  4012   002A9E                     __end_of_ADC_initialize:
  4013                           	callstack 0
  4014                           
  4015 ;; *************** function _select_result_format *****************
  4016 ;; Defined at:
  4017 ;;		line 317 in file "MCAL_layer/ADC/hal_adc.c"
  4018 ;; Parameters:    Size  Location     Type
  4019 ;;  ADC_obj         2    1[COMRAM] PTR const struct .
  4020 ;;		 -> ADC1(4), 
  4021 ;; Auto vars:     Size  Location     Type
  4022 ;;		None
  4023 ;; Return value:  Size  Location     Type
  4024 ;;                  1    wreg      void 
  4025 ;; Registers used:
  4026 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4027 ;; Tracked objects:
  4028 ;;		On entry : 0/0
  4029 ;;		On exit  : 0/0
  4030 ;;		Unchanged: 0/0
  4031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4032 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4035 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4036 ;;Total ram usage:        2 bytes
  4037 ;; Hardware stack levels used: 1
  4038 ;; Hardware stack levels required when called: 2
  4039 ;; This function calls:
  4040 ;;		Nothing
  4041 ;; This function is called by:
  4042 ;;		_ADC_initialize
  4043 ;; This function uses a non-reentrant model
  4044 ;;
  4045                           
  4046                           	psect	text23
  4047   003022                     __ptext23:
  4048                           	callstack 0
  4049   003022                     _select_result_format:
  4050                           	callstack 25
  4051   003022                     
  4052                           ;MCAL_layer/ADC/hal_adc.c: 319:     if(0x01U==ADC_obj->Result_Format){
  4053   003022  EE20 F003          	lfsr	2,3
  4054   003026  5002               	movf	select_result_format@ADC_obj^0,w,c
  4055   003028  26D9               	addwf	fsr2l,f,c
  4056   00302A  5003               	movf	(select_result_format@ADC_obj+1)^0,w,c
  4057   00302C  22DA               	addwfc	fsr2h,f,c
  4058   00302E  A2DF               	btfss	indf2,1,c
  4059   003030  EF1C  F018         	goto	u4561
  4060   003034  EF1E  F018         	goto	u4560
  4061   003038                     u4561:
  4062   003038  EF21  F018         	goto	l5718
  4063   00303C                     u4560:
  4064   00303C                     
  4065                           ;MCAL_layer/ADC/hal_adc.c: 321:         (ADCON2bits.ADFM = 1);
  4066   00303C  8EC0               	bsf	192,7,c	;volatile
  4067                           
  4068                           ;MCAL_layer/ADC/hal_adc.c: 322:     }
  4069   00303E  EF32  F018         	goto	l434
  4070   003042                     l5718:
  4071   003042  EE20 F003          	lfsr	2,3
  4072   003046  5002               	movf	select_result_format@ADC_obj^0,w,c
  4073   003048  26D9               	addwf	fsr2l,f,c
  4074   00304A  5003               	movf	(select_result_format@ADC_obj+1)^0,w,c
  4075   00304C  22DA               	addwfc	fsr2h,f,c
  4076   00304E  B2DF               	btfsc	indf2,1,c
  4077   003050  EF2C  F018         	goto	u4571
  4078   003054  EF2E  F018         	goto	u4570
  4079   003058                     u4571:
  4080   003058  EF31  F018         	goto	l432
  4081   00305C                     u4570:
  4082   00305C                     
  4083                           ;MCAL_layer/ADC/hal_adc.c: 325:         (ADCON2bits.ADFM = 0);
  4084   00305C  9EC0               	bcf	192,7,c	;volatile
  4085                           
  4086                           ;MCAL_layer/ADC/hal_adc.c: 326:     }
  4087   00305E  EF32  F018         	goto	l434
  4088   003062                     l432:
  4089                           
  4090                           ;MCAL_layer/ADC/hal_adc.c: 329:         (ADCON2bits.ADFM = 1);
  4091   003062  8EC0               	bsf	192,7,c	;volatile
  4092   003064                     l434:
  4093   003064  0012               	return		;funcret
  4094   003066                     __end_of_select_result_format:
  4095                           	callstack 0
  4096                           
  4097 ;; *************** function _configure_voltage_reference *****************
  4098 ;; Defined at:
  4099 ;;		line 340 in file "MCAL_layer/ADC/hal_adc.c"
  4100 ;; Parameters:    Size  Location     Type
  4101 ;;  ADC_obj         2    1[COMRAM] PTR const struct .
  4102 ;;		 -> ADC1(4), 
  4103 ;; Auto vars:     Size  Location     Type
  4104 ;;		None
  4105 ;; Return value:  Size  Location     Type
  4106 ;;                  1    wreg      void 
  4107 ;; Registers used:
  4108 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4109 ;; Tracked objects:
  4110 ;;		On entry : 0/0
  4111 ;;		On exit  : 0/0
  4112 ;;		Unchanged: 0/0
  4113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4114 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4117 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4118 ;;Total ram usage:        2 bytes
  4119 ;; Hardware stack levels used: 1
  4120 ;; Hardware stack levels required when called: 2
  4121 ;; This function calls:
  4122 ;;		Nothing
  4123 ;; This function is called by:
  4124 ;;		_ADC_initialize
  4125 ;; This function uses a non-reentrant model
  4126 ;;
  4127                           
  4128                           	psect	text24
  4129   002F4C                     __ptext24:
  4130                           	callstack 0
  4131   002F4C                     _configure_voltage_reference:
  4132                           	callstack 25
  4133   002F4C                     
  4134                           ;MCAL_layer/ADC/hal_adc.c: 342:     if(0x01U==ADC_obj->Voltage_Reference){
  4135   002F4C  EE20 F003          	lfsr	2,3
  4136   002F50  5002               	movf	configure_voltage_reference@ADC_obj^0,w,c
  4137   002F52  26D9               	addwf	fsr2l,f,c
  4138   002F54  5003               	movf	(configure_voltage_reference@ADC_obj+1)^0,w,c
  4139   002F56  22DA               	addwfc	fsr2h,f,c
  4140   002F58  A0DF               	btfss	indf2,0,c
  4141   002F5A  EFB1  F017         	goto	u4581
  4142   002F5E  EFB3  F017         	goto	u4580
  4143   002F62                     u4581:
  4144   002F62  EFB7  F017         	goto	l5724
  4145   002F66                     u4580:
  4146   002F66  8AC1               	bsf	193,5,c	;volatile
  4147   002F68  88C1               	bsf	193,4,c	;volatile
  4148   002F6A  EFCA  F017         	goto	l447
  4149   002F6E                     l5724:
  4150   002F6E  EE20 F003          	lfsr	2,3
  4151   002F72  5002               	movf	configure_voltage_reference@ADC_obj^0,w,c
  4152   002F74  26D9               	addwf	fsr2l,f,c
  4153   002F76  5003               	movf	(configure_voltage_reference@ADC_obj+1)^0,w,c
  4154   002F78  22DA               	addwfc	fsr2h,f,c
  4155   002F7A  B0DF               	btfsc	indf2,0,c
  4156   002F7C  EFC2  F017         	goto	u4591
  4157   002F80  EFC4  F017         	goto	u4590
  4158   002F84                     u4591:
  4159   002F84  EFC8  F017         	goto	l445
  4160   002F88                     u4590:
  4161   002F88  9AC1               	bcf	193,5,c	;volatile
  4162   002F8A  98C1               	bcf	193,4,c	;volatile
  4163   002F8C  EFCA  F017         	goto	l447
  4164   002F90                     l445:
  4165   002F90  9AC1               	bcf	193,5,c	;volatile
  4166   002F92  98C1               	bcf	193,4,c	;volatile
  4167   002F94                     l447:
  4168   002F94  0012               	return		;funcret
  4169   002F96                     __end_of_configure_voltage_reference:
  4170                           	callstack 0
  4171                           
  4172 ;; *************** function _ecu_layer_intialize *****************
  4173 ;; Defined at:
  4174 ;;		line 63 in file "ECU_layer/ecu_layer_init.c"
  4175 ;; Parameters:    Size  Location     Type
  4176 ;;		None
  4177 ;; Auto vars:     Size  Location     Type
  4178 ;;  ret             1    0        unsigned char 
  4179 ;; Return value:  Size  Location     Type
  4180 ;;                  1    wreg      void 
  4181 ;; Registers used:
  4182 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4183 ;; Tracked objects:
  4184 ;;		On entry : 0/0
  4185 ;;		On exit  : 0/0
  4186 ;;		Unchanged: 0/0
  4187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4192 ;;Total ram usage:        0 bytes
  4193 ;; Hardware stack levels used: 1
  4194 ;; Hardware stack levels required when called: 6
  4195 ;; This function calls:
  4196 ;;		_dc_motor_initialize
  4197 ;;		_lcd_4bit_initialize
  4198 ;; This function is called by:
  4199 ;;		_application_intialize
  4200 ;; This function uses a non-reentrant model
  4201 ;;
  4202                           
  4203                           	psect	text25
  4204   003200                     __ptext25:
  4205                           	callstack 0
  4206   003200                     _ecu_layer_intialize:
  4207                           	callstack 23
  4208   003200  0EE7               	movlw	low _LCD1
  4209   003202  6E14               	movwf	lcd_4bit_initialize@lcd^0,c
  4210   003204  0E00               	movlw	high _LCD1
  4211   003206  6E15               	movwf	(lcd_4bit_initialize@lcd+1)^0,c
  4212   003208  EC12  F010         	call	_lcd_4bit_initialize	;wreg free
  4213   00320C  0EF3               	movlw	low _dc_motor_01
  4214   00320E  6E10               	movwf	dc_motor_initialize@_dc_motor^0,c
  4215   003210  0E00               	movlw	high _dc_motor_01
  4216   003212  6E11               	movwf	(dc_motor_initialize@_dc_motor+1)^0,c
  4217   003214  EC93  F018         	call	_dc_motor_initialize	;wreg free
  4218   003218  0EF1               	movlw	low _dc_motor_02
  4219   00321A  6E10               	movwf	dc_motor_initialize@_dc_motor^0,c
  4220   00321C  0E00               	movlw	high _dc_motor_02
  4221   00321E  6E11               	movwf	(dc_motor_initialize@_dc_motor+1)^0,c
  4222   003220  EC93  F018         	call	_dc_motor_initialize	;wreg free
  4223   003224  0012               	return		;funcret
  4224   003226                     __end_of_ecu_layer_intialize:
  4225                           	callstack 0
  4226                           
  4227 ;; *************** function _lcd_4bit_initialize *****************
  4228 ;; Defined at:
  4229 ;;		line 23 in file "ECU_layer/Character_LCD/ecu_chr_lcd.c"
  4230 ;; Parameters:    Size  Location     Type
  4231 ;;  lcd             2   19[COMRAM] PTR const struct .
  4232 ;;		 -> LCD1(6), 
  4233 ;; Auto vars:     Size  Location     Type
  4234 ;;  ret             1   24[COMRAM] unsigned char 
  4235 ;;  count           1   23[COMRAM] unsigned char 
  4236 ;; Return value:  Size  Location     Type
  4237 ;;                  1    wreg      unsigned char 
  4238 ;; Registers used:
  4239 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4240 ;; Tracked objects:
  4241 ;;		On entry : 0/0
  4242 ;;		On exit  : 0/0
  4243 ;;		Unchanged: 0/0
  4244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4245 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4246 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4247 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4248 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4249 ;;Total ram usage:        6 bytes
  4250 ;; Hardware stack levels used: 1
  4251 ;; Hardware stack levels required when called: 5
  4252 ;; This function calls:
  4253 ;;		_gpio_pin_intialize
  4254 ;;		_lcd_4bit_send_command
  4255 ;; This function is called by:
  4256 ;;		_ecu_layer_intialize
  4257 ;; This function uses a non-reentrant model
  4258 ;;
  4259                           
  4260                           	psect	text26
  4261   002024                     __ptext26:
  4262                           	callstack 0
  4263   002024                     _lcd_4bit_initialize:
  4264                           	callstack 23
  4265   002024                     
  4266                           ;ECU_layer/Character_LCD/ecu_chr_lcd.c: 25:     uint8_t count = 0x00;
  4267   002024  0E00               	movlw	0
  4268   002026  6E18               	movwf	lcd_4bit_initialize@count^0,c
  4269   002028                     
  4270                           ;ECU_layer/Character_LCD/ecu_chr_lcd.c: 26:     if(((void*)0) == lcd)
  4271   002028  5014               	movf	lcd_4bit_initialize@lcd^0,w,c
  4272   00202A  1015               	iorwf	(lcd_4bit_initialize@lcd+1)^0,w,c
  4273   00202C  A4D8               	btfss	status,2,c
  4274   00202E  EF1B  F010         	goto	u4631
  4275   002032  EF1D  F010         	goto	u4630
  4276   002036                     u4631:
  4277   002036  EF21  F010         	goto	l5762
  4278   00203A                     u4630:
  4279   00203A                     
  4280                           ;ECU_layer/Character_LCD/ecu_chr_lcd.c: 27:     {;ECU_layer/Character_LCD/ecu_chr_lcd.c:
      +                           28:         ret = (Std_ReturnType)0x00;
  4281   00203A  0E00               	movlw	0
  4282   00203C  6E19               	movwf	lcd_4bit_initialize@ret^0,c
  4283                           
  4284                           ;ECU_layer/Character_LCD/ecu_chr_lcd.c: 29:     }else
  4285   00203E  EFAD  F010         	goto	l5798
  4286   002042                     l5762:
  4287                           
  4288                           ;ECU_layer/Character_LCD/ecu_chr_lcd.c: 30:     {;ECU_layer/Character_LCD/ecu_chr_lcd.c:
      +                           31:         ret = gpio_pin_intialize(&(lcd->lcd_rs_pin));
  4289   002042  C014  F00C         	movff	lcd_4bit_initialize@lcd,gpio_pin_intialize@_pin_config
  4290   002046  C015  F00D         	movff	lcd_4bit_initialize@lcd+1,gpio_pin_intialize@_pin_config+1
  4291   00204A  ECEE  F016         	call	_gpio_pin_intialize	;wreg free
  4292   00204E  6E19               	movwf	lcd_4bit_initialize@ret^0,c
  4293                           
  4294                           ;ECU_layer/Character_LCD/ecu_chr_lcd.c: 32:         ret = gpio_pin_intialize(&(lcd->lcd_
      +                          enable_pin));
  4295   002050  0E01               	movlw	1
  4296   002052  2414               	addwf	lcd_4bit_initialize@lcd^0,w,c
  4297   002054  6E0C               	movwf	gpio_pin_intialize@_pin_config^0,c
  4298   002056  0E00               	movlw	0
  4299   002058  2015               	addwfc	(lcd_4bit_initialize@lcd+1)^0,w,c
  4300   00205A  6E0D               	movwf	(gpio_pin_intialize@_pin_config+1)^0,c
  4301   00205C  ECEE  F016         	call	_gpio_pin_intialize	;wreg free
  4302   002060  6E19               	movwf	lcd_4bit_initialize@ret^0,c
  4303   002062                     
  4304                           ;ECU_layer/Character_LCD/ecu_chr_lcd.c: 33:         for(count=0x00;count<4;count++)
  4305   002062  0E00               	movlw	0
  4306   002064  6E18               	movwf	lcd_4bit_initialize@count^0,c
  4307   002066                     l5770:
  4308   002066  5018               	movf	lcd_4bit_initialize@count^0,w,c
  4309   002068  2414               	addwf	lcd_4bit_initialize@lcd^0,w,c
  4310   00206A  6E16               	movwf	??_lcd_4bit_initialize^0,c
  4311   00206C  0E00               	movlw	0
  4312   00206E  2015               	addwfc	(lcd_4bit_initialize@lcd+1)^0,w,c
  4313   002070  6E17               	movwf	(??_lcd_4bit_initialize+1)^0,c
  4314   002072  0E02               	movlw	2
  4315   002074  2416               	addwf	??_lcd_4bit_initialize^0,w,c
  4316   002076  6E0C               	movwf	gpio_pin_intialize@_pin_config^0,c
  4317   002078  0E00               	movlw	0
  4318   00207A  2017               	addwfc	(??_lcd_4bit_initialize+1)^0,w,c
  4319   00207C  6E0D               	movwf	(gpio_pin_intialize@_pin_config+1)^0,c
  4320   00207E  ECEE  F016         	call	_gpio_pin_intialize	;wreg free
  4321   002082                     
  4322                           ;ECU_layer/Character_LCD/ecu_chr_lcd.c: 36:         }
  4323   002082  2A18               	incf	lcd_4bit_initialize@count^0,f,c
  4324   002084  0E03               	movlw	3
  4325   002086  6418               	cpfsgt	lcd_4bit_initialize@count^0,c
  4326   002088  EF48  F010         	goto	u4641
  4327   00208C  EF4A  F010         	goto	u4640
  4328   002090                     u4641:
  4329   002090  EF33  F010         	goto	l5770
  4330   002094                     u4640:
  4331   002094                     
  4332                           ;ECU_layer/Character_LCD/ecu_chr_lcd.c: 37:         _delay((unsigned long)((20)*(8000000
      +                          UL/4000.0)));
  4333   002094  0E34               	movlw	52
  4334   002096  6E16               	movwf	??_lcd_4bit_initialize^0,c
  4335   002098  0EF2               	movlw	242
  4336   00209A                     u7197:
  4337   00209A  2EE8               	decfsz	wreg,f,c
  4338   00209C  D7FE               	bra	u7197
  4339   00209E  2E16               	decfsz	??_lcd_4bit_initialize^0,f,c
  4340   0020A0  D7FC               	bra	u7197
  4341   0020A2  C014  F010         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  4342   0020A6  C015  F011         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  4343   0020AA  0E38               	movlw	56
  4344   0020AC  6E12               	movwf	lcd_4bit_send_command@command^0,c
  4345   0020AE  EC7E  F016         	call	_lcd_4bit_send_command	;wreg free
  4346   0020B2                     
  4347                           ;ECU_layer/Character_LCD/ecu_chr_lcd.c: 39:         _delay((unsigned long)((5)*(8000000U
      +                          L/4000.0)));
  4348   0020B2  0E0D               	movlw	13
  4349   0020B4  6E16               	movwf	??_lcd_4bit_initialize^0,c
  4350   0020B6  0EFC               	movlw	252
  4351   0020B8                     u7207:
  4352   0020B8  2EE8               	decfsz	wreg,f,c
  4353   0020BA  D7FE               	bra	u7207
  4354   0020BC  2E16               	decfsz	??_lcd_4bit_initialize^0,f,c
  4355   0020BE  D7FC               	bra	u7207
  4356   0020C0  C014  F010         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  4357   0020C4  C015  F011         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  4358   0020C8  0E38               	movlw	56
  4359   0020CA  6E12               	movwf	lcd_4bit_send_command@command^0,c
  4360   0020CC  EC7E  F016         	call	_lcd_4bit_send_command	;wreg free
  4361   0020D0                     
  4362                           ;ECU_layer/Character_LCD/ecu_chr_lcd.c: 41:         _delay((unsigned long)((150)*(800000
      +                          0UL/4000.0)));
  4363   0020D0  0E02               	movlw	2
  4364   0020D2  6E17               	movwf	(??_lcd_4bit_initialize+1)^0,c
  4365   0020D4  0E86               	movlw	134
  4366   0020D6  6E16               	movwf	??_lcd_4bit_initialize^0,c
  4367   0020D8  0E99               	movlw	153
  4368   0020DA                     u7217:
  4369   0020DA  2EE8               	decfsz	wreg,f,c
  4370   0020DC  D7FE               	bra	u7217
  4371   0020DE  2E16               	decfsz	??_lcd_4bit_initialize^0,f,c
  4372   0020E0  D7FC               	bra	u7217
  4373   0020E2  2E17               	decfsz	(??_lcd_4bit_initialize+1)^0,f,c
  4374   0020E4  D7FA               	bra	u7217
  4375   0020E6  F000               	nop	
  4376   0020E8  C014  F010         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  4377   0020EC  C015  F011         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  4378   0020F0  0E38               	movlw	56
  4379   0020F2  6E12               	movwf	lcd_4bit_send_command@command^0,c
  4380   0020F4  EC7E  F016         	call	_lcd_4bit_send_command	;wreg free
  4381   0020F8  C014  F010         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  4382   0020FC  C015  F011         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  4383   002100  0E01               	movlw	1
  4384   002102  6E12               	movwf	lcd_4bit_send_command@command^0,c
  4385   002104  EC7E  F016         	call	_lcd_4bit_send_command	;wreg free
  4386   002108  C014  F010         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  4387   00210C  C015  F011         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  4388   002110  0E02               	movlw	2
  4389   002112  6E12               	movwf	lcd_4bit_send_command@command^0,c
  4390   002114  EC7E  F016         	call	_lcd_4bit_send_command	;wreg free
  4391   002118  C014  F010         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  4392   00211C  C015  F011         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  4393   002120  0E06               	movlw	6
  4394   002122  6E12               	movwf	lcd_4bit_send_command@command^0,c
  4395   002124  EC7E  F016         	call	_lcd_4bit_send_command	;wreg free
  4396   002128  C014  F010         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  4397   00212C  C015  F011         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  4398   002130  0E0C               	movlw	12
  4399   002132  6E12               	movwf	lcd_4bit_send_command@command^0,c
  4400   002134  EC7E  F016         	call	_lcd_4bit_send_command	;wreg free
  4401   002138  C014  F010         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  4402   00213C  C015  F011         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  4403   002140  0E28               	movlw	40
  4404   002142  6E12               	movwf	lcd_4bit_send_command@command^0,c
  4405   002144  EC7E  F016         	call	_lcd_4bit_send_command	;wreg free
  4406   002148                     
  4407                           ;ECU_layer/Character_LCD/ecu_chr_lcd.c: 49:         ret = lcd_4bit_send_command(lcd, 0x8
      +                          0);
  4408   002148  C014  F010         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  4409   00214C  C015  F011         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  4410   002150  0E80               	movlw	128
  4411   002152  6E12               	movwf	lcd_4bit_send_command@command^0,c
  4412   002154  EC7E  F016         	call	_lcd_4bit_send_command	;wreg free
  4413   002158  6E19               	movwf	lcd_4bit_initialize@ret^0,c
  4414   00215A                     l5798:
  4415                           
  4416                           ;ECU_layer/Character_LCD/ecu_chr_lcd.c: 51:     return ret;
  4417   00215A  5019               	movf	lcd_4bit_initialize@ret^0,w,c
  4418   00215C  0012               	return		;funcret
  4419   00215E                     __end_of_lcd_4bit_initialize:
  4420                           	callstack 0
  4421                           
  4422 ;; *************** function _lcd_4bit_send_command *****************
  4423 ;; Defined at:
  4424 ;;		line 61 in file "ECU_layer/Character_LCD/ecu_chr_lcd.c"
  4425 ;; Parameters:    Size  Location     Type
  4426 ;;  lcd             2   15[COMRAM] PTR const struct .
  4427 ;;		 -> LCD1(6), 
  4428 ;;  command         1   17[COMRAM] unsigned char 
  4429 ;; Auto vars:     Size  Location     Type
  4430 ;;  ret             1   18[COMRAM] unsigned char 
  4431 ;; Return value:  Size  Location     Type
  4432 ;;                  1    wreg      unsigned char 
  4433 ;; Registers used:
  4434 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4435 ;; Tracked objects:
  4436 ;;		On entry : 0/0
  4437 ;;		On exit  : 0/0
  4438 ;;		Unchanged: 0/0
  4439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4440 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4441 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4443 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4444 ;;Total ram usage:        4 bytes
  4445 ;; Hardware stack levels used: 1
  4446 ;; Hardware stack levels required when called: 4
  4447 ;; This function calls:
  4448 ;;		_gpio_pin_write_logic
  4449 ;;		_lcd_4bit_send_enable_signal
  4450 ;;		_lcd_send_4bit
  4451 ;; This function is called by:
  4452 ;;		_lcd_4bit_initialize
  4453 ;;		_lcd_4bit_set_cursor
  4454 ;;		_main
  4455 ;;		_lcd_4bit_send_custom_char
  4456 ;; This function uses a non-reentrant model
  4457 ;;
  4458                           
  4459                           	psect	text27
  4460   002CFC                     __ptext27:
  4461                           	callstack 0
  4462   002CFC                     _lcd_4bit_send_command:
  4463                           	callstack 24
  4464   002CFC                     
  4465                           ;ECU_layer/Character_LCD/ecu_chr_lcd.c: 63:     if(((void*)0) == lcd)
  4466   002CFC  5010               	movf	lcd_4bit_send_command@lcd^0,w,c
  4467   002CFE  1011               	iorwf	(lcd_4bit_send_command@lcd+1)^0,w,c
  4468   002D00  A4D8               	btfss	status,2,c
  4469   002D02  EF85  F016         	goto	u4551
  4470   002D06  EF87  F016         	goto	u4550
  4471   002D0A                     u4551:
  4472   002D0A  EF8B  F016         	goto	l5672
  4473   002D0E                     u4550:
  4474   002D0E                     
  4475                           ;ECU_layer/Character_LCD/ecu_chr_lcd.c: 64:     {;ECU_layer/Character_LCD/ecu_chr_lcd.c:
      +                           65:         ret = (Std_ReturnType)0x00;
  4476   002D0E  0E00               	movlw	0
  4477   002D10  6E13               	movwf	lcd_4bit_send_command@ret^0,c
  4478                           
  4479                           ;ECU_layer/Character_LCD/ecu_chr_lcd.c: 66:     }else
  4480   002D12  EFB5  F016         	goto	l5674
  4481   002D16                     l5672:
  4482                           
  4483                           ;ECU_layer/Character_LCD/ecu_chr_lcd.c: 67:     {;ECU_layer/Character_LCD/ecu_chr_lcd.c:
      +                           70:         ret = gpio_pin_write_logic(&(lcd->lcd_rs_pin), GPIO_LOW);
  4484   002D16  C010  F002         	movff	lcd_4bit_send_command@lcd,gpio_pin_write_logic@_pin_config
  4485   002D1A  C011  F003         	movff	lcd_4bit_send_command@lcd+1,gpio_pin_write_logic@_pin_config+1
  4486   002D1E  0E00               	movlw	0
  4487   002D20  6E04               	movwf	gpio_pin_write_logic@logic^0,c
  4488   002D22  EC45  F011         	call	_gpio_pin_write_logic	;wreg free
  4489   002D26  6E13               	movwf	lcd_4bit_send_command@ret^0,c
  4490                           
  4491                           ;ECU_layer/Character_LCD/ecu_chr_lcd.c: 73:         ret = lcd_send_4bit(lcd, command >> 
      +                          4);
  4492   002D28  C010  F00C         	movff	lcd_4bit_send_command@lcd,lcd_send_4bit@lcd
  4493   002D2C  C011  F00D         	movff	lcd_4bit_send_command@lcd+1,lcd_send_4bit@lcd+1
  4494   002D30  3812               	swapf	lcd_4bit_send_command@command^0,w,c
  4495   002D32  0B0F               	andlw	15
  4496   002D34  6E0E               	movwf	lcd_send_4bit@command^0,c
  4497   002D36  EC24  F017         	call	_lcd_send_4bit	;wreg free
  4498   002D3A  6E13               	movwf	lcd_4bit_send_command@ret^0,c
  4499                           
  4500                           ;ECU_layer/Character_LCD/ecu_chr_lcd.c: 75:         ret = lcd_4bit_send_enable_signal(lc
      +                          d);
  4501   002D3C  C010  F00C         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
  4502   002D40  C011  F00D         	movff	lcd_4bit_send_command@lcd+1,lcd_4bit_send_enable_signal@lcd+1
  4503   002D44  ECCF  F018         	call	_lcd_4bit_send_enable_signal	;wreg free
  4504   002D48  6E13               	movwf	lcd_4bit_send_command@ret^0,c
  4505                           
  4506                           ;ECU_layer/Character_LCD/ecu_chr_lcd.c: 78:         ret = lcd_send_4bit(lcd, command);
  4507   002D4A  C010  F00C         	movff	lcd_4bit_send_command@lcd,lcd_send_4bit@lcd
  4508   002D4E  C011  F00D         	movff	lcd_4bit_send_command@lcd+1,lcd_send_4bit@lcd+1
  4509   002D52  C012  F00E         	movff	lcd_4bit_send_command@command,lcd_send_4bit@command
  4510   002D56  EC24  F017         	call	_lcd_send_4bit	;wreg free
  4511   002D5A  6E13               	movwf	lcd_4bit_send_command@ret^0,c
  4512                           
  4513                           ;ECU_layer/Character_LCD/ecu_chr_lcd.c: 80:         ret = lcd_4bit_send_enable_signal(lc
      +                          d);
  4514   002D5C  C010  F00C         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
  4515   002D60  C011  F00D         	movff	lcd_4bit_send_command@lcd+1,lcd_4bit_send_enable_signal@lcd+1
  4516   002D64  ECCF  F018         	call	_lcd_4bit_send_enable_signal	;wreg free
  4517   002D68  6E13               	movwf	lcd_4bit_send_command@ret^0,c
  4518   002D6A                     l5674:
  4519                           
  4520                           ;ECU_layer/Character_LCD/ecu_chr_lcd.c: 82:     return ret;
  4521   002D6A  5013               	movf	lcd_4bit_send_command@ret^0,w,c
  4522   002D6C  0012               	return		;funcret
  4523   002D6E                     __end_of_lcd_4bit_send_command:
  4524                           	callstack 0
  4525                           
  4526 ;; *************** function _lcd_send_4bit *****************
  4527 ;; Defined at:
  4528 ;;		line 487 in file "ECU_layer/Character_LCD/ecu_chr_lcd.c"
  4529 ;; Parameters:    Size  Location     Type
  4530 ;;  lcd             2   11[COMRAM] PTR const struct .
  4531 ;;		 -> LCD1(6), 
  4532 ;;  command         1   13[COMRAM] unsigned char 
  4533 ;; Auto vars:     Size  Location     Type
  4534 ;;  ret             1   14[COMRAM] unsigned char 
  4535 ;; Return value:  Size  Location     Type
  4536 ;;                  1    wreg      unsigned char 
  4537 ;; Registers used:
  4538 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4539 ;; Tracked objects:
  4540 ;;		On entry : 0/0
  4541 ;;		On exit  : 0/0
  4542 ;;		Unchanged: 0/0
  4543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4544 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4545 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4547 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4548 ;;Total ram usage:        4 bytes
  4549 ;; Hardware stack levels used: 1
  4550 ;; Hardware stack levels required when called: 3
  4551 ;; This function calls:
  4552 ;;		_gpio_pin_write_logic
  4553 ;; This function is called by:
  4554 ;;		_lcd_4bit_send_command
  4555 ;;		_lcd_4bit_send_char_data
  4556 ;; This function uses a non-reentrant model
  4557 ;;
  4558                           
  4559                           	psect	text28
  4560   002E48                     __ptext28:
  4561                           	callstack 0
  4562   002E48                     _lcd_send_4bit:
  4563                           	callstack 24
  4564   002E48  0E02               	movlw	2
  4565   002E4A  240C               	addwf	lcd_send_4bit@lcd^0,w,c
  4566   002E4C  6E02               	movwf	gpio_pin_write_logic@_pin_config^0,c
  4567   002E4E  0E00               	movlw	0
  4568   002E50  200D               	addwfc	(lcd_send_4bit@lcd+1)^0,w,c
  4569   002E52  6E03               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  4570   002E54  500E               	movf	lcd_send_4bit@command^0,w,c
  4571   002E56  0B01               	andlw	1
  4572   002E58  6E04               	movwf	gpio_pin_write_logic@logic^0,c
  4573   002E5A  EC45  F011         	call	_gpio_pin_write_logic	;wreg free
  4574   002E5E  0E03               	movlw	3
  4575   002E60  240C               	addwf	lcd_send_4bit@lcd^0,w,c
  4576   002E62  6E02               	movwf	gpio_pin_write_logic@_pin_config^0,c
  4577   002E64  0E00               	movlw	0
  4578   002E66  200D               	addwfc	(lcd_send_4bit@lcd+1)^0,w,c
  4579   002E68  6E03               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  4580   002E6A  90D8               	bcf	status,0,c
  4581   002E6C  300E               	rrcf	lcd_send_4bit@command^0,w,c
  4582   002E6E  0B01               	andlw	1
  4583   002E70  6E04               	movwf	gpio_pin_write_logic@logic^0,c
  4584   002E72  EC45  F011         	call	_gpio_pin_write_logic	;wreg free
  4585   002E76  0E04               	movlw	4
  4586   002E78  240C               	addwf	lcd_send_4bit@lcd^0,w,c
  4587   002E7A  6E02               	movwf	gpio_pin_write_logic@_pin_config^0,c
  4588   002E7C  0E00               	movlw	0
  4589   002E7E  200D               	addwfc	(lcd_send_4bit@lcd+1)^0,w,c
  4590   002E80  6E03               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  4591   002E82  400E               	rrncf	lcd_send_4bit@command^0,w,c
  4592   002E84  42E8               	rrncf	wreg,f,c
  4593   002E86  0B3F               	andlw	63
  4594   002E88  0B01               	andlw	1
  4595   002E8A  6E04               	movwf	gpio_pin_write_logic@logic^0,c
  4596   002E8C  EC45  F011         	call	_gpio_pin_write_logic	;wreg free
  4597   002E90                     
  4598                           ;ECU_layer/Character_LCD/ecu_chr_lcd.c: 492:     ret = gpio_pin_write_logic(&(lcd->lcd_d
      +                          ata_pins[3]), (command >> 3) & (uint8_t)0x01);
  4599   002E90  0E05               	movlw	5
  4600   002E92  240C               	addwf	lcd_send_4bit@lcd^0,w,c
  4601   002E94  6E02               	movwf	gpio_pin_write_logic@_pin_config^0,c
  4602   002E96  0E00               	movlw	0
  4603   002E98  200D               	addwfc	(lcd_send_4bit@lcd+1)^0,w,c
  4604   002E9A  6E03               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  4605   002E9C  380E               	swapf	lcd_send_4bit@command^0,w,c
  4606   002E9E  46E8               	rlncf	wreg,f,c
  4607   002EA0  0B1F               	andlw	31
  4608   002EA2  0B01               	andlw	1
  4609   002EA4  6E04               	movwf	gpio_pin_write_logic@logic^0,c
  4610   002EA6  EC45  F011         	call	_gpio_pin_write_logic	;wreg free
  4611   002EAA  6E0F               	movwf	lcd_send_4bit@ret^0,c
  4612                           
  4613                           ;ECU_layer/Character_LCD/ecu_chr_lcd.c: 493:     return ret;
  4614   002EAC  500F               	movf	lcd_send_4bit@ret^0,w,c
  4615   002EAE  0012               	return		;funcret
  4616   002EB0                     __end_of_lcd_send_4bit:
  4617                           	callstack 0
  4618                           
  4619 ;; *************** function _lcd_4bit_send_enable_signal *****************
  4620 ;; Defined at:
  4621 ;;		line 502 in file "ECU_layer/Character_LCD/ecu_chr_lcd.c"
  4622 ;; Parameters:    Size  Location     Type
  4623 ;;  lcd             2   11[COMRAM] PTR const struct .
  4624 ;;		 -> LCD1(6), 
  4625 ;; Auto vars:     Size  Location     Type
  4626 ;;  ret             1   13[COMRAM] unsigned char 
  4627 ;; Return value:  Size  Location     Type
  4628 ;;                  1    wreg      unsigned char 
  4629 ;; Registers used:
  4630 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4631 ;; Tracked objects:
  4632 ;;		On entry : 0/0
  4633 ;;		On exit  : 0/0
  4634 ;;		Unchanged: 0/0
  4635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4636 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4637 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4639 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4640 ;;Total ram usage:        3 bytes
  4641 ;; Hardware stack levels used: 1
  4642 ;; Hardware stack levels required when called: 3
  4643 ;; This function calls:
  4644 ;;		_gpio_pin_write_logic
  4645 ;; This function is called by:
  4646 ;;		_lcd_4bit_send_command
  4647 ;;		_lcd_4bit_send_char_data
  4648 ;; This function uses a non-reentrant model
  4649 ;;
  4650                           
  4651                           	psect	text29
  4652   00319E                     __ptext29:
  4653                           	callstack 0
  4654   00319E                     _lcd_4bit_send_enable_signal:
  4655                           	callstack 24
  4656   00319E  0E01               	movlw	1
  4657   0031A0  240C               	addwf	lcd_4bit_send_enable_signal@lcd^0,w,c
  4658   0031A2  6E02               	movwf	gpio_pin_write_logic@_pin_config^0,c
  4659   0031A4  0E00               	movlw	0
  4660   0031A6  200D               	addwfc	(lcd_4bit_send_enable_signal@lcd+1)^0,w,c
  4661   0031A8  6E03               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  4662   0031AA  0E01               	movlw	1
  4663   0031AC  6E04               	movwf	gpio_pin_write_logic@logic^0,c
  4664   0031AE  EC45  F011         	call	_gpio_pin_write_logic	;wreg free
  4665   0031B2                     
  4666                           ;ECU_layer/Character_LCD/ecu_chr_lcd.c: 505:     _delay((unsigned long)((5)*(8000000UL/4
      +                          000000.0)));
  4667   0031B2  0E03               	movlw	3
  4668   0031B4                     u7227:
  4669   0031B4  2EE8               	decfsz	wreg,f,c
  4670   0031B6  D7FE               	bra	u7227
  4671   0031B8  F000               	nop	
  4672   0031BA                     
  4673                           ;ECU_layer/Character_LCD/ecu_chr_lcd.c: 506:     ret = gpio_pin_write_logic(&(lcd->lcd_e
      +                          nable_pin), GPIO_LOW);
  4674   0031BA  0E01               	movlw	1
  4675   0031BC  240C               	addwf	lcd_4bit_send_enable_signal@lcd^0,w,c
  4676   0031BE  6E02               	movwf	gpio_pin_write_logic@_pin_config^0,c
  4677   0031C0  0E00               	movlw	0
  4678   0031C2  200D               	addwfc	(lcd_4bit_send_enable_signal@lcd+1)^0,w,c
  4679   0031C4  6E03               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  4680   0031C6  0E00               	movlw	0
  4681   0031C8  6E04               	movwf	gpio_pin_write_logic@logic^0,c
  4682   0031CA  EC45  F011         	call	_gpio_pin_write_logic	;wreg free
  4683   0031CE  6E0E               	movwf	lcd_4bit_send_enable_signal@ret^0,c
  4684   0031D0                     
  4685                           ;ECU_layer/Character_LCD/ecu_chr_lcd.c: 507:     return ret;
  4686   0031D0  500E               	movf	lcd_4bit_send_enable_signal@ret^0,w,c
  4687   0031D2  0012               	return		;funcret
  4688   0031D4                     __end_of_lcd_4bit_send_enable_signal:
  4689                           	callstack 0
  4690                           
  4691 ;; *************** function _dc_motor_initialize *****************
  4692 ;; Defined at:
  4693 ;;		line 17 in file "ECU_layer/DC_Motor/ecu_dc_motor.c"
  4694 ;; Parameters:    Size  Location     Type
  4695 ;;  _dc_motor       2   15[COMRAM] PTR const struct .
  4696 ;;		 -> dc_motor_02(2), dc_motor_01(2), 
  4697 ;; Auto vars:     Size  Location     Type
  4698 ;;  ret             1   17[COMRAM] unsigned char 
  4699 ;; Return value:  Size  Location     Type
  4700 ;;                  1    wreg      unsigned char 
  4701 ;; Registers used:
  4702 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4703 ;; Tracked objects:
  4704 ;;		On entry : 0/0
  4705 ;;		On exit  : 0/0
  4706 ;;		Unchanged: 0/0
  4707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4708 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4709 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4711 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4712 ;;Total ram usage:        3 bytes
  4713 ;; Hardware stack levels used: 1
  4714 ;; Hardware stack levels required when called: 4
  4715 ;; This function calls:
  4716 ;;		_gpio_pin_intialize
  4717 ;; This function is called by:
  4718 ;;		_ecu_layer_intialize
  4719 ;; This function uses a non-reentrant model
  4720 ;;
  4721                           
  4722                           	psect	text30
  4723   003126                     __ptext30:
  4724                           	callstack 0
  4725   003126                     _dc_motor_initialize:
  4726                           	callstack 24
  4727   003126                     
  4728                           ;ECU_layer/DC_Motor/ecu_dc_motor.c: 19:     if(((void*)0) == _dc_motor)
  4729   003126  5010               	movf	dc_motor_initialize@_dc_motor^0,w,c
  4730   003128  1011               	iorwf	(dc_motor_initialize@_dc_motor+1)^0,w,c
  4731   00312A  A4D8               	btfss	status,2,c
  4732   00312C  EF9A  F018         	goto	u4661
  4733   003130  EF9C  F018         	goto	u4660
  4734   003134                     u4661:
  4735   003134  EFA0  F018         	goto	l5820
  4736   003138                     u4660:
  4737   003138                     
  4738                           ;ECU_layer/DC_Motor/ecu_dc_motor.c: 20:     {;ECU_layer/DC_Motor/ecu_dc_motor.c: 21:    
      +                               ret = (Std_ReturnType)0x00;
  4739   003138  0E00               	movlw	0
  4740   00313A  6E12               	movwf	dc_motor_initialize@ret^0,c
  4741                           
  4742                           ;ECU_layer/DC_Motor/ecu_dc_motor.c: 22:     }else
  4743   00313C  EFB0  F018         	goto	l5822
  4744   003140                     l5820:
  4745                           
  4746                           ;ECU_layer/DC_Motor/ecu_dc_motor.c: 23:     {;ECU_layer/DC_Motor/ecu_dc_motor.c: 24:    
      +                               ret = gpio_pin_intialize(&(_dc_motor->dc_motor_pin[0x00U]));
  4747   003140  C010  F00C         	movff	dc_motor_initialize@_dc_motor,gpio_pin_intialize@_pin_config
  4748   003144  C011  F00D         	movff	dc_motor_initialize@_dc_motor+1,gpio_pin_intialize@_pin_config+1
  4749   003148  ECEE  F016         	call	_gpio_pin_intialize	;wreg free
  4750   00314C  6E12               	movwf	dc_motor_initialize@ret^0,c
  4751                           
  4752                           ;ECU_layer/DC_Motor/ecu_dc_motor.c: 25:         ret = gpio_pin_intialize(&(_dc_motor->dc
      +                          _motor_pin[0x01U]));
  4753   00314E  0E01               	movlw	1
  4754   003150  2410               	addwf	dc_motor_initialize@_dc_motor^0,w,c
  4755   003152  6E0C               	movwf	gpio_pin_intialize@_pin_config^0,c
  4756   003154  0E00               	movlw	0
  4757   003156  2011               	addwfc	(dc_motor_initialize@_dc_motor+1)^0,w,c
  4758   003158  6E0D               	movwf	(gpio_pin_intialize@_pin_config+1)^0,c
  4759   00315A  ECEE  F016         	call	_gpio_pin_intialize	;wreg free
  4760   00315E  6E12               	movwf	dc_motor_initialize@ret^0,c
  4761   003160                     l5822:
  4762                           
  4763                           ;ECU_layer/DC_Motor/ecu_dc_motor.c: 27:     return ret;
  4764   003160  5012               	movf	dc_motor_initialize@ret^0,w,c
  4765   003162  0012               	return		;funcret
  4766   003164                     __end_of_dc_motor_initialize:
  4767                           	callstack 0
  4768                           
  4769 ;; *************** function _gpio_pin_intialize *****************
  4770 ;; Defined at:
  4771 ;;		line 144 in file "MCAL_layer/GPIO/hal_gpio.c"
  4772 ;; Parameters:    Size  Location     Type
  4773 ;;  _pin_config     2   11[COMRAM] PTR const struct .
  4774 ;;		 -> dc_motor_02.dc_motor_pin(2), dc_motor_02(2), dc_motor_01.dc_motor_pin(2), dc_motor_01(2), 
  4775 ;;		 -> LCD1.lcd_data_pins(4), LCD1(6), relay_initialize@relay_obj(1), led_initialize@pin_obj(1), 
  4776 ;; Auto vars:     Size  Location     Type
  4777 ;;  ret             1   14[COMRAM] unsigned char 
  4778 ;; Return value:  Size  Location     Type
  4779 ;;                  1    wreg      unsigned char 
  4780 ;; Registers used:
  4781 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4782 ;; Tracked objects:
  4783 ;;		On entry : 0/0
  4784 ;;		On exit  : 0/0
  4785 ;;		Unchanged: 0/0
  4786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4787 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4788 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4789 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4790 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4791 ;;Total ram usage:        4 bytes
  4792 ;; Hardware stack levels used: 1
  4793 ;; Hardware stack levels required when called: 3
  4794 ;; This function calls:
  4795 ;;		_gpio_pin_direction_intialize
  4796 ;;		_gpio_pin_write_logic
  4797 ;; This function is called by:
  4798 ;;		_lcd_4bit_initialize
  4799 ;;		_dc_motor_initialize
  4800 ;;		_seven_seg_initialize
  4801 ;;		_lcd_8bit_initialize
  4802 ;;		_keypad_initialize
  4803 ;;		_led_initialize
  4804 ;;		_relay_initialize
  4805 ;;		_CCP_Initialize
  4806 ;; This function uses a non-reentrant model
  4807 ;;
  4808                           
  4809                           	psect	text31
  4810   002DDC                     __ptext31:
  4811                           	callstack 0
  4812   002DDC                     _gpio_pin_intialize:
  4813                           	callstack 24
  4814   002DDC                     
  4815                           ;MCAL_layer/GPIO/hal_gpio.c: 146:     if((((void*)0) == _pin_config)||(_pin_config->pin 
      +                          > 8 -1))
  4816   002DDC  500C               	movf	gpio_pin_intialize@_pin_config^0,w,c
  4817   002DDE  100D               	iorwf	(gpio_pin_intialize@_pin_config+1)^0,w,c
  4818   002DE0  B4D8               	btfsc	status,2,c
  4819   002DE2  EFF5  F016         	goto	u4531
  4820   002DE6  EFF7  F016         	goto	u4530
  4821   002DEA                     u4531:
  4822   002DEA  EF08  F017         	goto	l5658
  4823   002DEE                     u4530:
  4824   002DEE  C00C  FFD9         	movff	gpio_pin_intialize@_pin_config,fsr2l
  4825   002DF2  C00D  FFDA         	movff	gpio_pin_intialize@_pin_config+1,fsr2h
  4826   002DF6  30DF               	rrcf	223,w,c
  4827   002DF8  32E8               	rrcf	wreg,f,c
  4828   002DFA  32E8               	rrcf	wreg,f,c
  4829   002DFC  0B07               	andlw	7
  4830   002DFE  6E0E               	movwf	??_gpio_pin_intialize^0,c
  4831   002E00  0E07               	movlw	7
  4832   002E02  640E               	cpfsgt	??_gpio_pin_intialize^0,c
  4833   002E04  EF06  F017         	goto	u4541
  4834   002E08  EF08  F017         	goto	u4540
  4835   002E0C                     u4541:
  4836   002E0C  EF0C  F017         	goto	l5660
  4837   002E10                     u4540:
  4838   002E10                     l5658:
  4839                           
  4840                           ;MCAL_layer/GPIO/hal_gpio.c: 147:     {;MCAL_layer/GPIO/hal_gpio.c: 148:         ret = (
      +                          Std_ReturnType)0x00;
  4841   002E10  0E00               	movlw	0
  4842   002E12  6E0F               	movwf	gpio_pin_intialize@ret^0,c
  4843                           
  4844                           ;MCAL_layer/GPIO/hal_gpio.c: 149:     }else
  4845   002E14  EF22  F017         	goto	l5662
  4846   002E18                     l5660:
  4847                           
  4848                           ;MCAL_layer/GPIO/hal_gpio.c: 150:     {;MCAL_layer/GPIO/hal_gpio.c: 151:         ret = g
      +                          pio_pin_direction_intialize(_pin_config);
  4849   002E18  C00C  F002         	movff	gpio_pin_intialize@_pin_config,gpio_pin_direction_intialize@_pin_config
  4850   002E1C  C00D  F003         	movff	gpio_pin_intialize@_pin_config+1,gpio_pin_direction_intialize@_pin_config+1
  4851   002E20  EC70  F00F         	call	_gpio_pin_direction_intialize	;wreg free
  4852   002E24  6E0F               	movwf	gpio_pin_intialize@ret^0,c
  4853                           
  4854                           ;MCAL_layer/GPIO/hal_gpio.c: 152:         ret = gpio_pin_write_logic(_pin_config, _pin_c
      +                          onfig->logic);
  4855   002E26  C00C  F002         	movff	gpio_pin_intialize@_pin_config,gpio_pin_write_logic@_pin_config
  4856   002E2A  C00D  F003         	movff	gpio_pin_intialize@_pin_config+1,gpio_pin_write_logic@_pin_config+1
  4857   002E2E  C00C  FFD9         	movff	gpio_pin_intialize@_pin_config,fsr2l
  4858   002E32  C00D  FFDA         	movff	gpio_pin_intialize@_pin_config+1,fsr2h
  4859   002E36  0E00               	movlw	0
  4860   002E38  BEDF               	btfsc	indf2,7,c
  4861   002E3A  0E01               	movlw	1
  4862   002E3C  6E04               	movwf	gpio_pin_write_logic@logic^0,c
  4863   002E3E  EC45  F011         	call	_gpio_pin_write_logic	;wreg free
  4864   002E42  6E0F               	movwf	gpio_pin_intialize@ret^0,c
  4865   002E44                     l5662:
  4866                           
  4867                           ;MCAL_layer/GPIO/hal_gpio.c: 154:     return ret;
  4868   002E44  500F               	movf	gpio_pin_intialize@ret^0,w,c
  4869   002E46  0012               	return		;funcret
  4870   002E48                     __end_of_gpio_pin_intialize:
  4871                           	callstack 0
  4872                           
  4873 ;; *************** function _gpio_pin_write_logic *****************
  4874 ;; Defined at:
  4875 ;;		line 75 in file "MCAL_layer/GPIO/hal_gpio.c"
  4876 ;; Parameters:    Size  Location     Type
  4877 ;;  _pin_config     2    1[COMRAM] PTR const struct .
  4878 ;;		 -> dc_motor_02.dc_motor_pin(2), dc_motor_02(2), dc_motor_01.dc_motor_pin(2), dc_motor_01(2), 
  4879 ;;		 -> LCD1.lcd_data_pins(4), LCD1(6), relay_turn_off@relay_obj(1), relay_turn_on@relay_obj(1), 
  4880 ;;		 -> relay_initialize@relay_obj(1), led_turn_off@pin_obj(1), led_turn_on@pin_obj(1), led_initialize@pin_obj(1), 
  4881 ;;  logic           1    3[COMRAM] enum E2962
  4882 ;; Auto vars:     Size  Location     Type
  4883 ;;  ret             1   10[COMRAM] unsigned char 
  4884 ;; Return value:  Size  Location     Type
  4885 ;;                  1    wreg      unsigned char 
  4886 ;; Registers used:
  4887 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4888 ;; Tracked objects:
  4889 ;;		On entry : 0/0
  4890 ;;		On exit  : 0/0
  4891 ;;		Unchanged: 0/0
  4892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4893 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4894 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4895 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4896 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4897 ;;Total ram usage:       10 bytes
  4898 ;; Hardware stack levels used: 1
  4899 ;; Hardware stack levels required when called: 2
  4900 ;; This function calls:
  4901 ;;		Nothing
  4902 ;; This function is called by:
  4903 ;;		_lcd_4bit_send_command
  4904 ;;		_lcd_4bit_send_char_data
  4905 ;;		_lcd_send_4bit
  4906 ;;		_lcd_4bit_send_enable_signal
  4907 ;;		_dc_motor_move_left
  4908 ;;		_dc_motor_stop
  4909 ;;		_gpio_pin_intialize
  4910 ;;		_seven_seg_write_number
  4911 ;;		_lcd_8bit_send_command
  4912 ;;		_lcd_8bit_send_char_data
  4913 ;;		_lcd_8bit_send_enable_signal
  4914 ;;		_dc_motor_move_right
  4915 ;;		_keypad_get_value
  4916 ;;		_led_turn_on
  4917 ;;		_led_turn_off
  4918 ;;		_relay_turn_on
  4919 ;;		_relay_turn_off
  4920 ;; This function uses a non-reentrant model
  4921 ;;
  4922                           
  4923                           	psect	text32
  4924   00228A                     __ptext32:
  4925                           	callstack 0
  4926   00228A                     _gpio_pin_write_logic:
  4927                           	callstack 24
  4928   00228A                     
  4929                           ;MCAL_layer/GPIO/hal_gpio.c: 76:     Std_ReturnType ret =(Std_ReturnType)0x01;
  4930   00228A  0E01               	movlw	1
  4931   00228C  6E0B               	movwf	gpio_pin_write_logic@ret^0,c
  4932   00228E                     
  4933                           ;MCAL_layer/GPIO/hal_gpio.c: 77:     if((((void*)0) == _pin_config)||(_pin_config->pin >
      +                           8 -1))
  4934   00228E  5002               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  4935   002290  1003               	iorwf	(gpio_pin_write_logic@_pin_config+1)^0,w,c
  4936   002292  B4D8               	btfsc	status,2,c
  4937   002294  EF4E  F011         	goto	u4181
  4938   002298  EF50  F011         	goto	u4180
  4939   00229C                     u4181:
  4940   00229C  EF61  F011         	goto	l5438
  4941   0022A0                     u4180:
  4942   0022A0  C002  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  4943   0022A4  C003  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  4944   0022A8  30DF               	rrcf	223,w,c
  4945   0022AA  32E8               	rrcf	wreg,f,c
  4946   0022AC  32E8               	rrcf	wreg,f,c
  4947   0022AE  0B07               	andlw	7
  4948   0022B0  6E05               	movwf	??_gpio_pin_write_logic^0,c
  4949   0022B2  0E07               	movlw	7
  4950   0022B4  6405               	cpfsgt	??_gpio_pin_write_logic^0,c
  4951   0022B6  EF5F  F011         	goto	u4191
  4952   0022BA  EF61  F011         	goto	u4190
  4953   0022BE                     u4191:
  4954   0022BE  EFC4  F011         	goto	l5446
  4955   0022C2                     u4190:
  4956   0022C2                     l5438:
  4957                           
  4958                           ;MCAL_layer/GPIO/hal_gpio.c: 78:     {;MCAL_layer/GPIO/hal_gpio.c: 79:         ret = (St
      +                          d_ReturnType)0x00;
  4959   0022C2  0E00               	movlw	0
  4960   0022C4  6E0B               	movwf	gpio_pin_write_logic@ret^0,c
  4961                           
  4962                           ;MCAL_layer/GPIO/hal_gpio.c: 80:     }else
  4963   0022C6  EFD9  F011         	goto	l5448
  4964   0022CA                     l5440:
  4965                           
  4966                           ;MCAL_layer/GPIO/hal_gpio.c: 84:                 (*lat_registers[_pin_config->port] &= ~
      +                          (((uint8_t)1)<<_pin_config->pin));
  4967   0022CA  C002  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  4968   0022CE  C003  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  4969   0022D2  30DF               	rrcf	223,w,c
  4970   0022D4  32E8               	rrcf	wreg,f,c
  4971   0022D6  32E8               	rrcf	wreg,f,c
  4972   0022D8  0B07               	andlw	7
  4973   0022DA  6E05               	movwf	??_gpio_pin_write_logic^0,c
  4974   0022DC  0E01               	movlw	1
  4975   0022DE  6E06               	movwf	(??_gpio_pin_write_logic+1)^0,c
  4976   0022E0  2A05               	incf	??_gpio_pin_write_logic^0,f,c
  4977   0022E2  EF75  F011         	goto	u4204
  4978   0022E6                     u4205:
  4979   0022E6  90D8               	bcf	status,0,c
  4980   0022E8  3606               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  4981   0022EA                     u4204:
  4982   0022EA  2E05               	decfsz	??_gpio_pin_write_logic^0,f,c
  4983   0022EC  EF73  F011         	goto	u4205
  4984   0022F0  5006               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  4985   0022F2  0AFF               	xorlw	255
  4986   0022F4  6E07               	movwf	(??_gpio_pin_write_logic+2)^0,c
  4987   0022F6  C002  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  4988   0022FA  C003  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  4989   0022FE  50DF               	movf	223,w,c
  4990   002300  0B07               	andlw	7
  4991   002302  6E08               	movwf	(??_gpio_pin_write_logic+3)^0,c
  4992   002304  5008               	movf	(??_gpio_pin_write_logic+3)^0,w,c
  4993   002306  0D02               	mullw	2
  4994   002308  0ED3               	movlw	low _lat_registers
  4995   00230A  24F3               	addwf	243,w,c
  4996   00230C  6ED9               	movwf	fsr2l,c
  4997   00230E  0E00               	movlw	high _lat_registers
  4998   002310  20F4               	addwfc	prodh,w,c
  4999   002312  6EDA               	movwf	fsr2h,c
  5000   002314  CFDE F009          	movff	postinc2,??_gpio_pin_write_logic+4
  5001   002318  CFDD F00A          	movff	postdec2,??_gpio_pin_write_logic+5
  5002   00231C  C009  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
  5003   002320  C00A  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
  5004   002324  5007               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  5005   002326  16DF               	andwf	indf2,f,c
  5006                           
  5007                           ;MCAL_layer/GPIO/hal_gpio.c: 85:                 break;
  5008   002328  EFD9  F011         	goto	l5448
  5009   00232C                     l5442:
  5010                           
  5011                           ;MCAL_layer/GPIO/hal_gpio.c: 87:                 (*lat_registers[_pin_config->port] |= (
      +                          ((uint8_t)1)<<_pin_config->pin));
  5012   00232C  C002  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  5013   002330  C003  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  5014   002334  30DF               	rrcf	223,w,c
  5015   002336  32E8               	rrcf	wreg,f,c
  5016   002338  32E8               	rrcf	wreg,f,c
  5017   00233A  0B07               	andlw	7
  5018   00233C  6E05               	movwf	??_gpio_pin_write_logic^0,c
  5019   00233E  0E01               	movlw	1
  5020   002340  6E06               	movwf	(??_gpio_pin_write_logic+1)^0,c
  5021   002342  2A05               	incf	??_gpio_pin_write_logic^0,f,c
  5022   002344  EFA6  F011         	goto	u4214
  5023   002348                     u4215:
  5024   002348  90D8               	bcf	status,0,c
  5025   00234A  3606               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  5026   00234C                     u4214:
  5027   00234C  2E05               	decfsz	??_gpio_pin_write_logic^0,f,c
  5028   00234E  EFA4  F011         	goto	u4215
  5029   002352  C002  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  5030   002356  C003  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  5031   00235A  50DF               	movf	223,w,c
  5032   00235C  0B07               	andlw	7
  5033   00235E  6E07               	movwf	(??_gpio_pin_write_logic+2)^0,c
  5034   002360  5007               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  5035   002362  0D02               	mullw	2
  5036   002364  0ED3               	movlw	low _lat_registers
  5037   002366  24F3               	addwf	243,w,c
  5038   002368  6ED9               	movwf	fsr2l,c
  5039   00236A  0E00               	movlw	high _lat_registers
  5040   00236C  20F4               	addwfc	prodh,w,c
  5041   00236E  6EDA               	movwf	fsr2h,c
  5042   002370  CFDE F008          	movff	postinc2,??_gpio_pin_write_logic+3
  5043   002374  CFDD F009          	movff	postdec2,??_gpio_pin_write_logic+4
  5044   002378  C008  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  5045   00237C  C009  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  5046   002380  5006               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  5047   002382  12DF               	iorwf	indf2,f,c
  5048                           
  5049                           ;MCAL_layer/GPIO/hal_gpio.c: 88:                 break;
  5050   002384  EFD9  F011         	goto	l5448
  5051   002388                     l5446:
  5052   002388  5004               	movf	gpio_pin_write_logic@logic^0,w,c
  5053   00238A  6E05               	movwf	??_gpio_pin_write_logic^0,c
  5054   00238C  6A06               	clrf	(??_gpio_pin_write_logic+1)^0,c
  5055                           
  5056                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5057                           ; Switch size 1, requested type "simple"
  5058                           ; Number of cases is 1, Range of values is 0 to 0
  5059                           ; switch strategies available:
  5060                           ; Name         Instructions Cycles
  5061                           ; simple_byte            4     3 (average)
  5062                           ;	Chosen strategy is simple_byte
  5063   00238E  5006               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  5064   002390  0A00               	xorlw	0	; case 0
  5065   002392  B4D8               	btfsc	status,2,c
  5066   002394  EFCE  F011         	goto	l7780
  5067   002398  EF61  F011         	goto	l5438
  5068   00239C                     l7780:
  5069                           
  5070                           ; Switch size 1, requested type "simple"
  5071                           ; Number of cases is 2, Range of values is 0 to 1
  5072                           ; switch strategies available:
  5073                           ; Name         Instructions Cycles
  5074                           ; simple_byte            7     4 (average)
  5075                           ;	Chosen strategy is simple_byte
  5076   00239C  5005               	movf	??_gpio_pin_write_logic^0,w,c
  5077   00239E  0A00               	xorlw	0	; case 0
  5078   0023A0  B4D8               	btfsc	status,2,c
  5079   0023A2  EF65  F011         	goto	l5440
  5080   0023A6  0A01               	xorlw	1	; case 1
  5081   0023A8  B4D8               	btfsc	status,2,c
  5082   0023AA  EF96  F011         	goto	l5442
  5083   0023AE  EF61  F011         	goto	l5438
  5084   0023B2                     l5448:
  5085                           
  5086                           ;MCAL_layer/GPIO/hal_gpio.c: 92:     return ret;
  5087   0023B2  500B               	movf	gpio_pin_write_logic@ret^0,w,c
  5088   0023B4  0012               	return		;funcret
  5089   0023B6                     __end_of_gpio_pin_write_logic:
  5090                           	callstack 0
  5091                           
  5092 ;; *************** function _gpio_pin_direction_intialize *****************
  5093 ;; Defined at:
  5094 ;;		line 25 in file "MCAL_layer/GPIO/hal_gpio.c"
  5095 ;; Parameters:    Size  Location     Type
  5096 ;;  _pin_config     2    1[COMRAM] PTR const struct .
  5097 ;;		 -> MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_SS(1), MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_CLK(1), M
      +SSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_SDI(1), MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_SDO(1), 
  5098 ;;		 -> MSSP_SPI_Master_Mode_GPIO_PIN_Configurations@SPI_CLK(1), MSSP_SPI_Master_Mode_GPIO_PIN_Configurations@SPI_SDI(1)
      +, MSSP_SPI_Master_Mode_GPIO_PIN_Configurations@SPI_SDO(1), dc_motor_02.dc_motor_pin(2), 
  5099 ;;		 -> dc_motor_02(2), dc_motor_01.dc_motor_pin(2), dc_motor_01(2), LCD1.lcd_data_pins(4), 
  5100 ;;		 -> LCD1(6), relay_initialize@relay_obj(1), led_initialize@pin_obj(1), 
  5101 ;; Auto vars:     Size  Location     Type
  5102 ;;  ret             1    9[COMRAM] unsigned char 
  5103 ;; Return value:  Size  Location     Type
  5104 ;;                  1    wreg      unsigned char 
  5105 ;; Registers used:
  5106 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5107 ;; Tracked objects:
  5108 ;;		On entry : 0/0
  5109 ;;		On exit  : 0/0
  5110 ;;		Unchanged: 0/0
  5111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5112 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5113 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5114 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5115 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5116 ;;Total ram usage:        9 bytes
  5117 ;; Hardware stack levels used: 1
  5118 ;; Hardware stack levels required when called: 2
  5119 ;; This function calls:
  5120 ;;		Nothing
  5121 ;; This function is called by:
  5122 ;;		_gpio_pin_intialize
  5123 ;;		_button_initialize
  5124 ;;		_Interrupt_RBx_initialize
  5125 ;;		_Interrupt_INTx_Pin_Initialize
  5126 ;;		_MSSP_SPI_Master_Mode_GPIO_PIN_Configurations
  5127 ;;		_MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations
  5128 ;; This function uses a non-reentrant model
  5129 ;;
  5130                           
  5131                           	psect	text33
  5132   001EE0                     __ptext33:
  5133                           	callstack 0
  5134   001EE0                     _gpio_pin_direction_intialize:
  5135                           	callstack 24
  5136   001EE0                     
  5137                           ;MCAL_layer/GPIO/hal_gpio.c: 26:     Std_ReturnType ret =(Std_ReturnType)0x01;
  5138   001EE0  0E01               	movlw	1
  5139   001EE2  6E0A               	movwf	gpio_pin_direction_intialize@ret^0,c
  5140   001EE4                     
  5141                           ;MCAL_layer/GPIO/hal_gpio.c: 27:     if((((void*)0) == _pin_config)||(_pin_config->pin >
      +                           8 -1))
  5142   001EE4  5002               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  5143   001EE6  1003               	iorwf	(gpio_pin_direction_intialize@_pin_config+1)^0,w,c
  5144   001EE8  B4D8               	btfsc	status,2,c
  5145   001EEA  EF79  F00F         	goto	u4371
  5146   001EEE  EF7B  F00F         	goto	u4370
  5147   001EF2                     u4371:
  5148   001EF2  EF8C  F00F         	goto	l5560
  5149   001EF6                     u4370:
  5150   001EF6  C002  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  5151   001EFA  C003  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  5152   001EFE  30DF               	rrcf	223,w,c
  5153   001F00  32E8               	rrcf	wreg,f,c
  5154   001F02  32E8               	rrcf	wreg,f,c
  5155   001F04  0B07               	andlw	7
  5156   001F06  6E04               	movwf	??_gpio_pin_direction_intialize^0,c
  5157   001F08  0E07               	movlw	7
  5158   001F0A  6404               	cpfsgt	??_gpio_pin_direction_intialize^0,c
  5159   001F0C  EF8A  F00F         	goto	u4381
  5160   001F10  EF8C  F00F         	goto	u4380
  5161   001F14                     u4381:
  5162   001F14  EFEF  F00F         	goto	l5568
  5163   001F18                     u4380:
  5164   001F18                     l5560:
  5165                           
  5166                           ;MCAL_layer/GPIO/hal_gpio.c: 28:     {;MCAL_layer/GPIO/hal_gpio.c: 29:         ret = (St
      +                          d_ReturnType)0x00;
  5167   001F18  0E00               	movlw	0
  5168   001F1A  6E0A               	movwf	gpio_pin_direction_intialize@ret^0,c
  5169                           
  5170                           ;MCAL_layer/GPIO/hal_gpio.c: 30:     }else
  5171   001F1C  EF10  F010         	goto	l5570
  5172   001F20                     l5562:
  5173                           
  5174                           ;MCAL_layer/GPIO/hal_gpio.c: 34:                 (*tris_registers[_pin_config->port] &= 
      +                          ~(((uint8_t)1)<<_pin_config->pin));
  5175   001F20  C002  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  5176   001F24  C003  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  5177   001F28  30DF               	rrcf	223,w,c
  5178   001F2A  32E8               	rrcf	wreg,f,c
  5179   001F2C  32E8               	rrcf	wreg,f,c
  5180   001F2E  0B07               	andlw	7
  5181   001F30  6E04               	movwf	??_gpio_pin_direction_intialize^0,c
  5182   001F32  0E01               	movlw	1
  5183   001F34  6E05               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  5184   001F36  2A04               	incf	??_gpio_pin_direction_intialize^0,f,c
  5185   001F38  EFA0  F00F         	goto	u4394
  5186   001F3C                     u4395:
  5187   001F3C  90D8               	bcf	status,0,c
  5188   001F3E  3605               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  5189   001F40                     u4394:
  5190   001F40  2E04               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  5191   001F42  EF9E  F00F         	goto	u4395
  5192   001F46  5005               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  5193   001F48  0AFF               	xorlw	255
  5194   001F4A  6E06               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  5195   001F4C  C002  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  5196   001F50  C003  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  5197   001F54  50DF               	movf	223,w,c
  5198   001F56  0B07               	andlw	7
  5199   001F58  6E07               	movwf	(??_gpio_pin_direction_intialize+3)^0,c
  5200   001F5A  5007               	movf	(??_gpio_pin_direction_intialize+3)^0,w,c
  5201   001F5C  0D02               	mullw	2
  5202   001F5E  0EDD               	movlw	low _tris_registers
  5203   001F60  24F3               	addwf	243,w,c
  5204   001F62  6ED9               	movwf	fsr2l,c
  5205   001F64  0E00               	movlw	high _tris_registers
  5206   001F66  20F4               	addwfc	prodh,w,c
  5207   001F68  6EDA               	movwf	fsr2h,c
  5208   001F6A  CFDE F008          	movff	postinc2,??_gpio_pin_direction_intialize+4
  5209   001F6E  CFDD F009          	movff	postdec2,??_gpio_pin_direction_intialize+5
  5210   001F72  C008  FFD9         	movff	??_gpio_pin_direction_intialize+4,fsr2l
  5211   001F76  C009  FFDA         	movff	??_gpio_pin_direction_intialize+5,fsr2h
  5212   001F7A  5006               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  5213   001F7C  16DF               	andwf	indf2,f,c
  5214                           
  5215                           ;MCAL_layer/GPIO/hal_gpio.c: 35:                 break;
  5216   001F7E  EF10  F010         	goto	l5570
  5217   001F82                     l5564:
  5218                           
  5219                           ;MCAL_layer/GPIO/hal_gpio.c: 37:                 (*tris_registers[_pin_config->port] |= 
      +                          (((uint8_t)1)<<_pin_config->pin));
  5220   001F82  C002  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  5221   001F86  C003  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  5222   001F8A  30DF               	rrcf	223,w,c
  5223   001F8C  32E8               	rrcf	wreg,f,c
  5224   001F8E  32E8               	rrcf	wreg,f,c
  5225   001F90  0B07               	andlw	7
  5226   001F92  6E04               	movwf	??_gpio_pin_direction_intialize^0,c
  5227   001F94  0E01               	movlw	1
  5228   001F96  6E05               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  5229   001F98  2A04               	incf	??_gpio_pin_direction_intialize^0,f,c
  5230   001F9A  EFD1  F00F         	goto	u4404
  5231   001F9E                     u4405:
  5232   001F9E  90D8               	bcf	status,0,c
  5233   001FA0  3605               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  5234   001FA2                     u4404:
  5235   001FA2  2E04               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  5236   001FA4  EFCF  F00F         	goto	u4405
  5237   001FA8  C002  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  5238   001FAC  C003  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  5239   001FB0  50DF               	movf	223,w,c
  5240   001FB2  0B07               	andlw	7
  5241   001FB4  6E06               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  5242   001FB6  5006               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  5243   001FB8  0D02               	mullw	2
  5244   001FBA  0EDD               	movlw	low _tris_registers
  5245   001FBC  24F3               	addwf	243,w,c
  5246   001FBE  6ED9               	movwf	fsr2l,c
  5247   001FC0  0E00               	movlw	high _tris_registers
  5248   001FC2  20F4               	addwfc	prodh,w,c
  5249   001FC4  6EDA               	movwf	fsr2h,c
  5250   001FC6  CFDE F007          	movff	postinc2,??_gpio_pin_direction_intialize+3
  5251   001FCA  CFDD F008          	movff	postdec2,??_gpio_pin_direction_intialize+4
  5252   001FCE  C007  FFD9         	movff	??_gpio_pin_direction_intialize+3,fsr2l
  5253   001FD2  C008  FFDA         	movff	??_gpio_pin_direction_intialize+4,fsr2h
  5254   001FD6  5005               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  5255   001FD8  12DF               	iorwf	indf2,f,c
  5256                           
  5257                           ;MCAL_layer/GPIO/hal_gpio.c: 38:                 break;
  5258   001FDA  EF10  F010         	goto	l5570
  5259   001FDE                     l5568:
  5260   001FDE  C002  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  5261   001FE2  C003  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  5262   001FE6  BCDF               	btfsc	indf2,6,c
  5263   001FE8  EFF8  F00F         	goto	u4411
  5264   001FEC  EFFB  F00F         	goto	u4410
  5265   001FF0                     u4411:
  5266   001FF0  0E01               	movlw	1
  5267   001FF2  EFFC  F00F         	goto	u4420
  5268   001FF6                     u4410:
  5269   001FF6  0E00               	movlw	0
  5270   001FF8                     u4420:
  5271   001FF8  6E04               	movwf	??_gpio_pin_direction_intialize^0,c
  5272   001FFA  6A05               	clrf	(??_gpio_pin_direction_intialize+1)^0,c
  5273                           
  5274                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5275                           ; Switch size 1, requested type "simple"
  5276                           ; Number of cases is 1, Range of values is 0 to 0
  5277                           ; switch strategies available:
  5278                           ; Name         Instructions Cycles
  5279                           ; simple_byte            4     3 (average)
  5280                           ;	Chosen strategy is simple_byte
  5281   001FFC  5005               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  5282   001FFE  0A00               	xorlw	0	; case 0
  5283   002000  B4D8               	btfsc	status,2,c
  5284   002002  EF05  F010         	goto	l7782
  5285   002006  EF8C  F00F         	goto	l5560
  5286   00200A                     l7782:
  5287                           
  5288                           ; Switch size 1, requested type "simple"
  5289                           ; Number of cases is 2, Range of values is 0 to 1
  5290                           ; switch strategies available:
  5291                           ; Name         Instructions Cycles
  5292                           ; simple_byte            7     4 (average)
  5293                           ;	Chosen strategy is simple_byte
  5294   00200A  5004               	movf	??_gpio_pin_direction_intialize^0,w,c
  5295   00200C  0A00               	xorlw	0	; case 0
  5296   00200E  B4D8               	btfsc	status,2,c
  5297   002010  EF90  F00F         	goto	l5562
  5298   002014  0A01               	xorlw	1	; case 1
  5299   002016  B4D8               	btfsc	status,2,c
  5300   002018  EFC1  F00F         	goto	l5564
  5301   00201C  EF8C  F00F         	goto	l5560
  5302   002020                     l5570:
  5303                           
  5304                           ;MCAL_layer/GPIO/hal_gpio.c: 42:     return ret;
  5305   002020  500A               	movf	gpio_pin_direction_intialize@ret^0,w,c
  5306   002022  0012               	return		;funcret
  5307   002024                     __end_of_gpio_pin_direction_intialize:
  5308                           	callstack 0
  5309                           
  5310 ;; *************** function ___xxtofl *****************
  5311 ;; Defined at:
  5312 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\xxtofl.c"
  5313 ;; Parameters:    Size  Location     Type
  5314 ;;  sign            1    wreg     unsigned char 
  5315 ;;  val             4    1[COMRAM] long 
  5316 ;; Auto vars:     Size  Location     Type
  5317 ;;  sign            1    9[COMRAM] unsigned char 
  5318 ;;  arg             4   11[COMRAM] unsigned long 
  5319 ;;  exp             1   10[COMRAM] unsigned char 
  5320 ;; Return value:  Size  Location     Type
  5321 ;;                  4    1[COMRAM] unsigned char 
  5322 ;; Registers used:
  5323 ;;		wreg, status,2, status,0
  5324 ;; Tracked objects:
  5325 ;;		On entry : 0/0
  5326 ;;		On exit  : 0/0
  5327 ;;		Unchanged: 0/0
  5328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5329 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5330 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5331 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5332 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5333 ;;Total ram usage:       14 bytes
  5334 ;; Hardware stack levels used: 1
  5335 ;; Hardware stack levels required when called: 2
  5336 ;; This function calls:
  5337 ;;		Nothing
  5338 ;; This function is called by:
  5339 ;;		_main
  5340 ;;		_CCP_PWM_Set_Duty
  5341 ;;		_CCP_PWM_Mode_Config
  5342 ;;		_EUSART_Baud_Rate_Calculation
  5343 ;; This function uses a non-reentrant model
  5344 ;;
  5345                           
  5346                           	psect	text34
  5347   001A20                     __ptext34:
  5348                           	callstack 0
  5349   001A20                     ___xxtofl:
  5350                           	callstack 28
  5351                           
  5352                           ;incstack = 0
  5353                           ;___xxtofl@sign stored from wreg
  5354   001A20  6E0A               	movwf	___xxtofl@sign^0,c
  5355   001A22  500A               	movf	___xxtofl@sign^0,w,c
  5356   001A24  B4D8               	btfsc	status,2,c
  5357   001A26  EF17  F00D         	goto	u5391
  5358   001A2A  EF19  F00D         	goto	u5390
  5359   001A2E                     u5391:
  5360   001A2E  EF3B  F00D         	goto	l2299
  5361   001A32                     u5390:
  5362   001A32  BE05               	btfsc	(___xxtofl@val+3)^0,7,c
  5363   001A34  EF20  F00D         	goto	u5400
  5364   001A38  EF1E  F00D         	goto	u5401
  5365   001A3C                     u5401:
  5366   001A3C  EF3B  F00D         	goto	l2299
  5367   001A40                     u5400:
  5368   001A40  C002  F006         	movff	___xxtofl@val,??___xxtofl
  5369   001A44  C003  F007         	movff	___xxtofl@val+1,??___xxtofl+1
  5370   001A48  C004  F008         	movff	___xxtofl@val+2,??___xxtofl+2
  5371   001A4C  C005  F009         	movff	___xxtofl@val+3,??___xxtofl+3
  5372   001A50  1E06               	comf	??___xxtofl^0,f,c
  5373   001A52  1E07               	comf	(??___xxtofl+1)^0,f,c
  5374   001A54  1E08               	comf	(??___xxtofl+2)^0,f,c
  5375   001A56  1E09               	comf	(??___xxtofl+3)^0,f,c
  5376   001A58  2A06               	incf	??___xxtofl^0,f,c
  5377   001A5A  0E00               	movlw	0
  5378   001A5C  2207               	addwfc	(??___xxtofl+1)^0,f,c
  5379   001A5E  2208               	addwfc	(??___xxtofl+2)^0,f,c
  5380   001A60  2209               	addwfc	(??___xxtofl+3)^0,f,c
  5381   001A62  C006  F00C         	movff	??___xxtofl,___xxtofl@arg
  5382   001A66  C007  F00D         	movff	??___xxtofl+1,___xxtofl@arg+1
  5383   001A6A  C008  F00E         	movff	??___xxtofl+2,___xxtofl@arg+2
  5384   001A6E  C009  F00F         	movff	??___xxtofl+3,___xxtofl@arg+3
  5385   001A72  EF43  F00D         	goto	l6500
  5386   001A76                     l2299:
  5387   001A76  C002  F00C         	movff	___xxtofl@val,___xxtofl@arg
  5388   001A7A  C003  F00D         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5389   001A7E  C004  F00E         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5390   001A82  C005  F00F         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5391   001A86                     l6500:
  5392   001A86  5002               	movf	___xxtofl@val^0,w,c
  5393   001A88  1003               	iorwf	(___xxtofl@val+1)^0,w,c
  5394   001A8A  1004               	iorwf	(___xxtofl@val+2)^0,w,c
  5395   001A8C  1005               	iorwf	(___xxtofl@val+3)^0,w,c
  5396   001A8E  A4D8               	btfss	status,2,c
  5397   001A90  EF4C  F00D         	goto	u5411
  5398   001A94  EF4E  F00D         	goto	u5410
  5399   001A98                     u5411:
  5400   001A98  EF58  F00D         	goto	l6506
  5401   001A9C                     u5410:
  5402   001A9C  0E00               	movlw	0
  5403   001A9E  6E02               	movwf	?___xxtofl^0,c
  5404   001AA0  0E00               	movlw	0
  5405   001AA2  6E03               	movwf	(?___xxtofl+1)^0,c
  5406   001AA4  0E00               	movlw	0
  5407   001AA6  6E04               	movwf	(?___xxtofl+2)^0,c
  5408   001AA8  0E00               	movlw	0
  5409   001AAA  6E05               	movwf	(?___xxtofl+3)^0,c
  5410   001AAC  EFE9  F00D         	goto	l2302
  5411   001AB0                     l6506:
  5412   001AB0  0E96               	movlw	150
  5413   001AB2  6E0B               	movwf	___xxtofl@exp^0,c
  5414   001AB4  EF62  F00D         	goto	l6510
  5415   001AB8                     l6508:
  5416   001AB8  2A0B               	incf	___xxtofl@exp^0,f,c
  5417   001ABA  90D8               	bcf	status,0,c
  5418   001ABC  320F               	rrcf	(___xxtofl@arg+3)^0,f,c
  5419   001ABE  320E               	rrcf	(___xxtofl@arg+2)^0,f,c
  5420   001AC0  320D               	rrcf	(___xxtofl@arg+1)^0,f,c
  5421   001AC2  320C               	rrcf	___xxtofl@arg^0,f,c
  5422   001AC4                     l6510:
  5423   001AC4  0E00               	movlw	0
  5424   001AC6  140C               	andwf	___xxtofl@arg^0,w,c
  5425   001AC8  6E06               	movwf	??___xxtofl^0,c
  5426   001ACA  0E00               	movlw	0
  5427   001ACC  140D               	andwf	(___xxtofl@arg+1)^0,w,c
  5428   001ACE  6E07               	movwf	(??___xxtofl+1)^0,c
  5429   001AD0  0E00               	movlw	0
  5430   001AD2  140E               	andwf	(___xxtofl@arg+2)^0,w,c
  5431   001AD4  6E08               	movwf	(??___xxtofl+2)^0,c
  5432   001AD6  0EFE               	movlw	254
  5433   001AD8  140F               	andwf	(___xxtofl@arg+3)^0,w,c
  5434   001ADA  6E09               	movwf	(??___xxtofl+3)^0,c
  5435   001ADC  5006               	movf	??___xxtofl^0,w,c
  5436   001ADE  1007               	iorwf	(??___xxtofl+1)^0,w,c
  5437   001AE0  1008               	iorwf	(??___xxtofl+2)^0,w,c
  5438   001AE2  1009               	iorwf	(??___xxtofl+3)^0,w,c
  5439   001AE4  A4D8               	btfss	status,2,c
  5440   001AE6  EF77  F00D         	goto	u5421
  5441   001AEA  EF79  F00D         	goto	u5420
  5442   001AEE                     u5421:
  5443   001AEE  EF5C  F00D         	goto	l6508
  5444   001AF2                     u5420:
  5445   001AF2  EF87  F00D         	goto	l2306
  5446   001AF6                     l6512:
  5447   001AF6  2A0B               	incf	___xxtofl@exp^0,f,c
  5448   001AF8  0E01               	movlw	1
  5449   001AFA  260C               	addwf	___xxtofl@arg^0,f,c
  5450   001AFC  0E00               	movlw	0
  5451   001AFE  220D               	addwfc	(___xxtofl@arg+1)^0,f,c
  5452   001B00  220E               	addwfc	(___xxtofl@arg+2)^0,f,c
  5453   001B02  220F               	addwfc	(___xxtofl@arg+3)^0,f,c
  5454   001B04  90D8               	bcf	status,0,c
  5455   001B06  320F               	rrcf	(___xxtofl@arg+3)^0,f,c
  5456   001B08  320E               	rrcf	(___xxtofl@arg+2)^0,f,c
  5457   001B0A  320D               	rrcf	(___xxtofl@arg+1)^0,f,c
  5458   001B0C  320C               	rrcf	___xxtofl@arg^0,f,c
  5459   001B0E                     l2306:
  5460   001B0E  0E00               	movlw	0
  5461   001B10  140C               	andwf	___xxtofl@arg^0,w,c
  5462   001B12  6E06               	movwf	??___xxtofl^0,c
  5463   001B14  0E00               	movlw	0
  5464   001B16  140D               	andwf	(___xxtofl@arg+1)^0,w,c
  5465   001B18  6E07               	movwf	(??___xxtofl+1)^0,c
  5466   001B1A  0E00               	movlw	0
  5467   001B1C  140E               	andwf	(___xxtofl@arg+2)^0,w,c
  5468   001B1E  6E08               	movwf	(??___xxtofl+2)^0,c
  5469   001B20  0EFF               	movlw	255
  5470   001B22  140F               	andwf	(___xxtofl@arg+3)^0,w,c
  5471   001B24  6E09               	movwf	(??___xxtofl+3)^0,c
  5472   001B26  5006               	movf	??___xxtofl^0,w,c
  5473   001B28  1007               	iorwf	(??___xxtofl+1)^0,w,c
  5474   001B2A  1008               	iorwf	(??___xxtofl+2)^0,w,c
  5475   001B2C  1009               	iorwf	(??___xxtofl+3)^0,w,c
  5476   001B2E  A4D8               	btfss	status,2,c
  5477   001B30  EF9C  F00D         	goto	u5431
  5478   001B34  EF9E  F00D         	goto	u5430
  5479   001B38                     u5431:
  5480   001B38  EF7B  F00D         	goto	l6512
  5481   001B3C                     u5430:
  5482   001B3C  EFA6  F00D         	goto	l6520
  5483   001B40                     l6518:
  5484   001B40  060B               	decf	___xxtofl@exp^0,f,c
  5485   001B42  90D8               	bcf	status,0,c
  5486   001B44  360C               	rlcf	___xxtofl@arg^0,f,c
  5487   001B46  360D               	rlcf	(___xxtofl@arg+1)^0,f,c
  5488   001B48  360E               	rlcf	(___xxtofl@arg+2)^0,f,c
  5489   001B4A  360F               	rlcf	(___xxtofl@arg+3)^0,f,c
  5490   001B4C                     l6520:
  5491   001B4C  BE0E               	btfsc	(___xxtofl@arg+2)^0,7,c
  5492   001B4E  EFAB  F00D         	goto	u5441
  5493   001B52  EFAD  F00D         	goto	u5440
  5494   001B56                     u5441:
  5495   001B56  EFB5  F00D         	goto	l2313
  5496   001B5A                     u5440:
  5497   001B5A  0E02               	movlw	2
  5498   001B5C  600B               	cpfslt	___xxtofl@exp^0,c
  5499   001B5E  EFB3  F00D         	goto	u5451
  5500   001B62  EFB5  F00D         	goto	u5450
  5501   001B66                     u5451:
  5502   001B66  EFA0  F00D         	goto	l6518
  5503   001B6A                     u5450:
  5504   001B6A                     l2313:
  5505   001B6A  B00B               	btfsc	___xxtofl@exp^0,0,c
  5506   001B6C  EFBA  F00D         	goto	u5461
  5507   001B70  EFBC  F00D         	goto	u5460
  5508   001B74                     u5461:
  5509   001B74  EFBD  F00D         	goto	l6526
  5510   001B78                     u5460:
  5511   001B78  9E0E               	bcf	(___xxtofl@arg+2)^0,7,c
  5512   001B7A                     l6526:
  5513   001B7A  90D8               	bcf	status,0,c
  5514   001B7C  320B               	rrcf	___xxtofl@exp^0,f,c
  5515   001B7E  C00B  F006         	movff	___xxtofl@exp,??___xxtofl
  5516   001B82  6A07               	clrf	(??___xxtofl+1)^0,c
  5517   001B84  6A08               	clrf	(??___xxtofl+2)^0,c
  5518   001B86  6A09               	clrf	(??___xxtofl+3)^0,c
  5519   001B88  C006  F009         	movff	??___xxtofl,??___xxtofl+3
  5520   001B8C  6A08               	clrf	(??___xxtofl+2)^0,c
  5521   001B8E  6A07               	clrf	(??___xxtofl+1)^0,c
  5522   001B90  6A06               	clrf	??___xxtofl^0,c
  5523   001B92  5006               	movf	??___xxtofl^0,w,c
  5524   001B94  120C               	iorwf	___xxtofl@arg^0,f,c
  5525   001B96  5007               	movf	(??___xxtofl+1)^0,w,c
  5526   001B98  120D               	iorwf	(___xxtofl@arg+1)^0,f,c
  5527   001B9A  5008               	movf	(??___xxtofl+2)^0,w,c
  5528   001B9C  120E               	iorwf	(___xxtofl@arg+2)^0,f,c
  5529   001B9E  5009               	movf	(??___xxtofl+3)^0,w,c
  5530   001BA0  120F               	iorwf	(___xxtofl@arg+3)^0,f,c
  5531   001BA2  500A               	movf	___xxtofl@sign^0,w,c
  5532   001BA4  B4D8               	btfsc	status,2,c
  5533   001BA6  EFD7  F00D         	goto	u5471
  5534   001BAA  EFD9  F00D         	goto	u5470
  5535   001BAE                     u5471:
  5536   001BAE  EFE1  F00D         	goto	l6536
  5537   001BB2                     u5470:
  5538   001BB2  BE05               	btfsc	(___xxtofl@val+3)^0,7,c
  5539   001BB4  EFE0  F00D         	goto	u5480
  5540   001BB8  EFDE  F00D         	goto	u5481
  5541   001BBC                     u5481:
  5542   001BBC  EFE1  F00D         	goto	l6536
  5543   001BC0                     u5480:
  5544   001BC0  8E0F               	bsf	(___xxtofl@arg+3)^0,7,c
  5545   001BC2                     l6536:
  5546   001BC2  C00C  F002         	movff	___xxtofl@arg,?___xxtofl
  5547   001BC6  C00D  F003         	movff	___xxtofl@arg+1,?___xxtofl+1
  5548   001BCA  C00E  F004         	movff	___xxtofl@arg+2,?___xxtofl+2
  5549   001BCE  C00F  F005         	movff	___xxtofl@arg+3,?___xxtofl+3
  5550   001BD2                     l2302:
  5551   001BD2  0012               	return		;funcret
  5552   001BD4                     __end_of___xxtofl:
  5553                           	callstack 0
  5554                           
  5555 ;; *************** function ___lwdiv *****************
  5556 ;; Defined at:
  5557 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\lwdiv.c"
  5558 ;; Parameters:    Size  Location     Type
  5559 ;;  dividend        2    1[COMRAM] unsigned int 
  5560 ;;  divisor         2    3[COMRAM] unsigned int 
  5561 ;; Auto vars:     Size  Location     Type
  5562 ;;  quotient        2    5[COMRAM] unsigned int 
  5563 ;;  counter         1    7[COMRAM] unsigned char 
  5564 ;; Return value:  Size  Location     Type
  5565 ;;                  2    1[COMRAM] unsigned int 
  5566 ;; Registers used:
  5567 ;;		wreg, status,2, status,0
  5568 ;; Tracked objects:
  5569 ;;		On entry : 0/0
  5570 ;;		On exit  : 0/0
  5571 ;;		Unchanged: 0/0
  5572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5573 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5574 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5576 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5577 ;;Total ram usage:        7 bytes
  5578 ;; Hardware stack levels used: 1
  5579 ;; Hardware stack levels required when called: 2
  5580 ;; This function calls:
  5581 ;;		Nothing
  5582 ;; This function is called by:
  5583 ;;		_main
  5584 ;; This function uses a non-reentrant model
  5585 ;;
  5586                           
  5587                           	psect	text35
  5588   002BA2                     __ptext35:
  5589                           	callstack 0
  5590   002BA2                     ___lwdiv:
  5591                           	callstack 28
  5592   002BA2  0E00               	movlw	0
  5593   002BA4  6E07               	movwf	(___lwdiv@quotient+1)^0,c
  5594   002BA6  0E00               	movlw	0
  5595   002BA8  6E06               	movwf	___lwdiv@quotient^0,c
  5596   002BAA  5004               	movf	___lwdiv@divisor^0,w,c
  5597   002BAC  1005               	iorwf	(___lwdiv@divisor+1)^0,w,c
  5598   002BAE  B4D8               	btfsc	status,2,c
  5599   002BB0  EFDC  F015         	goto	u5361
  5600   002BB4  EFDE  F015         	goto	u5360
  5601   002BB8                     u5361:
  5602   002BB8  EF06  F016         	goto	l2135
  5603   002BBC                     u5360:
  5604   002BBC  0E01               	movlw	1
  5605   002BBE  6E08               	movwf	___lwdiv@counter^0,c
  5606   002BC0  EFE6  F015         	goto	l6480
  5607   002BC4                     l6478:
  5608   002BC4  90D8               	bcf	status,0,c
  5609   002BC6  3604               	rlcf	___lwdiv@divisor^0,f,c
  5610   002BC8  3605               	rlcf	(___lwdiv@divisor+1)^0,f,c
  5611   002BCA  2A08               	incf	___lwdiv@counter^0,f,c
  5612   002BCC                     l6480:
  5613   002BCC  AE05               	btfss	(___lwdiv@divisor+1)^0,7,c
  5614   002BCE  EFEB  F015         	goto	u5371
  5615   002BD2  EFED  F015         	goto	u5370
  5616   002BD6                     u5371:
  5617   002BD6  EFE2  F015         	goto	l6478
  5618   002BDA                     u5370:
  5619   002BDA                     l6482:
  5620   002BDA  90D8               	bcf	status,0,c
  5621   002BDC  3606               	rlcf	___lwdiv@quotient^0,f,c
  5622   002BDE  3607               	rlcf	(___lwdiv@quotient+1)^0,f,c
  5623   002BE0  5004               	movf	___lwdiv@divisor^0,w,c
  5624   002BE2  5C02               	subwf	___lwdiv@dividend^0,w,c
  5625   002BE4  5005               	movf	(___lwdiv@divisor+1)^0,w,c
  5626   002BE6  5803               	subwfb	(___lwdiv@dividend+1)^0,w,c
  5627   002BE8  A0D8               	btfss	status,0,c
  5628   002BEA  EFF9  F015         	goto	u5381
  5629   002BEE  EFFB  F015         	goto	u5380
  5630   002BF2                     u5381:
  5631   002BF2  EF00  F016         	goto	l6490
  5632   002BF6                     u5380:
  5633   002BF6  5004               	movf	___lwdiv@divisor^0,w,c
  5634   002BF8  5E02               	subwf	___lwdiv@dividend^0,f,c
  5635   002BFA  5005               	movf	(___lwdiv@divisor+1)^0,w,c
  5636   002BFC  5A03               	subwfb	(___lwdiv@dividend+1)^0,f,c
  5637   002BFE  8006               	bsf	___lwdiv@quotient^0,0,c
  5638   002C00                     l6490:
  5639   002C00  90D8               	bcf	status,0,c
  5640   002C02  3205               	rrcf	(___lwdiv@divisor+1)^0,f,c
  5641   002C04  3204               	rrcf	___lwdiv@divisor^0,f,c
  5642   002C06  2E08               	decfsz	___lwdiv@counter^0,f,c
  5643   002C08  EFED  F015         	goto	l6482
  5644   002C0C                     l2135:
  5645   002C0C  C006  F002         	movff	___lwdiv@quotient,?___lwdiv
  5646   002C10  C007  F003         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5647   002C14  0012               	return		;funcret
  5648   002C16                     __end_of___lwdiv:
  5649                           	callstack 0
  5650                           
  5651 ;; *************** function ___fltol *****************
  5652 ;; Defined at:
  5653 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\fltol.c"
  5654 ;; Parameters:    Size  Location     Type
  5655 ;;  f1              4   40[COMRAM] unsigned int 
  5656 ;; Auto vars:     Size  Location     Type
  5657 ;;  exp1            1   49[COMRAM] unsigned char 
  5658 ;;  sign1           1   48[COMRAM] unsigned char 
  5659 ;; Return value:  Size  Location     Type
  5660 ;;                  4   40[COMRAM] long 
  5661 ;; Registers used:
  5662 ;;		wreg, status,2, status,0
  5663 ;; Tracked objects:
  5664 ;;		On entry : 0/0
  5665 ;;		On exit  : 0/0
  5666 ;;		Unchanged: 0/0
  5667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5668 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5669 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5670 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5671 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5672 ;;Total ram usage:       10 bytes
  5673 ;; Hardware stack levels used: 1
  5674 ;; Hardware stack levels required when called: 2
  5675 ;; This function calls:
  5676 ;;		Nothing
  5677 ;; This function is called by:
  5678 ;;		_main
  5679 ;;		_CCP_PWM_Set_Duty
  5680 ;;		_CCP_PWM_Mode_Config
  5681 ;;		_EUSART_Baud_Rate_Calculation
  5682 ;; This function uses a non-reentrant model
  5683 ;;
  5684                           
  5685                           	psect	text36
  5686   0023B6                     __ptext36:
  5687                           	callstack 0
  5688   0023B6                     ___fltol:
  5689                           	callstack 28
  5690   0023B6  342B               	rlcf	(___fltol@f1+2)^0,w,c
  5691   0023B8  342C               	rlcf	(___fltol@f1+3)^0,w,c
  5692   0023BA  6E32               	movwf	___fltol@exp1^0,c
  5693   0023BC  5032               	movf	___fltol@exp1^0,w,c
  5694   0023BE  A4D8               	btfss	status,2,c
  5695   0023C0  EFE4  F011         	goto	u5291
  5696   0023C4  EFE6  F011         	goto	u5290
  5697   0023C8                     u5291:
  5698   0023C8  EFF0  F011         	goto	l6434
  5699   0023CC                     u5290:
  5700   0023CC                     l6430:
  5701   0023CC  0E00               	movlw	0
  5702   0023CE  6E29               	movwf	?___fltol^0,c
  5703   0023D0  0E00               	movlw	0
  5704   0023D2  6E2A               	movwf	(?___fltol+1)^0,c
  5705   0023D4  0E00               	movlw	0
  5706   0023D6  6E2B               	movwf	(?___fltol+2)^0,c
  5707   0023D8  0E00               	movlw	0
  5708   0023DA  6E2C               	movwf	(?___fltol+3)^0,c
  5709   0023DC  EF5D  F012         	goto	l1941
  5710   0023E0                     l6434:
  5711   0023E0  C029  F02D         	movff	___fltol@f1,??___fltol
  5712   0023E4  C02A  F02E         	movff	___fltol@f1+1,??___fltol+1
  5713   0023E8  C02B  F02F         	movff	___fltol@f1+2,??___fltol+2
  5714   0023EC  C02C  F030         	movff	___fltol@f1+3,??___fltol+3
  5715   0023F0  0E20               	movlw	32
  5716   0023F2  EF00  F012         	goto	u5300
  5717   0023F6                     u5305:
  5718   0023F6  90D8               	bcf	status,0,c
  5719   0023F8  3230               	rrcf	(??___fltol+3)^0,f,c
  5720   0023FA  322F               	rrcf	(??___fltol+2)^0,f,c
  5721   0023FC  322E               	rrcf	(??___fltol+1)^0,f,c
  5722   0023FE  322D               	rrcf	??___fltol^0,f,c
  5723   002400                     u5300:
  5724   002400  2EE8               	decfsz	wreg,f,c
  5725   002402  EFFB  F011         	goto	u5305
  5726   002406  502D               	movf	??___fltol^0,w,c
  5727   002408  6E31               	movwf	___fltol@sign1^0,c
  5728   00240A  8E2B               	bsf	(___fltol@f1+2)^0,7,c
  5729   00240C  0EFF               	movlw	255
  5730   00240E  1629               	andwf	___fltol@f1^0,f,c
  5731   002410  0EFF               	movlw	255
  5732   002412  162A               	andwf	(___fltol@f1+1)^0,f,c
  5733   002414  0EFF               	movlw	255
  5734   002416  162B               	andwf	(___fltol@f1+2)^0,f,c
  5735   002418  0E00               	movlw	0
  5736   00241A  162C               	andwf	(___fltol@f1+3)^0,f,c
  5737   00241C  0E96               	movlw	150
  5738   00241E  5E32               	subwf	___fltol@exp1^0,f,c
  5739   002420  BE32               	btfsc	___fltol@exp1^0,7,c
  5740   002422  EF17  F012         	goto	u5310
  5741   002426  EF15  F012         	goto	u5311
  5742   00242A                     u5311:
  5743   00242A  EF2D  F012         	goto	l6454
  5744   00242E                     u5310:
  5745   00242E  5032               	movf	___fltol@exp1^0,w,c
  5746   002430  0A80               	xorlw	128
  5747   002432  0F97               	addlw	151
  5748   002434  B0D8               	btfsc	status,0,c
  5749   002436  EF1F  F012         	goto	u5321
  5750   00243A  EF21  F012         	goto	u5320
  5751   00243E                     u5321:
  5752   00243E  EF23  F012         	goto	l6450
  5753   002442                     u5320:
  5754   002442  EFE6  F011         	goto	l6430
  5755   002446                     l6450:
  5756   002446  90D8               	bcf	status,0,c
  5757   002448  322C               	rrcf	(___fltol@f1+3)^0,f,c
  5758   00244A  322B               	rrcf	(___fltol@f1+2)^0,f,c
  5759   00244C  322A               	rrcf	(___fltol@f1+1)^0,f,c
  5760   00244E  3229               	rrcf	___fltol@f1^0,f,c
  5761   002450  3E32               	incfsz	___fltol@exp1^0,f,c
  5762   002452  EF23  F012         	goto	l6450
  5763   002456  EF45  F012         	goto	l6464
  5764   00245A                     l6454:
  5765   00245A  0E1F               	movlw	31
  5766   00245C  6432               	cpfsgt	___fltol@exp1^0,c
  5767   00245E  EF33  F012         	goto	u5331
  5768   002462  EF35  F012         	goto	u5330
  5769   002466                     u5331:
  5770   002466  EF3D  F012         	goto	l6462
  5771   00246A                     u5330:
  5772   00246A  EFE6  F011         	goto	l6430
  5773   00246E                     l6460:
  5774   00246E  90D8               	bcf	status,0,c
  5775   002470  3629               	rlcf	___fltol@f1^0,f,c
  5776   002472  362A               	rlcf	(___fltol@f1+1)^0,f,c
  5777   002474  362B               	rlcf	(___fltol@f1+2)^0,f,c
  5778   002476  362C               	rlcf	(___fltol@f1+3)^0,f,c
  5779   002478  0632               	decf	___fltol@exp1^0,f,c
  5780   00247A                     l6462:
  5781   00247A  5032               	movf	___fltol@exp1^0,w,c
  5782   00247C  A4D8               	btfss	status,2,c
  5783   00247E  EF43  F012         	goto	u5341
  5784   002482  EF45  F012         	goto	u5340
  5785   002486                     u5341:
  5786   002486  EF37  F012         	goto	l6460
  5787   00248A                     u5340:
  5788   00248A                     l6464:
  5789   00248A  5031               	movf	___fltol@sign1^0,w,c
  5790   00248C  B4D8               	btfsc	status,2,c
  5791   00248E  EF4B  F012         	goto	u5351
  5792   002492  EF4D  F012         	goto	u5350
  5793   002496                     u5351:
  5794   002496  EF55  F012         	goto	l6468
  5795   00249A                     u5350:
  5796   00249A  1E2C               	comf	(___fltol@f1+3)^0,f,c
  5797   00249C  1E2B               	comf	(___fltol@f1+2)^0,f,c
  5798   00249E  1E2A               	comf	(___fltol@f1+1)^0,f,c
  5799   0024A0  6C29               	negf	___fltol@f1^0,c
  5800   0024A2  0E00               	movlw	0
  5801   0024A4  222A               	addwfc	(___fltol@f1+1)^0,f,c
  5802   0024A6  222B               	addwfc	(___fltol@f1+2)^0,f,c
  5803   0024A8  222C               	addwfc	(___fltol@f1+3)^0,f,c
  5804   0024AA                     l6468:
  5805   0024AA  C029  F029         	movff	___fltol@f1,?___fltol
  5806   0024AE  C02A  F02A         	movff	___fltol@f1+1,?___fltol+1
  5807   0024B2  C02B  F02B         	movff	___fltol@f1+2,?___fltol+2
  5808   0024B6  C02C  F02C         	movff	___fltol@f1+3,?___fltol+3
  5809   0024BA                     l1941:
  5810   0024BA  0012               	return		;funcret
  5811   0024BC                     __end_of___fltol:
  5812                           	callstack 0
  5813                           
  5814 ;; *************** function ___flmul *****************
  5815 ;; Defined at:
  5816 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcmul.c"
  5817 ;; Parameters:    Size  Location     Type
  5818 ;;  b               4   15[COMRAM] long 
  5819 ;;  a               4   19[COMRAM] long 
  5820 ;; Auto vars:     Size  Location     Type
  5821 ;;  prod            4   34[COMRAM] struct .
  5822 ;;  grs             4   28[COMRAM] unsigned long 
  5823 ;;  temp            2   38[COMRAM] struct .
  5824 ;;  bexp            1   33[COMRAM] unsigned char 
  5825 ;;  aexp            1   32[COMRAM] unsigned char 
  5826 ;;  sign            1   27[COMRAM] unsigned char 
  5827 ;; Return value:  Size  Location     Type
  5828 ;;                  4   15[COMRAM] unsigned char 
  5829 ;; Registers used:
  5830 ;;		wreg, status,2, status,0, prodl, prodh
  5831 ;; Tracked objects:
  5832 ;;		On entry : 0/0
  5833 ;;		On exit  : 0/0
  5834 ;;		Unchanged: 0/0
  5835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5836 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5837 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5838 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5839 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5840 ;;Total ram usage:       25 bytes
  5841 ;; Hardware stack levels used: 1
  5842 ;; Hardware stack levels required when called: 2
  5843 ;; This function calls:
  5844 ;;		Nothing
  5845 ;; This function is called by:
  5846 ;;		_main
  5847 ;;		_CCP_PWM_Set_Duty
  5848 ;;		_CCP_PWM_Mode_Config
  5849 ;; This function uses a non-reentrant model
  5850 ;;
  5851                           
  5852                           	psect	text37
  5853   001046                     __ptext37:
  5854                           	callstack 0
  5855   001046                     ___flmul:
  5856                           	callstack 28
  5857   001046  5013               	movf	(___flmul@b+3)^0,w,c
  5858   001048  0B80               	andlw	128
  5859   00104A  6E1C               	movwf	___flmul@sign^0,c
  5860   00104C  5013               	movf	(___flmul@b+3)^0,w,c
  5861   00104E  2413               	addwf	(___flmul@b+3)^0,w,c
  5862   001050  6E22               	movwf	___flmul@bexp^0,c
  5863   001052  AE12               	btfss	(___flmul@b+2)^0,7,c
  5864   001054  EF2E  F008         	goto	u5101
  5865   001058  EF30  F008         	goto	u5100
  5866   00105C                     u5101:
  5867   00105C  EF31  F008         	goto	l6304
  5868   001060                     u5100:
  5869   001060  8022               	bsf	___flmul@bexp^0,0,c
  5870   001062                     l6304:
  5871   001062  5022               	movf	___flmul@bexp^0,w,c
  5872   001064  B4D8               	btfsc	status,2,c
  5873   001066  EF37  F008         	goto	u5111
  5874   00106A  EF39  F008         	goto	u5110
  5875   00106E                     u5111:
  5876   00106E  EF4C  F008         	goto	l6312
  5877   001072                     u5110:
  5878   001072  2822               	incf	___flmul@bexp^0,w,c
  5879   001074  A4D8               	btfss	status,2,c
  5880   001076  EF3F  F008         	goto	u5121
  5881   00107A  EF41  F008         	goto	u5120
  5882   00107E                     u5121:
  5883   00107E  EF49  F008         	goto	l6310
  5884   001082                     u5120:
  5885   001082  0E00               	movlw	0
  5886   001084  6E10               	movwf	___flmul@b^0,c
  5887   001086  0E00               	movlw	0
  5888   001088  6E11               	movwf	(___flmul@b+1)^0,c
  5889   00108A  0E00               	movlw	0
  5890   00108C  6E12               	movwf	(___flmul@b+2)^0,c
  5891   00108E  0E00               	movlw	0
  5892   001090  6E13               	movwf	(___flmul@b+3)^0,c
  5893   001092                     l6310:
  5894   001092  8E12               	bsf	(___flmul@b+2)^0,7,c
  5895   001094  EF54  F008         	goto	l6314
  5896   001098                     l6312:
  5897   001098  0E00               	movlw	0
  5898   00109A  6E10               	movwf	___flmul@b^0,c
  5899   00109C  0E00               	movlw	0
  5900   00109E  6E11               	movwf	(___flmul@b+1)^0,c
  5901   0010A0  0E00               	movlw	0
  5902   0010A2  6E12               	movwf	(___flmul@b+2)^0,c
  5903   0010A4  0E00               	movlw	0
  5904   0010A6  6E13               	movwf	(___flmul@b+3)^0,c
  5905   0010A8                     l6314:
  5906   0010A8  5017               	movf	(___flmul@a+3)^0,w,c
  5907   0010AA  0B80               	andlw	128
  5908   0010AC  1A1C               	xorwf	___flmul@sign^0,f,c
  5909   0010AE  5017               	movf	(___flmul@a+3)^0,w,c
  5910   0010B0  2417               	addwf	(___flmul@a+3)^0,w,c
  5911   0010B2  6E21               	movwf	___flmul@aexp^0,c
  5912   0010B4  AE16               	btfss	(___flmul@a+2)^0,7,c
  5913   0010B6  EF5F  F008         	goto	u5131
  5914   0010BA  EF61  F008         	goto	u5130
  5915   0010BE                     u5131:
  5916   0010BE  EF62  F008         	goto	l6322
  5917   0010C2                     u5130:
  5918   0010C2  8021               	bsf	___flmul@aexp^0,0,c
  5919   0010C4                     l6322:
  5920   0010C4  5021               	movf	___flmul@aexp^0,w,c
  5921   0010C6  B4D8               	btfsc	status,2,c
  5922   0010C8  EF68  F008         	goto	u5141
  5923   0010CC  EF6A  F008         	goto	u5140
  5924   0010D0                     u5141:
  5925   0010D0  EF7D  F008         	goto	l6330
  5926   0010D4                     u5140:
  5927   0010D4  2821               	incf	___flmul@aexp^0,w,c
  5928   0010D6  A4D8               	btfss	status,2,c
  5929   0010D8  EF70  F008         	goto	u5151
  5930   0010DC  EF72  F008         	goto	u5150
  5931   0010E0                     u5151:
  5932   0010E0  EF7A  F008         	goto	l6328
  5933   0010E4                     u5150:
  5934   0010E4  0E00               	movlw	0
  5935   0010E6  6E14               	movwf	___flmul@a^0,c
  5936   0010E8  0E00               	movlw	0
  5937   0010EA  6E15               	movwf	(___flmul@a+1)^0,c
  5938   0010EC  0E00               	movlw	0
  5939   0010EE  6E16               	movwf	(___flmul@a+2)^0,c
  5940   0010F0  0E00               	movlw	0
  5941   0010F2  6E17               	movwf	(___flmul@a+3)^0,c
  5942   0010F4                     l6328:
  5943   0010F4  8E16               	bsf	(___flmul@a+2)^0,7,c
  5944   0010F6  EF85  F008         	goto	l2258
  5945   0010FA                     l6330:
  5946   0010FA  0E00               	movlw	0
  5947   0010FC  6E14               	movwf	___flmul@a^0,c
  5948   0010FE  0E00               	movlw	0
  5949   001100  6E15               	movwf	(___flmul@a+1)^0,c
  5950   001102  0E00               	movlw	0
  5951   001104  6E16               	movwf	(___flmul@a+2)^0,c
  5952   001106  0E00               	movlw	0
  5953   001108  6E17               	movwf	(___flmul@a+3)^0,c
  5954   00110A                     l2258:
  5955   00110A  5021               	movf	___flmul@aexp^0,w,c
  5956   00110C  B4D8               	btfsc	status,2,c
  5957   00110E  EF8B  F008         	goto	u5161
  5958   001112  EF8D  F008         	goto	u5160
  5959   001116                     u5161:
  5960   001116  EF95  F008         	goto	l6334
  5961   00111A                     u5160:
  5962   00111A  5022               	movf	___flmul@bexp^0,w,c
  5963   00111C  A4D8               	btfss	status,2,c
  5964   00111E  EF93  F008         	goto	u5171
  5965   001122  EF95  F008         	goto	u5170
  5966   001126                     u5171:
  5967   001126  EF9F  F008         	goto	l6338
  5968   00112A                     u5170:
  5969   00112A                     l6334:
  5970   00112A  0E00               	movlw	0
  5971   00112C  6E10               	movwf	?___flmul^0,c
  5972   00112E  0E00               	movlw	0
  5973   001130  6E11               	movwf	(?___flmul+1)^0,c
  5974   001132  0E00               	movlw	0
  5975   001134  6E12               	movwf	(?___flmul+2)^0,c
  5976   001136  0E00               	movlw	0
  5977   001138  6E13               	movwf	(?___flmul+3)^0,c
  5978   00113A  EF37  F00A         	goto	l2262
  5979   00113E                     l6338:
  5980   00113E  5016               	movf	(___flmul@a+2)^0,w,c
  5981   001140  0210               	mulwf	___flmul@b^0,c
  5982   001142  CFF3 F027          	movff	prodl,___flmul@temp
  5983   001146  CFF4 F028          	movff	prodh,___flmul@temp+1
  5984   00114A  5027               	movf	___flmul@temp^0,w,c
  5985   00114C  6E1D               	movwf	___flmul@grs^0,c
  5986   00114E  6A1E               	clrf	(___flmul@grs+1)^0,c
  5987   001150  6A1F               	clrf	(___flmul@grs+2)^0,c
  5988   001152  6A20               	clrf	(___flmul@grs+3)^0,c
  5989   001154  5028               	movf	(___flmul@temp+1)^0,w,c
  5990   001156  6E23               	movwf	___flmul@prod^0,c
  5991   001158  6A24               	clrf	(___flmul@prod+1)^0,c
  5992   00115A  6A25               	clrf	(___flmul@prod+2)^0,c
  5993   00115C  6A26               	clrf	(___flmul@prod+3)^0,c
  5994   00115E  5015               	movf	(___flmul@a+1)^0,w,c
  5995   001160  0211               	mulwf	(___flmul@b+1)^0,c
  5996   001162  CFF3 F027          	movff	prodl,___flmul@temp
  5997   001166  CFF4 F028          	movff	prodh,___flmul@temp+1
  5998   00116A  5027               	movf	___flmul@temp^0,w,c
  5999   00116C  261D               	addwf	___flmul@grs^0,f,c
  6000   00116E  0E00               	movlw	0
  6001   001170  221E               	addwfc	(___flmul@grs+1)^0,f,c
  6002   001172  221F               	addwfc	(___flmul@grs+2)^0,f,c
  6003   001174  2220               	addwfc	(___flmul@grs+3)^0,f,c
  6004   001176  5028               	movf	(___flmul@temp+1)^0,w,c
  6005   001178  2623               	addwf	___flmul@prod^0,f,c
  6006   00117A  0E00               	movlw	0
  6007   00117C  2224               	addwfc	(___flmul@prod+1)^0,f,c
  6008   00117E  2225               	addwfc	(___flmul@prod+2)^0,f,c
  6009   001180  2226               	addwfc	(___flmul@prod+3)^0,f,c
  6010   001182  5014               	movf	___flmul@a^0,w,c
  6011   001184  0212               	mulwf	(___flmul@b+2)^0,c
  6012   001186  CFF3 F027          	movff	prodl,___flmul@temp
  6013   00118A  CFF4 F028          	movff	prodh,___flmul@temp+1
  6014   00118E  5027               	movf	___flmul@temp^0,w,c
  6015   001190  261D               	addwf	___flmul@grs^0,f,c
  6016   001192  0E00               	movlw	0
  6017   001194  221E               	addwfc	(___flmul@grs+1)^0,f,c
  6018   001196  221F               	addwfc	(___flmul@grs+2)^0,f,c
  6019   001198  2220               	addwfc	(___flmul@grs+3)^0,f,c
  6020   00119A  5028               	movf	(___flmul@temp+1)^0,w,c
  6021   00119C  2623               	addwf	___flmul@prod^0,f,c
  6022   00119E  0E00               	movlw	0
  6023   0011A0  2224               	addwfc	(___flmul@prod+1)^0,f,c
  6024   0011A2  2225               	addwfc	(___flmul@prod+2)^0,f,c
  6025   0011A4  2226               	addwfc	(___flmul@prod+3)^0,f,c
  6026   0011A6  C01F  F020         	movff	___flmul@grs+2,___flmul@grs+3
  6027   0011AA  C01E  F01F         	movff	___flmul@grs+1,___flmul@grs+2
  6028   0011AE  C01D  F01E         	movff	___flmul@grs,___flmul@grs+1
  6029   0011B2  6A1D               	clrf	___flmul@grs^0,c
  6030   0011B4  5014               	movf	___flmul@a^0,w,c
  6031   0011B6  0211               	mulwf	(___flmul@b+1)^0,c
  6032   0011B8  CFF3 F027          	movff	prodl,___flmul@temp
  6033   0011BC  CFF4 F028          	movff	prodh,___flmul@temp+1
  6034   0011C0  5027               	movf	___flmul@temp^0,w,c
  6035   0011C2  261D               	addwf	___flmul@grs^0,f,c
  6036   0011C4  5028               	movf	(___flmul@temp+1)^0,w,c
  6037   0011C6  221E               	addwfc	(___flmul@grs+1)^0,f,c
  6038   0011C8  0E00               	movlw	0
  6039   0011CA  221F               	addwfc	(___flmul@grs+2)^0,f,c
  6040   0011CC  0E00               	movlw	0
  6041   0011CE  2220               	addwfc	(___flmul@grs+3)^0,f,c
  6042   0011D0  5015               	movf	(___flmul@a+1)^0,w,c
  6043   0011D2  0210               	mulwf	___flmul@b^0,c
  6044   0011D4  CFF3 F027          	movff	prodl,___flmul@temp
  6045   0011D8  CFF4 F028          	movff	prodh,___flmul@temp+1
  6046   0011DC  5027               	movf	___flmul@temp^0,w,c
  6047   0011DE  261D               	addwf	___flmul@grs^0,f,c
  6048   0011E0  5028               	movf	(___flmul@temp+1)^0,w,c
  6049   0011E2  221E               	addwfc	(___flmul@grs+1)^0,f,c
  6050   0011E4  0E00               	movlw	0
  6051   0011E6  221F               	addwfc	(___flmul@grs+2)^0,f,c
  6052   0011E8  0E00               	movlw	0
  6053   0011EA  2220               	addwfc	(___flmul@grs+3)^0,f,c
  6054   0011EC  C01F  F020         	movff	___flmul@grs+2,___flmul@grs+3
  6055   0011F0  C01E  F01F         	movff	___flmul@grs+1,___flmul@grs+2
  6056   0011F4  C01D  F01E         	movff	___flmul@grs,___flmul@grs+1
  6057   0011F8  6A1D               	clrf	___flmul@grs^0,c
  6058   0011FA  5014               	movf	___flmul@a^0,w,c
  6059   0011FC  0210               	mulwf	___flmul@b^0,c
  6060   0011FE  CFF3 F027          	movff	prodl,___flmul@temp
  6061   001202  CFF4 F028          	movff	prodh,___flmul@temp+1
  6062   001206  5027               	movf	___flmul@temp^0,w,c
  6063   001208  261D               	addwf	___flmul@grs^0,f,c
  6064   00120A  5028               	movf	(___flmul@temp+1)^0,w,c
  6065   00120C  221E               	addwfc	(___flmul@grs+1)^0,f,c
  6066   00120E  0E00               	movlw	0
  6067   001210  221F               	addwfc	(___flmul@grs+2)^0,f,c
  6068   001212  0E00               	movlw	0
  6069   001214  2220               	addwfc	(___flmul@grs+3)^0,f,c
  6070   001216  5016               	movf	(___flmul@a+2)^0,w,c
  6071   001218  0211               	mulwf	(___flmul@b+1)^0,c
  6072   00121A  CFF3 F027          	movff	prodl,___flmul@temp
  6073   00121E  CFF4 F028          	movff	prodh,___flmul@temp+1
  6074   001222  5027               	movf	___flmul@temp^0,w,c
  6075   001224  2623               	addwf	___flmul@prod^0,f,c
  6076   001226  5028               	movf	(___flmul@temp+1)^0,w,c
  6077   001228  2224               	addwfc	(___flmul@prod+1)^0,f,c
  6078   00122A  0E00               	movlw	0
  6079   00122C  2225               	addwfc	(___flmul@prod+2)^0,f,c
  6080   00122E  0E00               	movlw	0
  6081   001230  2226               	addwfc	(___flmul@prod+3)^0,f,c
  6082   001232  5015               	movf	(___flmul@a+1)^0,w,c
  6083   001234  0212               	mulwf	(___flmul@b+2)^0,c
  6084   001236  CFF3 F027          	movff	prodl,___flmul@temp
  6085   00123A  CFF4 F028          	movff	prodh,___flmul@temp+1
  6086   00123E  5027               	movf	___flmul@temp^0,w,c
  6087   001240  2623               	addwf	___flmul@prod^0,f,c
  6088   001242  5028               	movf	(___flmul@temp+1)^0,w,c
  6089   001244  2224               	addwfc	(___flmul@prod+1)^0,f,c
  6090   001246  0E00               	movlw	0
  6091   001248  2225               	addwfc	(___flmul@prod+2)^0,f,c
  6092   00124A  0E00               	movlw	0
  6093   00124C  2226               	addwfc	(___flmul@prod+3)^0,f,c
  6094   00124E  5016               	movf	(___flmul@a+2)^0,w,c
  6095   001250  0212               	mulwf	(___flmul@b+2)^0,c
  6096   001252  CFF3 F027          	movff	prodl,___flmul@temp
  6097   001256  CFF4 F028          	movff	prodh,___flmul@temp+1
  6098   00125A  5027               	movf	___flmul@temp^0,w,c
  6099   00125C  6E18               	movwf	??___flmul^0,c
  6100   00125E  5028               	movf	(___flmul@temp+1)^0,w,c
  6101   001260  6E19               	movwf	(??___flmul+1)^0,c
  6102   001262  6A1A               	clrf	(??___flmul+2)^0,c
  6103   001264  6A1B               	clrf	(??___flmul+3)^0,c
  6104   001266  C01A  F01B         	movff	??___flmul+2,??___flmul+3
  6105   00126A  C019  F01A         	movff	??___flmul+1,??___flmul+2
  6106   00126E  C018  F019         	movff	??___flmul,??___flmul+1
  6107   001272  6A18               	clrf	??___flmul^0,c
  6108   001274  5018               	movf	??___flmul^0,w,c
  6109   001276  2623               	addwf	___flmul@prod^0,f,c
  6110   001278  5019               	movf	(??___flmul+1)^0,w,c
  6111   00127A  2224               	addwfc	(___flmul@prod+1)^0,f,c
  6112   00127C  501A               	movf	(??___flmul+2)^0,w,c
  6113   00127E  2225               	addwfc	(___flmul@prod+2)^0,f,c
  6114   001280  501B               	movf	(??___flmul+3)^0,w,c
  6115   001282  2226               	addwfc	(___flmul@prod+3)^0,f,c
  6116   001284  C01D  F018         	movff	___flmul@grs,??___flmul
  6117   001288  C01E  F019         	movff	___flmul@grs+1,??___flmul+1
  6118   00128C  C01F  F01A         	movff	___flmul@grs+2,??___flmul+2
  6119   001290  C020  F01B         	movff	___flmul@grs+3,??___flmul+3
  6120   001294  0E19               	movlw	25
  6121   001296  EF52  F009         	goto	u5180
  6122   00129A                     u5185:
  6123   00129A  90D8               	bcf	status,0,c
  6124   00129C  321B               	rrcf	(??___flmul+3)^0,f,c
  6125   00129E  321A               	rrcf	(??___flmul+2)^0,f,c
  6126   0012A0  3219               	rrcf	(??___flmul+1)^0,f,c
  6127   0012A2  3218               	rrcf	??___flmul^0,f,c
  6128   0012A4                     u5180:
  6129   0012A4  2EE8               	decfsz	wreg,f,c
  6130   0012A6  EF4D  F009         	goto	u5185
  6131   0012AA  5018               	movf	??___flmul^0,w,c
  6132   0012AC  2623               	addwf	___flmul@prod^0,f,c
  6133   0012AE  5019               	movf	(??___flmul+1)^0,w,c
  6134   0012B0  2224               	addwfc	(___flmul@prod+1)^0,f,c
  6135   0012B2  501A               	movf	(??___flmul+2)^0,w,c
  6136   0012B4  2225               	addwfc	(___flmul@prod+2)^0,f,c
  6137   0012B6  501B               	movf	(??___flmul+3)^0,w,c
  6138   0012B8  2226               	addwfc	(___flmul@prod+3)^0,f,c
  6139   0012BA  C01F  F020         	movff	___flmul@grs+2,___flmul@grs+3
  6140   0012BE  C01E  F01F         	movff	___flmul@grs+1,___flmul@grs+2
  6141   0012C2  C01D  F01E         	movff	___flmul@grs,___flmul@grs+1
  6142   0012C6  6A1D               	clrf	___flmul@grs^0,c
  6143   0012C8  5021               	movf	___flmul@aexp^0,w,c
  6144   0012CA  C022  F018         	movff	___flmul@bexp,??___flmul
  6145   0012CE  6A19               	clrf	(??___flmul+1)^0,c
  6146   0012D0  2618               	addwf	??___flmul^0,f,c
  6147   0012D2  0E00               	movlw	0
  6148   0012D4  2219               	addwfc	(??___flmul+1)^0,f,c
  6149   0012D6  0E82               	movlw	130
  6150   0012D8  2418               	addwf	??___flmul^0,w,c
  6151   0012DA  6E27               	movwf	___flmul@temp^0,c
  6152   0012DC  0EFF               	movlw	255
  6153   0012DE  2019               	addwfc	(??___flmul+1)^0,w,c
  6154   0012E0  6E28               	movwf	(___flmul@temp+1)^0,c
  6155   0012E2  EF88  F009         	goto	l6386
  6156   0012E6                     l6380:
  6157   0012E6  90D8               	bcf	status,0,c
  6158   0012E8  3623               	rlcf	___flmul@prod^0,f,c
  6159   0012EA  3624               	rlcf	(___flmul@prod+1)^0,f,c
  6160   0012EC  3625               	rlcf	(___flmul@prod+2)^0,f,c
  6161   0012EE  3626               	rlcf	(___flmul@prod+3)^0,f,c
  6162   0012F0  AE20               	btfss	(___flmul@grs+3)^0,7,c
  6163   0012F2  EF7D  F009         	goto	u5191
  6164   0012F6  EF7F  F009         	goto	u5190
  6165   0012FA                     u5191:
  6166   0012FA  EF80  F009         	goto	l2265
  6167   0012FE                     u5190:
  6168   0012FE  8023               	bsf	___flmul@prod^0,0,c
  6169   001300                     l2265:
  6170   001300  90D8               	bcf	status,0,c
  6171   001302  361D               	rlcf	___flmul@grs^0,f,c
  6172   001304  361E               	rlcf	(___flmul@grs+1)^0,f,c
  6173   001306  361F               	rlcf	(___flmul@grs+2)^0,f,c
  6174   001308  3620               	rlcf	(___flmul@grs+3)^0,f,c
  6175   00130A  0627               	decf	___flmul@temp^0,f,c
  6176   00130C  A0D8               	btfss	status,0,c
  6177   00130E  0628               	decf	(___flmul@temp+1)^0,f,c
  6178   001310                     l6386:
  6179   001310  AE25               	btfss	(___flmul@prod+2)^0,7,c
  6180   001312  EF8D  F009         	goto	u5201
  6181   001316  EF8F  F009         	goto	u5200
  6182   00131A                     u5201:
  6183   00131A  EF73  F009         	goto	l6380
  6184   00131E                     u5200:
  6185   00131E  0E00               	movlw	0
  6186   001320  6E21               	movwf	___flmul@aexp^0,c
  6187   001322  AE20               	btfss	(___flmul@grs+3)^0,7,c
  6188   001324  EF96  F009         	goto	u5211
  6189   001328  EF98  F009         	goto	u5210
  6190   00132C                     u5211:
  6191   00132C  EFBC  F009         	goto	l2267
  6192   001330                     u5210:
  6193   001330  0EFF               	movlw	255
  6194   001332  141D               	andwf	___flmul@grs^0,w,c
  6195   001334  6E18               	movwf	??___flmul^0,c
  6196   001336  0EFF               	movlw	255
  6197   001338  141E               	andwf	(___flmul@grs+1)^0,w,c
  6198   00133A  6E19               	movwf	(??___flmul+1)^0,c
  6199   00133C  0EFF               	movlw	255
  6200   00133E  141F               	andwf	(___flmul@grs+2)^0,w,c
  6201   001340  6E1A               	movwf	(??___flmul+2)^0,c
  6202   001342  0E7F               	movlw	127
  6203   001344  1420               	andwf	(___flmul@grs+3)^0,w,c
  6204   001346  6E1B               	movwf	(??___flmul+3)^0,c
  6205   001348  5018               	movf	??___flmul^0,w,c
  6206   00134A  1019               	iorwf	(??___flmul+1)^0,w,c
  6207   00134C  101A               	iorwf	(??___flmul+2)^0,w,c
  6208   00134E  101B               	iorwf	(??___flmul+3)^0,w,c
  6209   001350  B4D8               	btfsc	status,2,c
  6210   001352  EFAD  F009         	goto	u5221
  6211   001356  EFAF  F009         	goto	u5220
  6212   00135A                     u5221:
  6213   00135A  EFB3  F009         	goto	l2268
  6214   00135E                     u5220:
  6215   00135E                     l6394:
  6216   00135E  0E01               	movlw	1
  6217   001360  6E21               	movwf	___flmul@aexp^0,c
  6218   001362  EFBC  F009         	goto	l2267
  6219   001366                     l2268:
  6220   001366  A023               	btfss	___flmul@prod^0,0,c
  6221   001368  EFB8  F009         	goto	u5231
  6222   00136C  EFBA  F009         	goto	u5230
  6223   001370                     u5231:
  6224   001370  EFBC  F009         	goto	l2267
  6225   001374                     u5230:
  6226   001374  EFAF  F009         	goto	l6394
  6227   001378                     l2267:
  6228   001378  5021               	movf	___flmul@aexp^0,w,c
  6229   00137A  B4D8               	btfsc	status,2,c
  6230   00137C  EFC2  F009         	goto	u5241
  6231   001380  EFC4  F009         	goto	u5240
  6232   001384                     u5241:
  6233   001384  EFE8  F009         	goto	l6406
  6234   001388                     u5240:
  6235   001388  0E01               	movlw	1
  6236   00138A  2623               	addwf	___flmul@prod^0,f,c
  6237   00138C  0E00               	movlw	0
  6238   00138E  2224               	addwfc	(___flmul@prod+1)^0,f,c
  6239   001390  2225               	addwfc	(___flmul@prod+2)^0,f,c
  6240   001392  2226               	addwfc	(___flmul@prod+3)^0,f,c
  6241   001394  A026               	btfss	(___flmul@prod+3)^0,0,c
  6242   001396  EFCF  F009         	goto	u5251
  6243   00139A  EFD1  F009         	goto	u5250
  6244   00139E                     u5251:
  6245   00139E  EFE8  F009         	goto	l6406
  6246   0013A2                     u5250:
  6247   0013A2  C023  F018         	movff	___flmul@prod,??___flmul
  6248   0013A6  C024  F019         	movff	___flmul@prod+1,??___flmul+1
  6249   0013AA  C025  F01A         	movff	___flmul@prod+2,??___flmul+2
  6250   0013AE  C026  F01B         	movff	___flmul@prod+3,??___flmul+3
  6251   0013B2  341B               	rlcf	(??___flmul+3)^0,w,c
  6252   0013B4  321B               	rrcf	(??___flmul+3)^0,f,c
  6253   0013B6  321A               	rrcf	(??___flmul+2)^0,f,c
  6254   0013B8  3219               	rrcf	(??___flmul+1)^0,f,c
  6255   0013BA  3218               	rrcf	??___flmul^0,f,c
  6256   0013BC  C018  F023         	movff	??___flmul,___flmul@prod
  6257   0013C0  C019  F024         	movff	??___flmul+1,___flmul@prod+1
  6258   0013C4  C01A  F025         	movff	??___flmul+2,___flmul@prod+2
  6259   0013C8  C01B  F026         	movff	??___flmul+3,___flmul@prod+3
  6260   0013CC  4A27               	infsnz	___flmul@temp^0,f,c
  6261   0013CE  2A28               	incf	(___flmul@temp+1)^0,f,c
  6262   0013D0                     l6406:
  6263   0013D0  BE28               	btfsc	(___flmul@temp+1)^0,7,c
  6264   0013D2  EFF3  F009         	goto	u5261
  6265   0013D6  5028               	movf	(___flmul@temp+1)^0,w,c
  6266   0013D8  E108               	bnz	u5260
  6267   0013DA  2827               	incf	___flmul@temp^0,w,c
  6268   0013DC  A0D8               	btfss	status,0,c
  6269   0013DE  EFF3  F009         	goto	u5261
  6270   0013E2  EFF5  F009         	goto	u5260
  6271   0013E6                     u5261:
  6272   0013E6  EFFF  F009         	goto	l6410
  6273   0013EA                     u5260:
  6274   0013EA  0E00               	movlw	0
  6275   0013EC  6E23               	movwf	___flmul@prod^0,c
  6276   0013EE  0E00               	movlw	0
  6277   0013F0  6E24               	movwf	(___flmul@prod+1)^0,c
  6278   0013F2  0E80               	movlw	128
  6279   0013F4  6E25               	movwf	(___flmul@prod+2)^0,c
  6280   0013F6  0E7F               	movlw	127
  6281   0013F8  6E26               	movwf	(___flmul@prod+3)^0,c
  6282   0013FA  EF2D  F00A         	goto	l6422
  6283   0013FE                     l6410:
  6284   0013FE  BE28               	btfsc	(___flmul@temp+1)^0,7,c
  6285   001400  EF0C  F00A         	goto	u5270
  6286   001404  5028               	movf	(___flmul@temp+1)^0,w,c
  6287   001406  E106               	bnz	u5271
  6288   001408  0427               	decf	___flmul@temp^0,w,c
  6289   00140A  B0D8               	btfsc	status,0,c
  6290   00140C  EF0A  F00A         	goto	u5271
  6291   001410  EF0C  F00A         	goto	u5270
  6292   001414                     u5271:
  6293   001414  EF18  F00A         	goto	l2275
  6294   001418                     u5270:
  6295   001418  0E00               	movlw	0
  6296   00141A  6E23               	movwf	___flmul@prod^0,c
  6297   00141C  0E00               	movlw	0
  6298   00141E  6E24               	movwf	(___flmul@prod+1)^0,c
  6299   001420  0E00               	movlw	0
  6300   001422  6E25               	movwf	(___flmul@prod+2)^0,c
  6301   001424  0E00               	movlw	0
  6302   001426  6E26               	movwf	(___flmul@prod+3)^0,c
  6303   001428  0E00               	movlw	0
  6304   00142A  6E1C               	movwf	___flmul@sign^0,c
  6305   00142C  EF2D  F00A         	goto	l6422
  6306   001430                     l2275:
  6307   001430  C027  F022         	movff	___flmul@temp,___flmul@bexp
  6308   001434  0EFF               	movlw	255
  6309   001436  1623               	andwf	___flmul@prod^0,f,c
  6310   001438  0EFF               	movlw	255
  6311   00143A  1624               	andwf	(___flmul@prod+1)^0,f,c
  6312   00143C  0E7F               	movlw	127
  6313   00143E  1625               	andwf	(___flmul@prod+2)^0,f,c
  6314   001440  0E00               	movlw	0
  6315   001442  1626               	andwf	(___flmul@prod+3)^0,f,c
  6316   001444  A022               	btfss	___flmul@bexp^0,0,c
  6317   001446  EF27  F00A         	goto	u5281
  6318   00144A  EF29  F00A         	goto	u5280
  6319   00144E                     u5281:
  6320   00144E  EF2A  F00A         	goto	l6420
  6321   001452                     u5280:
  6322   001452  8E25               	bsf	(___flmul@prod+2)^0,7,c
  6323   001454                     l6420:
  6324   001454  90D8               	bcf	status,0,c
  6325   001456  3022               	rrcf	___flmul@bexp^0,w,c
  6326   001458  6E26               	movwf	(___flmul@prod+3)^0,c
  6327   00145A                     l6422:
  6328   00145A  501C               	movf	___flmul@sign^0,w,c
  6329   00145C  1226               	iorwf	(___flmul@prod+3)^0,f,c
  6330   00145E  C023  F010         	movff	___flmul@prod,?___flmul
  6331   001462  C024  F011         	movff	___flmul@prod+1,?___flmul+1
  6332   001466  C025  F012         	movff	___flmul@prod+2,?___flmul+2
  6333   00146A  C026  F013         	movff	___flmul@prod+3,?___flmul+3
  6334   00146E                     l2262:
  6335   00146E  0012               	return		;funcret
  6336   001470                     __end_of___flmul:
  6337                           	callstack 0
  6338                           
  6339 ;; *************** function _ADC_Get_Conversion_Blocking *****************
  6340 ;; Defined at:
  6341 ;;		line 217 in file "MCAL_layer/ADC/hal_adc.c"
  6342 ;; Parameters:    Size  Location     Type
  6343 ;;  ADC_obj         2   10[COMRAM] PTR const struct .
  6344 ;;		 -> ADC1(4), 
  6345 ;;  channel         1   12[COMRAM] enum E3028
  6346 ;;  Conversion_R    2   13[COMRAM] PTR unsigned short 
  6347 ;;		 -> lm35_res_2(2), lm35_res_1(2), 
  6348 ;; Auto vars:     Size  Location     Type
  6349 ;;  ret             1   15[COMRAM] unsigned char 
  6350 ;; Return value:  Size  Location     Type
  6351 ;;                  1    wreg      unsigned char 
  6352 ;; Registers used:
  6353 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6354 ;; Tracked objects:
  6355 ;;		On entry : 0/0
  6356 ;;		On exit  : 0/0
  6357 ;;		Unchanged: 0/0
  6358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6359 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6360 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6362 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6363 ;;Total ram usage:        6 bytes
  6364 ;; Hardware stack levels used: 1
  6365 ;; Hardware stack levels required when called: 4
  6366 ;; This function calls:
  6367 ;;		_ADC_Get_Conversion_Result
  6368 ;;		_ADC_Selsect_Channel
  6369 ;;		_ADC_Start_Conversion
  6370 ;; This function is called by:
  6371 ;;		_main
  6372 ;; This function uses a non-reentrant model
  6373 ;;
  6374                           
  6375                           	psect	text38
  6376   002C16                     __ptext38:
  6377                           	callstack 0
  6378   002C16                     _ADC_Get_Conversion_Blocking:
  6379                           	callstack 26
  6380   002C16                     
  6381                           ;MCAL_layer/ADC/hal_adc.c: 219:     if((((void*)0) == ADC_obj)||(((void*)0) == Conversio
      +                          n_Result))
  6382   002C16  500B               	movf	ADC_Get_Conversion_Blocking@ADC_obj^0,w,c
  6383   002C18  100C               	iorwf	(ADC_Get_Conversion_Blocking@ADC_obj+1)^0,w,c
  6384   002C1A  B4D8               	btfsc	status,2,c
  6385   002C1C  EF12  F016         	goto	u5001
  6386   002C20  EF14  F016         	goto	u5000
  6387   002C24                     u5001:
  6388   002C24  EF1D  F016         	goto	l6162
  6389   002C28                     u5000:
  6390   002C28  500E               	movf	ADC_Get_Conversion_Blocking@Conversion_Result^0,w,c
  6391   002C2A  100F               	iorwf	(ADC_Get_Conversion_Blocking@Conversion_Result+1)^0,w,c
  6392   002C2C  A4D8               	btfss	status,2,c
  6393   002C2E  EF1B  F016         	goto	u5011
  6394   002C32  EF1D  F016         	goto	u5010
  6395   002C36                     u5011:
  6396   002C36  EF21  F016         	goto	l6164
  6397   002C3A                     u5010:
  6398   002C3A                     l6162:
  6399                           
  6400                           ;MCAL_layer/ADC/hal_adc.c: 220:     {;MCAL_layer/ADC/hal_adc.c: 221:         ret = (Std_
      +                          ReturnType)0x00;
  6401   002C3A  0E00               	movlw	0
  6402   002C3C  6E10               	movwf	ADC_Get_Conversion_Blocking@ret^0,c
  6403                           
  6404                           ;MCAL_layer/ADC/hal_adc.c: 222:     }else
  6405   002C3E  EF43  F016         	goto	l6168
  6406   002C42                     l6164:
  6407                           
  6408                           ;MCAL_layer/ADC/hal_adc.c: 223:     {;MCAL_layer/ADC/hal_adc.c: 225:         ret = ADC_S
      +                          elsect_Channel(ADC_obj, channel);
  6409   002C42  C00B  F005         	movff	ADC_Get_Conversion_Blocking@ADC_obj,ADC_Selsect_Channel@ADC_obj
  6410   002C46  C00C  F006         	movff	ADC_Get_Conversion_Blocking@ADC_obj+1,ADC_Selsect_Channel@ADC_obj+1
  6411   002C4A  C00D  F007         	movff	ADC_Get_Conversion_Blocking@channel,ADC_Selsect_Channel@channel
  6412   002C4E  ECB2  F018         	call	_ADC_Selsect_Channel	;wreg free
  6413   002C52  6E10               	movwf	ADC_Get_Conversion_Blocking@ret^0,c
  6414                           
  6415                           ;MCAL_layer/ADC/hal_adc.c: 227:         ret = ADC_Start_Conversion(ADC_obj);
  6416   002C54  C00B  F002         	movff	ADC_Get_Conversion_Blocking@ADC_obj,ADC_Start_Conversion@ADC_obj
  6417   002C58  C00C  F003         	movff	ADC_Get_Conversion_Blocking@ADC_obj+1,ADC_Start_Conversion@ADC_obj+1
  6418   002C5C  EC13  F019         	call	_ADC_Start_Conversion	;wreg free
  6419   002C60  6E10               	movwf	ADC_Get_Conversion_Blocking@ret^0,c
  6420   002C62                     l405:
  6421   002C62  B2C2               	btfsc	194,1,c	;volatile
  6422   002C64  EF36  F016         	goto	u5021
  6423   002C68  EF38  F016         	goto	u5020
  6424   002C6C                     u5021:
  6425   002C6C  EF31  F016         	goto	l405
  6426   002C70                     u5020:
  6427   002C70                     
  6428                           ;MCAL_layer/ADC/hal_adc.c: 230:         ret = ADC_Get_Conversion_Result(ADC_obj, Convers
      +                          ion_Result);
  6429   002C70  C00B  F002         	movff	ADC_Get_Conversion_Blocking@ADC_obj,ADC_Get_Conversion_Result@ADC_obj
  6430   002C74  C00C  F003         	movff	ADC_Get_Conversion_Blocking@ADC_obj+1,ADC_Get_Conversion_Result@ADC_obj+1
  6431   002C78  C00E  F004         	movff	ADC_Get_Conversion_Blocking@Conversion_Result,ADC_Get_Conversion_Result@Conversio
      +                          n_Result
  6432   002C7C  C00F  F005         	movff	ADC_Get_Conversion_Blocking@Conversion_Result+1,ADC_Get_Conversion_Result@Convers
      +                          ion_Result+1
  6433   002C80  EC2F  F013         	call	_ADC_Get_Conversion_Result	;wreg free
  6434   002C84  6E10               	movwf	ADC_Get_Conversion_Blocking@ret^0,c
  6435   002C86                     l6168:
  6436                           
  6437                           ;MCAL_layer/ADC/hal_adc.c: 232:     return ret;
  6438   002C86  5010               	movf	ADC_Get_Conversion_Blocking@ret^0,w,c
  6439   002C88  0012               	return		;funcret
  6440   002C8A                     __end_of_ADC_Get_Conversion_Blocking:
  6441                           	callstack 0
  6442                           
  6443 ;; *************** function _ADC_Start_Conversion *****************
  6444 ;; Defined at:
  6445 ;;		line 136 in file "MCAL_layer/ADC/hal_adc.c"
  6446 ;; Parameters:    Size  Location     Type
  6447 ;;  ADC_obj         2    1[COMRAM] PTR const struct .
  6448 ;;		 -> ADC1(4), 
  6449 ;; Auto vars:     Size  Location     Type
  6450 ;;  ret             1    3[COMRAM] unsigned char 
  6451 ;; Return value:  Size  Location     Type
  6452 ;;                  1    wreg      unsigned char 
  6453 ;; Registers used:
  6454 ;;		wreg, status,2, status,0
  6455 ;; Tracked objects:
  6456 ;;		On entry : 0/0
  6457 ;;		On exit  : 0/0
  6458 ;;		Unchanged: 0/0
  6459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6460 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6461 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6463 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6464 ;;Total ram usage:        3 bytes
  6465 ;; Hardware stack levels used: 1
  6466 ;; Hardware stack levels required when called: 2
  6467 ;; This function calls:
  6468 ;;		Nothing
  6469 ;; This function is called by:
  6470 ;;		_ADC_Get_Conversion_Blocking
  6471 ;; This function uses a non-reentrant model
  6472 ;;
  6473                           
  6474                           	psect	text39
  6475   003226                     __ptext39:
  6476                           	callstack 0
  6477   003226                     _ADC_Start_Conversion:
  6478                           	callstack 27
  6479   003226                     
  6480                           ;MCAL_layer/ADC/hal_adc.c: 137:     Std_ReturnType ret = (Std_ReturnType)0x01;
  6481   003226  0E01               	movlw	1
  6482   003228  6E04               	movwf	ADC_Start_Conversion@ret^0,c
  6483   00322A                     
  6484                           ;MCAL_layer/ADC/hal_adc.c: 138:     if(((void*)0) == ADC_obj)
  6485   00322A  5002               	movf	ADC_Start_Conversion@ADC_obj^0,w,c
  6486   00322C  1003               	iorwf	(ADC_Start_Conversion@ADC_obj+1)^0,w,c
  6487   00322E  A4D8               	btfss	status,2,c
  6488   003230  EF1C  F019         	goto	u4821
  6489   003234  EF1E  F019         	goto	u4820
  6490   003238                     u4821:
  6491   003238  EF22  F019         	goto	l378
  6492   00323C                     u4820:
  6493   00323C                     
  6494                           ;MCAL_layer/ADC/hal_adc.c: 139:     {;MCAL_layer/ADC/hal_adc.c: 140:         ret = (Std_
      +                          ReturnType)0x00;
  6495   00323C  0E00               	movlw	0
  6496   00323E  6E04               	movwf	ADC_Start_Conversion@ret^0,c
  6497                           
  6498                           ;MCAL_layer/ADC/hal_adc.c: 141:     }else
  6499   003240  EF23  F019         	goto	l6004
  6500   003244                     l378:
  6501                           
  6502                           ;MCAL_layer/ADC/hal_adc.c: 142:     {;MCAL_layer/ADC/hal_adc.c: 143:         (ADCON0bits
      +                          .GODONE = 1);
  6503   003244  82C2               	bsf	194,1,c	;volatile
  6504   003246                     l6004:
  6505                           
  6506                           ;MCAL_layer/ADC/hal_adc.c: 145:     return ret;
  6507   003246  5004               	movf	ADC_Start_Conversion@ret^0,w,c
  6508   003248  0012               	return		;funcret
  6509   00324A                     __end_of_ADC_Start_Conversion:
  6510                           	callstack 0
  6511                           
  6512 ;; *************** function _ADC_Selsect_Channel *****************
  6513 ;; Defined at:
  6514 ;;		line 114 in file "MCAL_layer/ADC/hal_adc.c"
  6515 ;; Parameters:    Size  Location     Type
  6516 ;;  ADC_obj         2    4[COMRAM] PTR const struct .
  6517 ;;		 -> ADC1(4), 
  6518 ;;  channel         1    6[COMRAM] enum E3028
  6519 ;; Auto vars:     Size  Location     Type
  6520 ;;  ret             1    8[COMRAM] unsigned char 
  6521 ;; Return value:  Size  Location     Type
  6522 ;;                  1    wreg      unsigned char 
  6523 ;; Registers used:
  6524 ;;		wreg, status,2, status,0, cstack
  6525 ;; Tracked objects:
  6526 ;;		On entry : 0/0
  6527 ;;		On exit  : 0/0
  6528 ;;		Unchanged: 0/0
  6529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6530 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6531 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6532 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6533 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6534 ;;Total ram usage:        5 bytes
  6535 ;; Hardware stack levels used: 1
  6536 ;; Hardware stack levels required when called: 3
  6537 ;; This function calls:
  6538 ;;		_adc_input_channel_port_configure
  6539 ;; This function is called by:
  6540 ;;		_ADC_Get_Conversion_Blocking
  6541 ;; This function uses a non-reentrant model
  6542 ;;
  6543                           
  6544                           	psect	text40
  6545   003164                     __ptext40:
  6546                           	callstack 0
  6547   003164                     _ADC_Selsect_Channel:
  6548                           	callstack 26
  6549   003164                     
  6550                           ;MCAL_layer/ADC/hal_adc.c: 115:     Std_ReturnType ret = (Std_ReturnType)0x01;
  6551   003164  0E01               	movlw	1
  6552   003166  6E09               	movwf	ADC_Selsect_Channel@ret^0,c
  6553   003168                     
  6554                           ;MCAL_layer/ADC/hal_adc.c: 116:     if(((void*)0) == ADC_obj)
  6555   003168  5005               	movf	ADC_Selsect_Channel@ADC_obj^0,w,c
  6556   00316A  1006               	iorwf	(ADC_Selsect_Channel@ADC_obj+1)^0,w,c
  6557   00316C  A4D8               	btfss	status,2,c
  6558   00316E  EFBB  F018         	goto	u4811
  6559   003172  EFBD  F018         	goto	u4810
  6560   003176                     u4811:
  6561   003176  EFC1  F018         	goto	l5990
  6562   00317A                     u4810:
  6563   00317A                     
  6564                           ;MCAL_layer/ADC/hal_adc.c: 117:     {;MCAL_layer/ADC/hal_adc.c: 118:         ret = (Std_
      +                          ReturnType)0x00;
  6565   00317A  0E00               	movlw	0
  6566   00317C  6E09               	movwf	ADC_Selsect_Channel@ret^0,c
  6567                           
  6568                           ;MCAL_layer/ADC/hal_adc.c: 119:     }else
  6569   00317E  EFCD  F018         	goto	l5994
  6570   003182                     l5990:
  6571                           
  6572                           ;MCAL_layer/ADC/hal_adc.c: 120:     {;MCAL_layer/ADC/hal_adc.c: 122:         ADCON0bits.
      +                          CHS = channel;
  6573   003182  C007  F008         	movff	ADC_Selsect_Channel@channel,??_ADC_Selsect_Channel
  6574   003186  4608               	rlncf	??_ADC_Selsect_Channel^0,f,c
  6575   003188  4608               	rlncf	??_ADC_Selsect_Channel^0,f,c
  6576   00318A  50C2               	movf	194,w,c	;volatile
  6577   00318C  1808               	xorwf	??_ADC_Selsect_Channel^0,w,c
  6578   00318E  0BC3               	andlw	-61
  6579   003190  1808               	xorwf	??_ADC_Selsect_Channel^0,w,c
  6580   003192  6EC2               	movwf	194,c	;volatile
  6581   003194                     
  6582                           ;MCAL_layer/ADC/hal_adc.c: 123:         adc_input_channel_port_configure(channel);
  6583   003194  5007               	movf	ADC_Selsect_Channel@channel^0,w,c
  6584   003196  EC5E  F012         	call	_adc_input_channel_port_configure
  6585   00319A                     l5994:
  6586                           
  6587                           ;MCAL_layer/ADC/hal_adc.c: 125:     return ret;
  6588   00319A  5009               	movf	ADC_Selsect_Channel@ret^0,w,c
  6589   00319C  0012               	return		;funcret
  6590   00319E                     __end_of_ADC_Selsect_Channel:
  6591                           	callstack 0
  6592                           
  6593 ;; *************** function _adc_input_channel_port_configure *****************
  6594 ;; Defined at:
  6595 ;;		line 264 in file "MCAL_layer/ADC/hal_adc.c"
  6596 ;; Parameters:    Size  Location     Type
  6597 ;;  channel         1    wreg     const enum E3028
  6598 ;; Auto vars:     Size  Location     Type
  6599 ;;  channel         1    3[COMRAM] const enum E3028
  6600 ;; Return value:  Size  Location     Type
  6601 ;;                  1    wreg      void 
  6602 ;; Registers used:
  6603 ;;		wreg, status,2, status,0
  6604 ;; Tracked objects:
  6605 ;;		On entry : 0/0
  6606 ;;		On exit  : 0/0
  6607 ;;		Unchanged: 0/0
  6608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6610 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6611 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6612 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6613 ;;Total ram usage:        3 bytes
  6614 ;; Hardware stack levels used: 1
  6615 ;; Hardware stack levels required when called: 2
  6616 ;; This function calls:
  6617 ;;		Nothing
  6618 ;; This function is called by:
  6619 ;;		_ADC_initialize
  6620 ;;		_ADC_Selsect_Channel
  6621 ;; This function uses a non-reentrant model
  6622 ;;
  6623                           
  6624                           	psect	text41
  6625   0024BC                     __ptext41:
  6626                           	callstack 0
  6627   0024BC                     _adc_input_channel_port_configure:
  6628                           	callstack 25
  6629                           
  6630                           ;incstack = 0
  6631                           ;adc_input_channel_port_configure@channel stored from wreg
  6632   0024BC  6E04               	movwf	adc_input_channel_port_configure@channel^0,c
  6633   0024BE                     
  6634                           ;MCAL_layer/ADC/hal_adc.c: 265:     switch(channel){
  6635   0024BE  EF88  F012         	goto	l5708
  6636   0024C2                     l5680:
  6637                           
  6638                           ;MCAL_layer/ADC/hal_adc.c: 267:             (TRISA |= (((uint8_t)1)<<0x0));
  6639   0024C2  8092               	bsf	146,0,c	;volatile
  6640                           
  6641                           ;MCAL_layer/ADC/hal_adc.c: 268:             break;
  6642   0024C4  EFC9  F012         	goto	l427
  6643   0024C8                     l5682:
  6644                           
  6645                           ;MCAL_layer/ADC/hal_adc.c: 270:             (TRISA |= (((uint8_t)1)<<0x1));
  6646   0024C8  8292               	bsf	146,1,c	;volatile
  6647                           
  6648                           ;MCAL_layer/ADC/hal_adc.c: 271:             break;
  6649   0024CA  EFC9  F012         	goto	l427
  6650   0024CE                     l5684:
  6651                           
  6652                           ;MCAL_layer/ADC/hal_adc.c: 273:             (TRISA |= (((uint8_t)1)<<0x2));
  6653   0024CE  8492               	bsf	146,2,c	;volatile
  6654                           
  6655                           ;MCAL_layer/ADC/hal_adc.c: 274:             break;
  6656   0024D0  EFC9  F012         	goto	l427
  6657   0024D4                     l5686:
  6658                           
  6659                           ;MCAL_layer/ADC/hal_adc.c: 276:             (TRISA |= (((uint8_t)1)<<0x3));
  6660   0024D4  8692               	bsf	146,3,c	;volatile
  6661                           
  6662                           ;MCAL_layer/ADC/hal_adc.c: 277:             break;
  6663   0024D6  EFC9  F012         	goto	l427
  6664   0024DA                     l5688:
  6665                           
  6666                           ;MCAL_layer/ADC/hal_adc.c: 279:             (TRISA |= (((uint8_t)1)<<0x5));
  6667   0024DA  8A92               	bsf	146,5,c	;volatile
  6668                           
  6669                           ;MCAL_layer/ADC/hal_adc.c: 280:             break;
  6670   0024DC  EFC9  F012         	goto	l427
  6671   0024E0                     l5690:
  6672                           
  6673                           ;MCAL_layer/ADC/hal_adc.c: 282:             (TRISE |= (((uint8_t)1)<<0x0));
  6674   0024E0  8096               	bsf	150,0,c	;volatile
  6675                           
  6676                           ;MCAL_layer/ADC/hal_adc.c: 283:             break;
  6677   0024E2  EFC9  F012         	goto	l427
  6678   0024E6                     l5692:
  6679                           
  6680                           ;MCAL_layer/ADC/hal_adc.c: 285:             (TRISE |= (((uint8_t)1)<<0x1));
  6681   0024E6  8296               	bsf	150,1,c	;volatile
  6682                           
  6683                           ;MCAL_layer/ADC/hal_adc.c: 286:             break;
  6684   0024E8  EFC9  F012         	goto	l427
  6685   0024EC                     l5694:
  6686                           
  6687                           ;MCAL_layer/ADC/hal_adc.c: 288:             (TRISE |= (((uint8_t)1)<<0x2));
  6688   0024EC  8496               	bsf	150,2,c	;volatile
  6689                           
  6690                           ;MCAL_layer/ADC/hal_adc.c: 289:             break;
  6691   0024EE  EFC9  F012         	goto	l427
  6692   0024F2                     l5696:
  6693                           
  6694                           ;MCAL_layer/ADC/hal_adc.c: 291:             (TRISB |= (((uint8_t)1)<<0x2));
  6695   0024F2  8493               	bsf	147,2,c	;volatile
  6696                           
  6697                           ;MCAL_layer/ADC/hal_adc.c: 292:             break;
  6698   0024F4  EFC9  F012         	goto	l427
  6699   0024F8                     l5698:
  6700                           
  6701                           ;MCAL_layer/ADC/hal_adc.c: 294:             (TRISB |= (((uint8_t)1)<<0x3));
  6702   0024F8  8693               	bsf	147,3,c	;volatile
  6703                           
  6704                           ;MCAL_layer/ADC/hal_adc.c: 295:             break;
  6705   0024FA  EFC9  F012         	goto	l427
  6706   0024FE                     l5700:
  6707                           
  6708                           ;MCAL_layer/ADC/hal_adc.c: 297:             (TRISB |= (((uint8_t)1)<<0x1));
  6709   0024FE  8293               	bsf	147,1,c	;volatile
  6710                           
  6711                           ;MCAL_layer/ADC/hal_adc.c: 298:             break;
  6712   002500  EFC9  F012         	goto	l427
  6713   002504                     l5702:
  6714                           
  6715                           ;MCAL_layer/ADC/hal_adc.c: 300:             (TRISB |= (((uint8_t)1)<<0x4));
  6716   002504  8893               	bsf	147,4,c	;volatile
  6717                           
  6718                           ;MCAL_layer/ADC/hal_adc.c: 301:             break;
  6719   002506  EFC9  F012         	goto	l427
  6720   00250A                     l5704:
  6721                           
  6722                           ;MCAL_layer/ADC/hal_adc.c: 303:             (TRISB |= (((uint8_t)1)<<0x0));
  6723   00250A  8093               	bsf	147,0,c	;volatile
  6724                           
  6725                           ;MCAL_layer/ADC/hal_adc.c: 304:             break;
  6726   00250C  EFC9  F012         	goto	l427
  6727   002510                     l5708:
  6728   002510  5004               	movf	adc_input_channel_port_configure@channel^0,w,c
  6729   002512  6E02               	movwf	??_adc_input_channel_port_configure^0,c
  6730   002514  6A03               	clrf	(??_adc_input_channel_port_configure+1)^0,c
  6731                           
  6732                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6733                           ; Switch size 1, requested type "simple"
  6734                           ; Number of cases is 1, Range of values is 0 to 0
  6735                           ; switch strategies available:
  6736                           ; Name         Instructions Cycles
  6737                           ; simple_byte            4     3 (average)
  6738                           ;	Chosen strategy is simple_byte
  6739   002516  5003               	movf	(??_adc_input_channel_port_configure+1)^0,w,c
  6740   002518  0A00               	xorlw	0	; case 0
  6741   00251A  B4D8               	btfsc	status,2,c
  6742   00251C  EF92  F012         	goto	l7784
  6743   002520  EFC9  F012         	goto	l427
  6744   002524                     l7784:
  6745                           
  6746                           ; Switch size 1, requested type "simple"
  6747                           ; Number of cases is 13, Range of values is 0 to 12
  6748                           ; switch strategies available:
  6749                           ; Name         Instructions Cycles
  6750                           ; simple_byte           40    21 (average)
  6751                           ;	Chosen strategy is simple_byte
  6752   002524  5002               	movf	??_adc_input_channel_port_configure^0,w,c
  6753   002526  0A00               	xorlw	0	; case 0
  6754   002528  B4D8               	btfsc	status,2,c
  6755   00252A  EF61  F012         	goto	l5680
  6756   00252E  0A01               	xorlw	1	; case 1
  6757   002530  B4D8               	btfsc	status,2,c
  6758   002532  EF64  F012         	goto	l5682
  6759   002536  0A03               	xorlw	3	; case 2
  6760   002538  B4D8               	btfsc	status,2,c
  6761   00253A  EF67  F012         	goto	l5684
  6762   00253E  0A01               	xorlw	1	; case 3
  6763   002540  B4D8               	btfsc	status,2,c
  6764   002542  EF6A  F012         	goto	l5686
  6765   002546  0A07               	xorlw	7	; case 4
  6766   002548  B4D8               	btfsc	status,2,c
  6767   00254A  EF6D  F012         	goto	l5688
  6768   00254E  0A01               	xorlw	1	; case 5
  6769   002550  B4D8               	btfsc	status,2,c
  6770   002552  EF70  F012         	goto	l5690
  6771   002556  0A03               	xorlw	3	; case 6
  6772   002558  B4D8               	btfsc	status,2,c
  6773   00255A  EF73  F012         	goto	l5692
  6774   00255E  0A01               	xorlw	1	; case 7
  6775   002560  B4D8               	btfsc	status,2,c
  6776   002562  EF76  F012         	goto	l5694
  6777   002566  0A0F               	xorlw	15	; case 8
  6778   002568  B4D8               	btfsc	status,2,c
  6779   00256A  EF79  F012         	goto	l5696
  6780   00256E  0A01               	xorlw	1	; case 9
  6781   002570  B4D8               	btfsc	status,2,c
  6782   002572  EF7C  F012         	goto	l5698
  6783   002576  0A03               	xorlw	3	; case 10
  6784   002578  B4D8               	btfsc	status,2,c
  6785   00257A  EF7F  F012         	goto	l5700
  6786   00257E  0A01               	xorlw	1	; case 11
  6787   002580  B4D8               	btfsc	status,2,c
  6788   002582  EF82  F012         	goto	l5702
  6789   002586  0A07               	xorlw	7	; case 12
  6790   002588  B4D8               	btfsc	status,2,c
  6791   00258A  EF85  F012         	goto	l5704
  6792   00258E  EFC9  F012         	goto	l427
  6793   002592                     l427:
  6794   002592  0012               	return		;funcret
  6795   002594                     __end_of_adc_input_channel_port_configure:
  6796                           	callstack 0
  6797                           
  6798 ;; *************** function _ADC_Get_Conversion_Result *****************
  6799 ;; Defined at:
  6800 ;;		line 186 in file "MCAL_layer/ADC/hal_adc.c"
  6801 ;; Parameters:    Size  Location     Type
  6802 ;;  ADC_obj         2    1[COMRAM] PTR const struct .
  6803 ;;		 -> ADC1(4), 
  6804 ;;  Conversion_R    2    3[COMRAM] PTR unsigned short 
  6805 ;;		 -> lm35_res_2(2), lm35_res_1(2), 
  6806 ;; Auto vars:     Size  Location     Type
  6807 ;;  ret             1    9[COMRAM] unsigned char 
  6808 ;; Return value:  Size  Location     Type
  6809 ;;                  1    wreg      unsigned char 
  6810 ;; Registers used:
  6811 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6812 ;; Tracked objects:
  6813 ;;		On entry : 0/0
  6814 ;;		On exit  : 0/0
  6815 ;;		Unchanged: 0/0
  6816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6817 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6818 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6819 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6820 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6821 ;;Total ram usage:        9 bytes
  6822 ;; Hardware stack levels used: 1
  6823 ;; Hardware stack levels required when called: 2
  6824 ;; This function calls:
  6825 ;;		Nothing
  6826 ;; This function is called by:
  6827 ;;		_ADC_Get_Conversion_Blocking
  6828 ;; This function uses a non-reentrant model
  6829 ;;
  6830                           
  6831                           	psect	text42
  6832   00265E                     __ptext42:
  6833                           	callstack 0
  6834   00265E                     _ADC_Get_Conversion_Result:
  6835                           	callstack 27
  6836   00265E                     
  6837                           ;MCAL_layer/ADC/hal_adc.c: 187:     Std_ReturnType ret = (Std_ReturnType)0x01;
  6838   00265E  0E01               	movlw	1
  6839   002660  6E0A               	movwf	ADC_Get_Conversion_Result@ret^0,c
  6840   002662                     
  6841                           ;MCAL_layer/ADC/hal_adc.c: 188:     if((((void*)0) == ADC_obj)||(((void*)0) == Conversio
      +                          n_Result))
  6842   002662  5002               	movf	ADC_Get_Conversion_Result@ADC_obj^0,w,c
  6843   002664  1003               	iorwf	(ADC_Get_Conversion_Result@ADC_obj+1)^0,w,c
  6844   002666  B4D8               	btfsc	status,2,c
  6845   002668  EF38  F013         	goto	u4831
  6846   00266C  EF3A  F013         	goto	u4830
  6847   002670                     u4831:
  6848   002670  EF43  F013         	goto	l6014
  6849   002674                     u4830:
  6850   002674  5004               	movf	ADC_Get_Conversion_Result@Conversion_Result^0,w,c
  6851   002676  1005               	iorwf	(ADC_Get_Conversion_Result@Conversion_Result+1)^0,w,c
  6852   002678  A4D8               	btfss	status,2,c
  6853   00267A  EF41  F013         	goto	u4841
  6854   00267E  EF43  F013         	goto	u4840
  6855   002682                     u4841:
  6856   002682  EF47  F013         	goto	l6016
  6857   002686                     u4840:
  6858   002686                     l6014:
  6859                           
  6860                           ;MCAL_layer/ADC/hal_adc.c: 189:     {;MCAL_layer/ADC/hal_adc.c: 190:         ret = (Std_
      +                          ReturnType)0x00;
  6861   002686  0E00               	movlw	0
  6862   002688  6E0A               	movwf	ADC_Get_Conversion_Result@ret^0,c
  6863                           
  6864                           ;MCAL_layer/ADC/hal_adc.c: 191:     }else
  6865   00268A  EF90  F013         	goto	l6026
  6866   00268E                     l6016:
  6867                           
  6868                           ;MCAL_layer/ADC/hal_adc.c: 192:     {;MCAL_layer/ADC/hal_adc.c: 193:         if(0x01U==A
      +                          DC_obj->Result_Format){
  6869   00268E  EE20 F003          	lfsr	2,3
  6870   002692  5002               	movf	ADC_Get_Conversion_Result@ADC_obj^0,w,c
  6871   002694  26D9               	addwf	fsr2l,f,c
  6872   002696  5003               	movf	(ADC_Get_Conversion_Result@ADC_obj+1)^0,w,c
  6873   002698  22DA               	addwfc	fsr2h,f,c
  6874   00269A  A2DF               	btfss	indf2,1,c
  6875   00269C  EF52  F013         	goto	u4851
  6876   0026A0  EF54  F013         	goto	u4850
  6877   0026A4                     u4851:
  6878   0026A4  EF68  F013         	goto	l6020
  6879   0026A8                     u4850:
  6880   0026A8                     l6018:
  6881                           
  6882                           ;MCAL_layer/ADC/hal_adc.c: 194:             *Conversion_Result = (uint16_t)((ADRESH << 8
      +                          ) + ADRESL);
  6883   0026A8  50C3               	movf	195,w,c	;volatile
  6884   0026AA  CFC4 F006          	movff	4036,??_ADC_Get_Conversion_Result	;volatile
  6885   0026AE  6A07               	clrf	(??_ADC_Get_Conversion_Result+1)^0,c
  6886   0026B0  C006  F007         	movff	??_ADC_Get_Conversion_Result,??_ADC_Get_Conversion_Result+1
  6887   0026B4  6A06               	clrf	??_ADC_Get_Conversion_Result^0,c
  6888   0026B6  2606               	addwf	??_ADC_Get_Conversion_Result^0,f,c
  6889   0026B8  0E00               	movlw	0
  6890   0026BA  2207               	addwfc	(??_ADC_Get_Conversion_Result+1)^0,f,c
  6891   0026BC  C004  FFD9         	movff	ADC_Get_Conversion_Result@Conversion_Result,fsr2l
  6892   0026C0  C005  FFDA         	movff	ADC_Get_Conversion_Result@Conversion_Result+1,fsr2h
  6893   0026C4  C006  FFDE         	movff	??_ADC_Get_Conversion_Result,postinc2
  6894   0026C8  C007  FFDD         	movff	??_ADC_Get_Conversion_Result+1,postdec2
  6895                           
  6896                           ;MCAL_layer/ADC/hal_adc.c: 195:         }
  6897   0026CC  EF90  F013         	goto	l6026
  6898   0026D0                     l6020:
  6899   0026D0  EE20 F003          	lfsr	2,3
  6900   0026D4  5002               	movf	ADC_Get_Conversion_Result@ADC_obj^0,w,c
  6901   0026D6  26D9               	addwf	fsr2l,f,c
  6902   0026D8  5003               	movf	(ADC_Get_Conversion_Result@ADC_obj+1)^0,w,c
  6903   0026DA  22DA               	addwfc	fsr2h,f,c
  6904   0026DC  B2DF               	btfsc	indf2,1,c
  6905   0026DE  EF73  F013         	goto	u4861
  6906   0026E2  EF75  F013         	goto	u4860
  6907   0026E6                     u4861:
  6908   0026E6  EF54  F013         	goto	l6018
  6909   0026EA                     u4860:
  6910   0026EA                     
  6911                           ;MCAL_layer/ADC/hal_adc.c: 197:             *Conversion_Result = (uint16_t)((ADRESH << 8
      +                          ) + (ADRESL >> 6));
  6912   0026EA  CFC3 F006          	movff	4035,??_ADC_Get_Conversion_Result	;volatile
  6913   0026EE  0E06               	movlw	6
  6914   0026F0  6E07               	movwf	(??_ADC_Get_Conversion_Result+1)^0,c
  6915   0026F2                     u4875:
  6916   0026F2  90D8               	bcf	status,0,c
  6917   0026F4  3206               	rrcf	??_ADC_Get_Conversion_Result^0,f,c
  6918   0026F6  2E07               	decfsz	(??_ADC_Get_Conversion_Result+1)^0,f,c
  6919   0026F8  EF79  F013         	goto	u4875
  6920   0026FC  5006               	movf	??_ADC_Get_Conversion_Result^0,w,c
  6921   0026FE  CFC4 F008          	movff	4036,??_ADC_Get_Conversion_Result+2	;volatile
  6922   002702  6A09               	clrf	(??_ADC_Get_Conversion_Result+3)^0,c
  6923   002704  C008  F009         	movff	??_ADC_Get_Conversion_Result+2,??_ADC_Get_Conversion_Result+3
  6924   002708  6A08               	clrf	(??_ADC_Get_Conversion_Result+2)^0,c
  6925   00270A  2608               	addwf	(??_ADC_Get_Conversion_Result+2)^0,f,c
  6926   00270C  0E00               	movlw	0
  6927   00270E  2209               	addwfc	(??_ADC_Get_Conversion_Result+3)^0,f,c
  6928   002710  C004  FFD9         	movff	ADC_Get_Conversion_Result@Conversion_Result,fsr2l
  6929   002714  C005  FFDA         	movff	ADC_Get_Conversion_Result@Conversion_Result+1,fsr2h
  6930   002718  C008  FFDE         	movff	??_ADC_Get_Conversion_Result+2,postinc2
  6931   00271C  C009  FFDD         	movff	??_ADC_Get_Conversion_Result+3,postdec2
  6932   002720                     l6026:
  6933                           
  6934                           ;MCAL_layer/ADC/hal_adc.c: 203:     return ret;
  6935   002720  500A               	movf	ADC_Get_Conversion_Result@ret^0,w,c
  6936   002722  0012               	return		;funcret
  6937   002724                     __end_of_ADC_Get_Conversion_Result:
  6938                           	callstack 0
  6939                           
  6940 ;; *************** function _InterruptManager *****************
  6941 ;; Defined at:
  6942 ;;		line 46 in file "MCAL_layer/Interrupt/mcal_interrupt_manager.c"
  6943 ;; Parameters:    Size  Location     Type
  6944 ;;		None
  6945 ;; Auto vars:     Size  Location     Type
  6946 ;;		None
  6947 ;; Return value:  Size  Location     Type
  6948 ;;                  1    wreg      void 
  6949 ;; Registers used:
  6950 ;;		wreg, status,2, status,0, cstack
  6951 ;; Tracked objects:
  6952 ;;		On entry : 0/0
  6953 ;;		On exit  : 0/0
  6954 ;;		Unchanged: 0/0
  6955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6960 ;;Total ram usage:        0 bytes
  6961 ;; Hardware stack levels used: 1
  6962 ;; Hardware stack levels required when called: 1
  6963 ;; This function calls:
  6964 ;;		_INT0_ISR
  6965 ;;		_INT1_ISR
  6966 ;;		_INT2_ISR
  6967 ;;		_MSSP_I2C_BC_ISR
  6968 ;;		_MSSP_I2C_ISR
  6969 ;;		_RB4_ISR
  6970 ;;		_RB5_ISR
  6971 ;;		_RB6_ISR
  6972 ;;		_RB7_ISR
  6973 ;; This function is called by:
  6974 ;;		Interrupt level 2
  6975 ;; This function uses a non-reentrant model
  6976 ;;
  6977                           
  6978                           	psect	intcode
  6979   000008                     __pintcode:
  6980                           	callstack 0
  6981   000008                     _InterruptManager:
  6982                           	callstack 20
  6983                           
  6984                           ;incstack = 0
  6985   000008  827E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6986   00000A  EDAD  F00B         	call	int_func,f	;refresh shadow registers
  6987                           
  6988                           	psect	intcode_body
  6989   00175A                     __pintcode_body:
  6990                           	callstack 20
  6991   00175A                     int_func:
  6992                           	callstack 20
  6993   00175A  0006               	pop		; remove dummy address from shadow register refresh
  6994   00175C                     
  6995                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 49:     if((1==INTCONbits.INT0IE)&&(1==I
      +                          NTCONbits.INT0IF)){
  6996   00175C  A8F2               	btfss	242,4,c	;volatile
  6997   00175E  EFB3  F00B         	goto	i2u640_41
  6998   001762  EFB5  F00B         	goto	i2u640_40
  6999   001766                     i2u640_41:
  7000   001766  EFBE  F00B         	goto	i2l1153
  7001   00176A                     i2u640_40:
  7002   00176A  A2F2               	btfss	242,1,c	;volatile
  7003   00176C  EFBA  F00B         	goto	i2u641_41
  7004   001770  EFBC  F00B         	goto	i2u641_40
  7005   001774                     i2u641_41:
  7006   001774  EFBE  F00B         	goto	i2l1153
  7007   001778                     i2u641_40:
  7008   001778                     
  7009                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 50:         INT0_ISR();
  7010   001778  EC73  F019         	call	_INT0_ISR	;wreg free
  7011   00177C                     i2l1153:
  7012                           
  7013                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 52:     if((1==INTCON3bits.INT1IE)&&(1==
      +                          INTCON3bits.INT1IF)){
  7014   00177C  A6F0               	btfss	240,3,c	;volatile
  7015   00177E  EFC3  F00B         	goto	i2u642_41
  7016   001782  EFC5  F00B         	goto	i2u642_40
  7017   001786                     i2u642_41:
  7018   001786  EFCE  F00B         	goto	i2l1155
  7019   00178A                     i2u642_40:
  7020   00178A  A0F0               	btfss	240,0,c	;volatile
  7021   00178C  EFCA  F00B         	goto	i2u643_41
  7022   001790  EFCC  F00B         	goto	i2u643_40
  7023   001794                     i2u643_41:
  7024   001794  EFCE  F00B         	goto	i2l1155
  7025   001798                     i2u643_40:
  7026   001798                     
  7027                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 53:         INT1_ISR();
  7028   001798  EC71  F019         	call	_INT1_ISR	;wreg free
  7029   00179C                     i2l1155:
  7030                           
  7031                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 55:     if((1==INTCON3bits.INT2IE)&&(1==
      +                          INTCON3bits.INT2IF)){
  7032   00179C  A8F0               	btfss	240,4,c	;volatile
  7033   00179E  EFD3  F00B         	goto	i2u644_41
  7034   0017A2  EFD5  F00B         	goto	i2u644_40
  7035   0017A6                     i2u644_41:
  7036   0017A6  EFDE  F00B         	goto	i2l1157
  7037   0017AA                     i2u644_40:
  7038   0017AA  A2F0               	btfss	240,1,c	;volatile
  7039   0017AC  EFDA  F00B         	goto	i2u645_41
  7040   0017B0  EFDC  F00B         	goto	i2u645_40
  7041   0017B4                     i2u645_41:
  7042   0017B4  EFDE  F00B         	goto	i2l1157
  7043   0017B8                     i2u645_40:
  7044   0017B8                     
  7045                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 56:         INT2_ISR();
  7046   0017B8  EC6F  F019         	call	_INT2_ISR	;wreg free
  7047   0017BC                     i2l1157:
  7048                           
  7049                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 63:     if((1==INTCONbits.RBIE)&&(1==INT
      +                          CONbits.RBIF)&&(PORTBbits.RB4==GPIO_HIGH)&&(RB4_Flag==1)){
  7050   0017BC  A6F2               	btfss	242,3,c	;volatile
  7051   0017BE  EFE3  F00B         	goto	i2u646_41
  7052   0017C2  EFE5  F00B         	goto	i2u646_40
  7053   0017C6                     i2u646_41:
  7054   0017C6  EF00  F00C         	goto	i2l1159
  7055   0017CA                     i2u646_40:
  7056   0017CA  A0F2               	btfss	242,0,c	;volatile
  7057   0017CC  EFEA  F00B         	goto	i2u647_41
  7058   0017D0  EFEC  F00B         	goto	i2u647_40
  7059   0017D4                     i2u647_41:
  7060   0017D4  EF00  F00C         	goto	i2l1159
  7061   0017D8                     i2u647_40:
  7062   0017D8  A881               	btfss	129,4,c	;volatile
  7063   0017DA  EFF1  F00B         	goto	i2u648_41
  7064   0017DE  EFF3  F00B         	goto	i2u648_40
  7065   0017E2                     i2u648_41:
  7066   0017E2  EF00  F00C         	goto	i2l1159
  7067   0017E6                     i2u648_40:
  7068   0017E6  047D               	decf	_RB4_Flag^0,w,c	;volatile
  7069   0017E8  A4D8               	btfss	status,2,c
  7070   0017EA  EFF9  F00B         	goto	i2u649_41
  7071   0017EE  EFFB  F00B         	goto	i2u649_40
  7072   0017F2                     i2u649_41:
  7073   0017F2  EF00  F00C         	goto	i2l1159
  7074   0017F6                     i2u649_40:
  7075   0017F6                     
  7076                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 64:         RB4_Flag = 0;
  7077   0017F6  0E00               	movlw	0
  7078   0017F8  6E7D               	movwf	_RB4_Flag^0,c	;volatile
  7079   0017FA                     
  7080                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 65:         RB4_ISR(0);
  7081   0017FA  0E00               	movlw	0
  7082   0017FC  EC4C  F019         	call	_RB4_ISR
  7083   001800                     i2l1159:
  7084                           
  7085                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 67:     if((1==INTCONbits.RBIE)&&(1==INT
      +                          CONbits.RBIF)&&(PORTBbits.RB4==GPIO_LOW)&&(RB4_Flag==0)){
  7086   001800  A6F2               	btfss	242,3,c	;volatile
  7087   001802  EF05  F00C         	goto	i2u650_41
  7088   001806  EF07  F00C         	goto	i2u650_40
  7089   00180A                     i2u650_41:
  7090   00180A  EF22  F00C         	goto	i2l1161
  7091   00180E                     i2u650_40:
  7092   00180E  A0F2               	btfss	242,0,c	;volatile
  7093   001810  EF0C  F00C         	goto	i2u651_41
  7094   001814  EF0E  F00C         	goto	i2u651_40
  7095   001818                     i2u651_41:
  7096   001818  EF22  F00C         	goto	i2l1161
  7097   00181C                     i2u651_40:
  7098   00181C  B881               	btfsc	129,4,c	;volatile
  7099   00181E  EF13  F00C         	goto	i2u652_41
  7100   001822  EF15  F00C         	goto	i2u652_40
  7101   001826                     i2u652_41:
  7102   001826  EF22  F00C         	goto	i2l1161
  7103   00182A                     i2u652_40:
  7104   00182A  507D               	movf	_RB4_Flag^0,w,c	;volatile
  7105   00182C  A4D8               	btfss	status,2,c
  7106   00182E  EF1B  F00C         	goto	i2u653_41
  7107   001832  EF1D  F00C         	goto	i2u653_40
  7108   001836                     i2u653_41:
  7109   001836  EF22  F00C         	goto	i2l1161
  7110   00183A                     i2u653_40:
  7111   00183A                     
  7112                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 68:         RB4_Flag = 1;
  7113   00183A  0E01               	movlw	1
  7114   00183C  6E7D               	movwf	_RB4_Flag^0,c	;volatile
  7115   00183E                     
  7116                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 69:         RB4_ISR(1);
  7117   00183E  0E01               	movlw	1
  7118   001840  EC4C  F019         	call	_RB4_ISR
  7119   001844                     i2l1161:
  7120                           
  7121                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 72:     if((1==INTCONbits.RBIE)&&(1==INT
      +                          CONbits.RBIF)&&(PORTBbits.RB5==GPIO_HIGH)&&(RB5_Flag==1)){
  7122   001844  A6F2               	btfss	242,3,c	;volatile
  7123   001846  EF27  F00C         	goto	i2u654_41
  7124   00184A  EF29  F00C         	goto	i2u654_40
  7125   00184E                     i2u654_41:
  7126   00184E  EF44  F00C         	goto	i2l1163
  7127   001852                     i2u654_40:
  7128   001852  A0F2               	btfss	242,0,c	;volatile
  7129   001854  EF2E  F00C         	goto	i2u655_41
  7130   001858  EF30  F00C         	goto	i2u655_40
  7131   00185C                     i2u655_41:
  7132   00185C  EF44  F00C         	goto	i2l1163
  7133   001860                     i2u655_40:
  7134   001860  AA81               	btfss	129,5,c	;volatile
  7135   001862  EF35  F00C         	goto	i2u656_41
  7136   001866  EF37  F00C         	goto	i2u656_40
  7137   00186A                     i2u656_41:
  7138   00186A  EF44  F00C         	goto	i2l1163
  7139   00186E                     i2u656_40:
  7140   00186E  047C               	decf	_RB5_Flag^0,w,c	;volatile
  7141   001870  A4D8               	btfss	status,2,c
  7142   001872  EF3D  F00C         	goto	i2u657_41
  7143   001876  EF3F  F00C         	goto	i2u657_40
  7144   00187A                     i2u657_41:
  7145   00187A  EF44  F00C         	goto	i2l1163
  7146   00187E                     i2u657_40:
  7147   00187E                     
  7148                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 73:         RB5_Flag = 0;
  7149   00187E  0E00               	movlw	0
  7150   001880  6E7C               	movwf	_RB5_Flag^0,c	;volatile
  7151   001882                     
  7152                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 74:         RB5_ISR(0);
  7153   001882  0E00               	movlw	0
  7154   001884  EC3F  F019         	call	_RB5_ISR
  7155   001888                     i2l1163:
  7156                           
  7157                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 76:     if((1==INTCONbits.RBIE)&&(1==INT
      +                          CONbits.RBIF)&&(PORTBbits.RB5==GPIO_LOW)&&(RB5_Flag==0)){
  7158   001888  A6F2               	btfss	242,3,c	;volatile
  7159   00188A  EF49  F00C         	goto	i2u658_41
  7160   00188E  EF4B  F00C         	goto	i2u658_40
  7161   001892                     i2u658_41:
  7162   001892  EF66  F00C         	goto	i2l1165
  7163   001896                     i2u658_40:
  7164   001896  A0F2               	btfss	242,0,c	;volatile
  7165   001898  EF50  F00C         	goto	i2u659_41
  7166   00189C  EF52  F00C         	goto	i2u659_40
  7167   0018A0                     i2u659_41:
  7168   0018A0  EF66  F00C         	goto	i2l1165
  7169   0018A4                     i2u659_40:
  7170   0018A4  BA81               	btfsc	129,5,c	;volatile
  7171   0018A6  EF57  F00C         	goto	i2u660_41
  7172   0018AA  EF59  F00C         	goto	i2u660_40
  7173   0018AE                     i2u660_41:
  7174   0018AE  EF66  F00C         	goto	i2l1165
  7175   0018B2                     i2u660_40:
  7176   0018B2  507C               	movf	_RB5_Flag^0,w,c	;volatile
  7177   0018B4  A4D8               	btfss	status,2,c
  7178   0018B6  EF5F  F00C         	goto	i2u661_41
  7179   0018BA  EF61  F00C         	goto	i2u661_40
  7180   0018BE                     i2u661_41:
  7181   0018BE  EF66  F00C         	goto	i2l1165
  7182   0018C2                     i2u661_40:
  7183   0018C2                     
  7184                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 77:         RB5_Flag = 1;
  7185   0018C2  0E01               	movlw	1
  7186   0018C4  6E7C               	movwf	_RB5_Flag^0,c	;volatile
  7187   0018C6                     
  7188                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 78:         RB5_ISR(1);
  7189   0018C6  0E01               	movlw	1
  7190   0018C8  EC3F  F019         	call	_RB5_ISR
  7191   0018CC                     i2l1165:
  7192                           
  7193                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 81:     if((1==INTCONbits.RBIE)&&(1==INT
      +                          CONbits.RBIF)&&(PORTBbits.RB6==GPIO_HIGH)&&(RB6_Flag==1)){
  7194   0018CC  A6F2               	btfss	242,3,c	;volatile
  7195   0018CE  EF6B  F00C         	goto	i2u662_41
  7196   0018D2  EF6D  F00C         	goto	i2u662_40
  7197   0018D6                     i2u662_41:
  7198   0018D6  EF88  F00C         	goto	i2l1167
  7199   0018DA                     i2u662_40:
  7200   0018DA  A0F2               	btfss	242,0,c	;volatile
  7201   0018DC  EF72  F00C         	goto	i2u663_41
  7202   0018E0  EF74  F00C         	goto	i2u663_40
  7203   0018E4                     i2u663_41:
  7204   0018E4  EF88  F00C         	goto	i2l1167
  7205   0018E8                     i2u663_40:
  7206   0018E8  AC81               	btfss	129,6,c	;volatile
  7207   0018EA  EF79  F00C         	goto	i2u664_41
  7208   0018EE  EF7B  F00C         	goto	i2u664_40
  7209   0018F2                     i2u664_41:
  7210   0018F2  EF88  F00C         	goto	i2l1167
  7211   0018F6                     i2u664_40:
  7212   0018F6  047B               	decf	_RB6_Flag^0,w,c	;volatile
  7213   0018F8  A4D8               	btfss	status,2,c
  7214   0018FA  EF81  F00C         	goto	i2u665_41
  7215   0018FE  EF83  F00C         	goto	i2u665_40
  7216   001902                     i2u665_41:
  7217   001902  EF88  F00C         	goto	i2l1167
  7218   001906                     i2u665_40:
  7219   001906                     
  7220                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 82:         RB6_Flag = 0;
  7221   001906  0E00               	movlw	0
  7222   001908  6E7B               	movwf	_RB6_Flag^0,c	;volatile
  7223   00190A                     
  7224                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 83:         RB6_ISR(0);
  7225   00190A  0E00               	movlw	0
  7226   00190C  EC32  F019         	call	_RB6_ISR
  7227   001910                     i2l1167:
  7228                           
  7229                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 85:     if((1==INTCONbits.RBIE)&&(1==INT
      +                          CONbits.RBIF)&&(PORTBbits.RB6==GPIO_LOW)&&(RB6_Flag==0)){
  7230   001910  A6F2               	btfss	242,3,c	;volatile
  7231   001912  EF8D  F00C         	goto	i2u666_41
  7232   001916  EF8F  F00C         	goto	i2u666_40
  7233   00191A                     i2u666_41:
  7234   00191A  EFAA  F00C         	goto	i2l1169
  7235   00191E                     i2u666_40:
  7236   00191E  A0F2               	btfss	242,0,c	;volatile
  7237   001920  EF94  F00C         	goto	i2u667_41
  7238   001924  EF96  F00C         	goto	i2u667_40
  7239   001928                     i2u667_41:
  7240   001928  EFAA  F00C         	goto	i2l1169
  7241   00192C                     i2u667_40:
  7242   00192C  BC81               	btfsc	129,6,c	;volatile
  7243   00192E  EF9B  F00C         	goto	i2u668_41
  7244   001932  EF9D  F00C         	goto	i2u668_40
  7245   001936                     i2u668_41:
  7246   001936  EFAA  F00C         	goto	i2l1169
  7247   00193A                     i2u668_40:
  7248   00193A  507B               	movf	_RB6_Flag^0,w,c	;volatile
  7249   00193C  A4D8               	btfss	status,2,c
  7250   00193E  EFA3  F00C         	goto	i2u669_41
  7251   001942  EFA5  F00C         	goto	i2u669_40
  7252   001946                     i2u669_41:
  7253   001946  EFAA  F00C         	goto	i2l1169
  7254   00194A                     i2u669_40:
  7255   00194A                     
  7256                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 86:         RB6_Flag = 1;
  7257   00194A  0E01               	movlw	1
  7258   00194C  6E7B               	movwf	_RB6_Flag^0,c	;volatile
  7259   00194E                     
  7260                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 87:         RB6_ISR(1);
  7261   00194E  0E01               	movlw	1
  7262   001950  EC32  F019         	call	_RB6_ISR
  7263   001954                     i2l1169:
  7264                           
  7265                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 90:     if((1==INTCONbits.RBIE)&&(1==INT
      +                          CONbits.RBIF)&&(PORTBbits.RB7==GPIO_HIGH)&&(RB7_Flag==1)){
  7266   001954  A6F2               	btfss	242,3,c	;volatile
  7267   001956  EFAF  F00C         	goto	i2u670_41
  7268   00195A  EFB1  F00C         	goto	i2u670_40
  7269   00195E                     i2u670_41:
  7270   00195E  EFCC  F00C         	goto	i2l1171
  7271   001962                     i2u670_40:
  7272   001962  A0F2               	btfss	242,0,c	;volatile
  7273   001964  EFB6  F00C         	goto	i2u671_41
  7274   001968  EFB8  F00C         	goto	i2u671_40
  7275   00196C                     i2u671_41:
  7276   00196C  EFCC  F00C         	goto	i2l1171
  7277   001970                     i2u671_40:
  7278   001970  AE81               	btfss	129,7,c	;volatile
  7279   001972  EFBD  F00C         	goto	i2u672_41
  7280   001976  EFBF  F00C         	goto	i2u672_40
  7281   00197A                     i2u672_41:
  7282   00197A  EFCC  F00C         	goto	i2l1171
  7283   00197E                     i2u672_40:
  7284   00197E  047A               	decf	_RB7_Flag^0,w,c	;volatile
  7285   001980  A4D8               	btfss	status,2,c
  7286   001982  EFC5  F00C         	goto	i2u673_41
  7287   001986  EFC7  F00C         	goto	i2u673_40
  7288   00198A                     i2u673_41:
  7289   00198A  EFCC  F00C         	goto	i2l1171
  7290   00198E                     i2u673_40:
  7291   00198E                     
  7292                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 91:         RB7_Flag = 0;
  7293   00198E  0E00               	movlw	0
  7294   001990  6E7A               	movwf	_RB7_Flag^0,c	;volatile
  7295   001992                     
  7296                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 92:         RB7_ISR(0);
  7297   001992  0E00               	movlw	0
  7298   001994  EC25  F019         	call	_RB7_ISR
  7299   001998                     i2l1171:
  7300                           
  7301                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 94:     if((1==INTCONbits.RBIE)&&(1==INT
      +                          CONbits.RBIF)&&(PORTBbits.RB7==GPIO_LOW)&&(RB7_Flag==0)){
  7302   001998  A6F2               	btfss	242,3,c	;volatile
  7303   00199A  EFD1  F00C         	goto	i2u674_41
  7304   00199E  EFD3  F00C         	goto	i2u674_40
  7305   0019A2                     i2u674_41:
  7306   0019A2  EFEE  F00C         	goto	i2l1173
  7307   0019A6                     i2u674_40:
  7308   0019A6  A0F2               	btfss	242,0,c	;volatile
  7309   0019A8  EFD8  F00C         	goto	i2u675_41
  7310   0019AC  EFDA  F00C         	goto	i2u675_40
  7311   0019B0                     i2u675_41:
  7312   0019B0  EFEE  F00C         	goto	i2l1173
  7313   0019B4                     i2u675_40:
  7314   0019B4  BE81               	btfsc	129,7,c	;volatile
  7315   0019B6  EFDF  F00C         	goto	i2u676_41
  7316   0019BA  EFE1  F00C         	goto	i2u676_40
  7317   0019BE                     i2u676_41:
  7318   0019BE  EFEE  F00C         	goto	i2l1173
  7319   0019C2                     i2u676_40:
  7320   0019C2  507A               	movf	_RB7_Flag^0,w,c	;volatile
  7321   0019C4  A4D8               	btfss	status,2,c
  7322   0019C6  EFE7  F00C         	goto	i2u677_41
  7323   0019CA  EFE9  F00C         	goto	i2u677_40
  7324   0019CE                     i2u677_41:
  7325   0019CE  EFEE  F00C         	goto	i2l1173
  7326   0019D2                     i2u677_40:
  7327   0019D2                     
  7328                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 95:         RB7_Flag = 1;
  7329   0019D2  0E01               	movlw	1
  7330   0019D4  6E7A               	movwf	_RB7_Flag^0,c	;volatile
  7331   0019D6                     
  7332                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 96:         RB7_ISR(1);
  7333   0019D6  0E01               	movlw	1
  7334   0019D8  EC25  F019         	call	_RB7_ISR
  7335   0019DC                     i2l1173:
  7336                           
  7337                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 186:     if((1==PIE1bits.SSPIE)&&(1==PIR
      +                          1bits.SSPIF)){
  7338   0019DC  A69D               	btfss	157,3,c	;volatile
  7339   0019DE  EFF3  F00C         	goto	i2u678_41
  7340   0019E2  EFF5  F00C         	goto	i2u678_40
  7341   0019E6                     i2u678_41:
  7342   0019E6  EFFE  F00C         	goto	i2l1175
  7343   0019EA                     i2u678_40:
  7344   0019EA  A69E               	btfss	158,3,c	;volatile
  7345   0019EC  EFFA  F00C         	goto	i2u679_41
  7346   0019F0  EFFC  F00C         	goto	i2u679_40
  7347   0019F4                     i2u679_41:
  7348   0019F4  EFFE  F00C         	goto	i2l1175
  7349   0019F8                     i2u679_40:
  7350   0019F8                     
  7351                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 187:         MSSP_I2C_ISR();
  7352   0019F8  EC6B  F019         	call	_MSSP_I2C_ISR	;wreg free
  7353   0019FC                     i2l1175:
  7354                           
  7355                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 195:     if((1==PIE2bits.BCLIE)&&(1==PIR
      +                          2bits.BCLIF)){
  7356   0019FC  A6A0               	btfss	160,3,c	;volatile
  7357   0019FE  EF03  F00D         	goto	i2u680_41
  7358   001A02  EF05  F00D         	goto	i2u680_40
  7359   001A06                     i2u680_41:
  7360   001A06  EF0E  F00D         	goto	i2l1178
  7361   001A0A                     i2u680_40:
  7362   001A0A  A6A1               	btfss	161,3,c	;volatile
  7363   001A0C  EF0A  F00D         	goto	i2u681_41
  7364   001A10  EF0C  F00D         	goto	i2u681_40
  7365   001A14                     i2u681_41:
  7366   001A14  EF0E  F00D         	goto	i2l1178
  7367   001A18                     i2u681_40:
  7368   001A18                     
  7369                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 196:         MSSP_I2C_BC_ISR();
  7370   001A18  EC6D  F019         	call	_MSSP_I2C_BC_ISR	;wreg free
  7371   001A1C                     i2l1178:
  7372   001A1C  927E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  7373   001A1E  0011               	retfie		f
  7374   001A20                     __end_of_InterruptManager:
  7375                           	callstack 0
  7376                           
  7377 ;; *************** function _RB7_ISR *****************
  7378 ;; Defined at:
  7379 ;;		line 209 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  7380 ;; Parameters:    Size  Location     Type
  7381 ;;  RB7_Source      1    wreg     unsigned char 
  7382 ;; Auto vars:     Size  Location     Type
  7383 ;;  RB7_Source      1    0[COMRAM] unsigned char 
  7384 ;; Return value:  Size  Location     Type
  7385 ;;                  1    wreg      void 
  7386 ;; Registers used:
  7387 ;;		wreg, status,2, status,0
  7388 ;; Tracked objects:
  7389 ;;		On entry : 0/0
  7390 ;;		On exit  : 0/0
  7391 ;;		Unchanged: 0/0
  7392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7394 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7396 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7397 ;;Total ram usage:        1 bytes
  7398 ;; Hardware stack levels used: 1
  7399 ;; This function calls:
  7400 ;;		Nothing
  7401 ;; This function is called by:
  7402 ;;		_InterruptManager
  7403 ;; This function uses a non-reentrant model
  7404 ;;
  7405                           
  7406                           	psect	text44
  7407   00324A                     __ptext44:
  7408                           	callstack 0
  7409   00324A                     _RB7_ISR:
  7410                           	callstack 20
  7411                           
  7412                           ;incstack = 0
  7413                           ;RB7_ISR@RB7_Source stored from wreg
  7414   00324A  6E01               	movwf	RB7_ISR@RB7_Source^0,c
  7415   00324C                     
  7416                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 211:     (INTCONbits.RBIF = 0);
  7417   00324C  90F2               	bcf	242,0,c	;volatile
  7418   00324E                     
  7419                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 214:     if(0==RB7_Source)
  7420   00324E  5001               	movf	RB7_ISR@RB7_Source^0,w,c
  7421   003250  A4D8               	btfss	status,2,c
  7422   003252  EF2D  F019         	goto	i2u506_41
  7423   003256  EF2F  F019         	goto	i2u506_40
  7424   00325A                     i2u506_41:
  7425   00325A  EF31  F019         	goto	i2l6252
  7426   00325E                     i2u506_40:
  7427   00325E  EF31  F019         	goto	i2l998
  7428   003262                     i2l6252:
  7429   003262                     i2l998:
  7430   003262  0012               	return		;funcret
  7431   003264                     __end_of_RB7_ISR:
  7432                           	callstack 0
  7433                           
  7434 ;; *************** function _RB6_ISR *****************
  7435 ;; Defined at:
  7436 ;;		line 181 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  7437 ;; Parameters:    Size  Location     Type
  7438 ;;  RB6_Source      1    wreg     unsigned char 
  7439 ;; Auto vars:     Size  Location     Type
  7440 ;;  RB6_Source      1    0[COMRAM] unsigned char 
  7441 ;; Return value:  Size  Location     Type
  7442 ;;                  1    wreg      void 
  7443 ;; Registers used:
  7444 ;;		wreg, status,2, status,0
  7445 ;; Tracked objects:
  7446 ;;		On entry : 0/0
  7447 ;;		On exit  : 0/0
  7448 ;;		Unchanged: 0/0
  7449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7451 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7453 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7454 ;;Total ram usage:        1 bytes
  7455 ;; Hardware stack levels used: 1
  7456 ;; This function calls:
  7457 ;;		Nothing
  7458 ;; This function is called by:
  7459 ;;		_InterruptManager
  7460 ;; This function uses a non-reentrant model
  7461 ;;
  7462                           
  7463                           	psect	text45
  7464   003264                     __ptext45:
  7465                           	callstack 0
  7466   003264                     _RB6_ISR:
  7467                           	callstack 20
  7468                           
  7469                           ;incstack = 0
  7470                           ;RB6_ISR@RB6_Source stored from wreg
  7471   003264  6E01               	movwf	RB6_ISR@RB6_Source^0,c
  7472   003266                     
  7473                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 183:     (INTCONbits.RBIF = 0);
  7474   003266  90F2               	bcf	242,0,c	;volatile
  7475   003268                     
  7476                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 186:     if(0==RB6_Source)
  7477   003268  5001               	movf	RB6_ISR@RB6_Source^0,w,c
  7478   00326A  A4D8               	btfss	status,2,c
  7479   00326C  EF3A  F019         	goto	i2u505_41
  7480   003270  EF3C  F019         	goto	i2u505_40
  7481   003274                     i2u505_41:
  7482   003274  EF3E  F019         	goto	i2l6238
  7483   003278                     i2u505_40:
  7484   003278  EF3E  F019         	goto	i2l987
  7485   00327C                     i2l6238:
  7486   00327C                     i2l987:
  7487   00327C  0012               	return		;funcret
  7488   00327E                     __end_of_RB6_ISR:
  7489                           	callstack 0
  7490                           
  7491 ;; *************** function _RB5_ISR *****************
  7492 ;; Defined at:
  7493 ;;		line 152 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  7494 ;; Parameters:    Size  Location     Type
  7495 ;;  RB5_Source      1    wreg     unsigned char 
  7496 ;; Auto vars:     Size  Location     Type
  7497 ;;  RB5_Source      1    0[COMRAM] unsigned char 
  7498 ;; Return value:  Size  Location     Type
  7499 ;;                  1    wreg      void 
  7500 ;; Registers used:
  7501 ;;		wreg, status,2, status,0
  7502 ;; Tracked objects:
  7503 ;;		On entry : 0/0
  7504 ;;		On exit  : 0/0
  7505 ;;		Unchanged: 0/0
  7506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7508 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7510 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7511 ;;Total ram usage:        1 bytes
  7512 ;; Hardware stack levels used: 1
  7513 ;; This function calls:
  7514 ;;		Nothing
  7515 ;; This function is called by:
  7516 ;;		_InterruptManager
  7517 ;; This function uses a non-reentrant model
  7518 ;;
  7519                           
  7520                           	psect	text46
  7521   00327E                     __ptext46:
  7522                           	callstack 0
  7523   00327E                     _RB5_ISR:
  7524                           	callstack 20
  7525                           
  7526                           ;incstack = 0
  7527                           ;RB5_ISR@RB5_Source stored from wreg
  7528   00327E  6E01               	movwf	RB5_ISR@RB5_Source^0,c
  7529   003280                     
  7530                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 154:     (INTCONbits.RBIF = 0);
  7531   003280  90F2               	bcf	242,0,c	;volatile
  7532   003282                     
  7533                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 157:     if(0==RB5_Source)
  7534   003282  5001               	movf	RB5_ISR@RB5_Source^0,w,c
  7535   003284  A4D8               	btfss	status,2,c
  7536   003286  EF47  F019         	goto	i2u504_41
  7537   00328A  EF49  F019         	goto	i2u504_40
  7538   00328E                     i2u504_41:
  7539   00328E  EF4B  F019         	goto	i2l6224
  7540   003292                     i2u504_40:
  7541   003292  EF4B  F019         	goto	i2l976
  7542   003296                     i2l6224:
  7543   003296                     i2l976:
  7544   003296  0012               	return		;funcret
  7545   003298                     __end_of_RB5_ISR:
  7546                           	callstack 0
  7547                           
  7548 ;; *************** function _RB4_ISR *****************
  7549 ;; Defined at:
  7550 ;;		line 123 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  7551 ;; Parameters:    Size  Location     Type
  7552 ;;  RB4_Source      1    wreg     unsigned char 
  7553 ;; Auto vars:     Size  Location     Type
  7554 ;;  RB4_Source      1    0[COMRAM] unsigned char 
  7555 ;; Return value:  Size  Location     Type
  7556 ;;                  1    wreg      void 
  7557 ;; Registers used:
  7558 ;;		wreg, status,2, status,0
  7559 ;; Tracked objects:
  7560 ;;		On entry : 0/0
  7561 ;;		On exit  : 0/0
  7562 ;;		Unchanged: 0/0
  7563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7565 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7567 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7568 ;;Total ram usage:        1 bytes
  7569 ;; Hardware stack levels used: 1
  7570 ;; This function calls:
  7571 ;;		Nothing
  7572 ;; This function is called by:
  7573 ;;		_InterruptManager
  7574 ;; This function uses a non-reentrant model
  7575 ;;
  7576                           
  7577                           	psect	text47
  7578   003298                     __ptext47:
  7579                           	callstack 0
  7580   003298                     _RB4_ISR:
  7581                           	callstack 20
  7582                           
  7583                           ;incstack = 0
  7584                           ;RB4_ISR@RB4_Source stored from wreg
  7585   003298  6E01               	movwf	RB4_ISR@RB4_Source^0,c
  7586   00329A                     
  7587                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 125:     (INTCONbits.RBIF = 0);
  7588   00329A  90F2               	bcf	242,0,c	;volatile
  7589   00329C                     
  7590                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 128:     if(0==RB4_Source)
  7591   00329C  5001               	movf	RB4_ISR@RB4_Source^0,w,c
  7592   00329E  A4D8               	btfss	status,2,c
  7593   0032A0  EF54  F019         	goto	i2u503_41
  7594   0032A4  EF56  F019         	goto	i2u503_40
  7595   0032A8                     i2u503_41:
  7596   0032A8  EF58  F019         	goto	i2l6210
  7597   0032AC                     i2u503_40:
  7598   0032AC  EF58  F019         	goto	i2l965
  7599   0032B0                     i2l6210:
  7600   0032B0                     i2l965:
  7601   0032B0  0012               	return		;funcret
  7602   0032B2                     __end_of_RB4_ISR:
  7603                           	callstack 0
  7604                           
  7605 ;; *************** function _MSSP_I2C_ISR *****************
  7606 ;; Defined at:
  7607 ;;		line 353 in file "MCAL_layer/I2C/hal_i2c.c"
  7608 ;; Parameters:    Size  Location     Type
  7609 ;;		None
  7610 ;; Auto vars:     Size  Location     Type
  7611 ;;		None
  7612 ;; Return value:  Size  Location     Type
  7613 ;;                  1    wreg      void 
  7614 ;; Registers used:
  7615 ;;		None
  7616 ;; Tracked objects:
  7617 ;;		On entry : 0/0
  7618 ;;		On exit  : 0/0
  7619 ;;		Unchanged: 0/0
  7620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7625 ;;Total ram usage:        0 bytes
  7626 ;; Hardware stack levels used: 1
  7627 ;; This function calls:
  7628 ;;		Nothing
  7629 ;; This function is called by:
  7630 ;;		_InterruptManager
  7631 ;; This function uses a non-reentrant model
  7632 ;;
  7633                           
  7634                           	psect	text48
  7635   0032D6                     __ptext48:
  7636                           	callstack 0
  7637   0032D6                     _MSSP_I2C_ISR:
  7638                           	callstack 20
  7639   0032D6                     
  7640                           ;MCAL_layer/I2C/hal_i2c.c: 355:     (PIR1bits.SSPIF = 0);
  7641   0032D6  969E               	bcf	158,3,c	;volatile
  7642   0032D8  0012               	return		;funcret
  7643   0032DA                     __end_of_MSSP_I2C_ISR:
  7644                           	callstack 0
  7645                           
  7646 ;; *************** function _MSSP_I2C_BC_ISR *****************
  7647 ;; Defined at:
  7648 ;;		line 369 in file "MCAL_layer/I2C/hal_i2c.c"
  7649 ;; Parameters:    Size  Location     Type
  7650 ;;		None
  7651 ;; Auto vars:     Size  Location     Type
  7652 ;;		None
  7653 ;; Return value:  Size  Location     Type
  7654 ;;                  1    wreg      void 
  7655 ;; Registers used:
  7656 ;;		None
  7657 ;; Tracked objects:
  7658 ;;		On entry : 0/0
  7659 ;;		On exit  : 0/0
  7660 ;;		Unchanged: 0/0
  7661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7666 ;;Total ram usage:        0 bytes
  7667 ;; Hardware stack levels used: 1
  7668 ;; This function calls:
  7669 ;;		Nothing
  7670 ;; This function is called by:
  7671 ;;		_InterruptManager
  7672 ;; This function uses a non-reentrant model
  7673 ;;
  7674                           
  7675                           	psect	text49
  7676   0032DA                     __ptext49:
  7677                           	callstack 0
  7678   0032DA                     _MSSP_I2C_BC_ISR:
  7679                           	callstack 20
  7680   0032DA                     
  7681                           ;MCAL_layer/I2C/hal_i2c.c: 371:     (PIR2bits.BCLIF = 0);
  7682   0032DA  96A1               	bcf	161,3,c	;volatile
  7683   0032DC  0012               	return		;funcret
  7684   0032DE                     __end_of_MSSP_I2C_BC_ISR:
  7685                           	callstack 0
  7686                           
  7687 ;; *************** function _INT2_ISR *****************
  7688 ;; Defined at:
  7689 ;;		line 107 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  7690 ;; Parameters:    Size  Location     Type
  7691 ;;		None
  7692 ;; Auto vars:     Size  Location     Type
  7693 ;;		None
  7694 ;; Return value:  Size  Location     Type
  7695 ;;                  1    wreg      void 
  7696 ;; Registers used:
  7697 ;;		None
  7698 ;; Tracked objects:
  7699 ;;		On entry : 0/0
  7700 ;;		On exit  : 0/0
  7701 ;;		Unchanged: 0/0
  7702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7707 ;;Total ram usage:        0 bytes
  7708 ;; Hardware stack levels used: 1
  7709 ;; This function calls:
  7710 ;;		Nothing
  7711 ;; This function is called by:
  7712 ;;		_InterruptManager
  7713 ;; This function uses a non-reentrant model
  7714 ;;
  7715                           
  7716                           	psect	text50
  7717   0032DE                     __ptext50:
  7718                           	callstack 0
  7719   0032DE                     _INT2_ISR:
  7720                           	callstack 20
  7721   0032DE                     
  7722                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 109:     (INTCON3bits.INT2IF = 0);
  7723   0032DE  92F0               	bcf	240,1,c	;volatile
  7724   0032E0  0012               	return		;funcret
  7725   0032E2                     __end_of_INT2_ISR:
  7726                           	callstack 0
  7727                           
  7728 ;; *************** function _INT1_ISR *****************
  7729 ;; Defined at:
  7730 ;;		line 92 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  7731 ;; Parameters:    Size  Location     Type
  7732 ;;		None
  7733 ;; Auto vars:     Size  Location     Type
  7734 ;;		None
  7735 ;; Return value:  Size  Location     Type
  7736 ;;                  1    wreg      void 
  7737 ;; Registers used:
  7738 ;;		None
  7739 ;; Tracked objects:
  7740 ;;		On entry : 0/0
  7741 ;;		On exit  : 0/0
  7742 ;;		Unchanged: 0/0
  7743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7748 ;;Total ram usage:        0 bytes
  7749 ;; Hardware stack levels used: 1
  7750 ;; This function calls:
  7751 ;;		Nothing
  7752 ;; This function is called by:
  7753 ;;		_InterruptManager
  7754 ;; This function uses a non-reentrant model
  7755 ;;
  7756                           
  7757                           	psect	text51
  7758   0032E2                     __ptext51:
  7759                           	callstack 0
  7760   0032E2                     _INT1_ISR:
  7761                           	callstack 20
  7762   0032E2                     
  7763                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 94:     (INTCON3bits.INT1IF = 0);
  7764   0032E2  90F0               	bcf	240,0,c	;volatile
  7765   0032E4  0012               	return		;funcret
  7766   0032E6                     __end_of_INT1_ISR:
  7767                           	callstack 0
  7768                           
  7769 ;; *************** function _INT0_ISR *****************
  7770 ;; Defined at:
  7771 ;;		line 77 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  7772 ;; Parameters:    Size  Location     Type
  7773 ;;		None
  7774 ;; Auto vars:     Size  Location     Type
  7775 ;;		None
  7776 ;; Return value:  Size  Location     Type
  7777 ;;                  1    wreg      void 
  7778 ;; Registers used:
  7779 ;;		None
  7780 ;; Tracked objects:
  7781 ;;		On entry : 0/0
  7782 ;;		On exit  : 0/0
  7783 ;;		Unchanged: 0/0
  7784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7788 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7789 ;;Total ram usage:        0 bytes
  7790 ;; Hardware stack levels used: 1
  7791 ;; This function calls:
  7792 ;;		Nothing
  7793 ;; This function is called by:
  7794 ;;		_InterruptManager
  7795 ;; This function uses a non-reentrant model
  7796 ;;
  7797                           
  7798                           	psect	text52
  7799   0032E6                     __ptext52:
  7800                           	callstack 0
  7801   0032E6                     _INT0_ISR:
  7802                           	callstack 20
  7803   0032E6                     
  7804                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 79:     (INTCONbits.INT0IF = 0);
  7805   0032E6  92F2               	bcf	242,1,c	;volatile
  7806   0032E8  0012               	return		;funcret
  7807   0032EA                     __end_of_INT0_ISR:
  7808                           	callstack 0
  7809                           
  7810                           	psect	rparam
  7811   000000                     
  7812                           	psect	temp
  7813   00007E                     btemp:
  7814                           	callstack 0
  7815   00007E                     	ds	1
  7816   000000                     int$flags	set	btemp
  7817   000000                     wtemp8	set	btemp+1
  7818   000000                     ttemp5	set	btemp+1
  7819   000000                     ttemp6	set	btemp+4
  7820   000000                     ttemp7	set	btemp+8
  7821                           
  7822                           	psect	config
  7823                           
  7824                           ; Padding undefined space
  7825   300000                     	org	3145728
  7826   300000  FF                 	db	255
  7827                           
  7828                           ;Config register CONFIG1H @ 0x300001
  7829                           ;	Oscillator Selection bits
  7830                           ;	OSC = HS, HS oscillator
  7831                           ;	Fail-Safe Clock Monitor Enable bit
  7832                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  7833                           ;	Internal/External Oscillator Switchover bit
  7834                           ;	IESO = OFF, Oscillator Switchover mode disabled
  7835   300001                     	org	3145729
  7836   300001  02                 	db	2
  7837                           
  7838                           ;Config register CONFIG2L @ 0x300002
  7839                           ;	Power-up Timer Enable bit
  7840                           ;	PWRT = OFF, PWRT disabled
  7841                           ;	Brown-out Reset Enable bits
  7842                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  7843                           ;	Brown Out Reset Voltage bits
  7844                           ;	BORV = 1, 
  7845   300002                     	org	3145730
  7846   300002  09                 	db	9
  7847                           
  7848                           ;Config register CONFIG2H @ 0x300003
  7849                           ;	Watchdog Timer Enable bit
  7850                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  7851                           ;	Watchdog Timer Postscale Select bits
  7852                           ;	WDTPS = 32768, 1:32768
  7853   300003                     	org	3145731
  7854   300003  1E                 	db	30
  7855                           
  7856                           ; Padding undefined space
  7857   300004                     	org	3145732
  7858   300004  FF                 	db	255
  7859                           
  7860                           ;Config register CONFIG3H @ 0x300005
  7861                           ;	CCP2 MUX bit
  7862                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  7863                           ;	PORTB A/D Enable bit
  7864                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  7865                           ;	Low-Power Timer1 Oscillator Enable bit
  7866                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  7867                           ;	MCLR Pin Enable bit
  7868                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  7869   300005                     	org	3145733
  7870   300005  81                 	db	129
  7871                           
  7872                           ;Config register CONFIG4L @ 0x300006
  7873                           ;	Stack Full/Underflow Reset Enable bit
  7874                           ;	STVREN = ON, Stack full/underflow will cause Reset
  7875                           ;	Single-Supply ICSP Enable bit
  7876                           ;	LVP = OFF, Single-Supply ICSP disabled
  7877                           ;	Extended Instruction Set Enable bit
  7878                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  7879                           ;	Background Debugger Enable bit
  7880                           ;	DEBUG = 0x1, unprogrammed default
  7881   300006                     	org	3145734
  7882   300006  81                 	db	129
  7883                           
  7884                           ; Padding undefined space
  7885   300007                     	org	3145735
  7886   300007  FF                 	db	255
  7887                           
  7888                           ;Config register CONFIG5L @ 0x300008
  7889                           ;	Code Protection bit
  7890                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  7891                           ;	Code Protection bit
  7892                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  7893                           ;	Code Protection bit
  7894                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  7895                           ;	Code Protection bit
  7896                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  7897   300008                     	org	3145736
  7898   300008  0F                 	db	15
  7899                           
  7900                           ;Config register CONFIG5H @ 0x300009
  7901                           ;	Boot Block Code Protection bit
  7902                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  7903                           ;	Data EEPROM Code Protection bit
  7904                           ;	CPD = OFF, Data EEPROM not code-protected
  7905   300009                     	org	3145737
  7906   300009  C0                 	db	192
  7907                           
  7908                           ;Config register CONFIG6L @ 0x30000A
  7909                           ;	Write Protection bit
  7910                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  7911                           ;	Write Protection bit
  7912                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  7913                           ;	Write Protection bit
  7914                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  7915                           ;	Write Protection bit
  7916                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  7917   30000A                     	org	3145738
  7918   30000A  0F                 	db	15
  7919                           
  7920                           ;Config register CONFIG6H @ 0x30000B
  7921                           ;	Configuration Register Write Protection bit
  7922                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  7923                           ;	Boot Block Write Protection bit
  7924                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  7925                           ;	Data EEPROM Write Protection bit
  7926                           ;	WRTD = OFF, Data EEPROM not write-protected
  7927   30000B                     	org	3145739
  7928   30000B  E0                 	db	224
  7929                           
  7930                           ;Config register CONFIG7L @ 0x30000C
  7931                           ;	Table Read Protection bit
  7932                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  7933                           ;	Table Read Protection bit
  7934                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  7935                           ;	Table Read Protection bit
  7936                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  7937                           ;	Table Read Protection bit
  7938                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  7939   30000C                     	org	3145740
  7940   30000C  0F                 	db	15
  7941                           
  7942                           ;Config register CONFIG7H @ 0x30000D
  7943                           ;	Boot Block Table Read Protection bit
  7944                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  7945   30000D                     	org	3145741
  7946   30000D  40                 	db	64
  7947                           tosu	equ	0xFFF
  7948                           tosh	equ	0xFFE
  7949                           tosl	equ	0xFFD
  7950                           stkptr	equ	0xFFC
  7951                           pclatu	equ	0xFFB
  7952                           pclath	equ	0xFFA
  7953                           pcl	equ	0xFF9
  7954                           tblptru	equ	0xFF8
  7955                           tblptrh	equ	0xFF7
  7956                           tblptrl	equ	0xFF6
  7957                           tablat	equ	0xFF5
  7958                           prodh	equ	0xFF4
  7959                           prodl	equ	0xFF3
  7960                           indf0	equ	0xFEF
  7961                           postinc0	equ	0xFEE
  7962                           postdec0	equ	0xFED
  7963                           preinc0	equ	0xFEC
  7964                           plusw0	equ	0xFEB
  7965                           fsr0h	equ	0xFEA
  7966                           fsr0l	equ	0xFE9
  7967                           wreg	equ	0xFE8
  7968                           indf1	equ	0xFE7
  7969                           postinc1	equ	0xFE6
  7970                           postdec1	equ	0xFE5
  7971                           preinc1	equ	0xFE4
  7972                           plusw1	equ	0xFE3
  7973                           fsr1h	equ	0xFE2
  7974                           fsr1l	equ	0xFE1
  7975                           bsr	equ	0xFE0
  7976                           indf2	equ	0xFDF
  7977                           postinc2	equ	0xFDE
  7978                           postdec2	equ	0xFDD
  7979                           preinc2	equ	0xFDC
  7980                           plusw2	equ	0xFDB
  7981                           fsr2h	equ	0xFDA
  7982                           fsr2l	equ	0xFD9
  7983                           status	equ	0xFD8

Data Sizes:
    Strings     52
    Constant    16
    Data        56
    BSS         122
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     96     125
    BANK0           128      0     117
    BANK1           256      0      32
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S4377$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 11
		 -> convert_uint32_to_string@Tempstr(COMRAM[11]), convert_uint16_to_string@Tempstr(COMRAM[6]), convert_uint8_to_string@Tempstr(COMRAM[4]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S4324$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S4324$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    memset@dest	PTR void  size(2) Largest target is 7
		 -> Resultstr2(BANK0[7]), Resultstr1(BANK0[7]), 

    memset@s	PTR unsigned char  size(2) Largest target is 7
		 -> Resultstr2(BANK0[7]), Resultstr1(BANK0[7]), 

    EUSART_ASYNC_RX_Initialize@_eusart.EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_RX_Initialize@_eusart.EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_RX_Initialize@_eusart.EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_RX_Initialize@_eusart.EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_TX_Initialize@_eusart.EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_TX_Initialize@_eusart.EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_TX_Initialize@_eusart.EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_TX_Initialize@_eusart.EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S3375$EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Baud_Rate_Calculation@_eusart.EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    S3375$EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Baud_Rate_Calculation@_eusart.EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    S3375$EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Baud_Rate_Calculation@_eusart.EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S3375$EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Baud_Rate_Calculation@_eusart.EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_SetInterruptHandler@INTx_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Clear_Flag@INTx_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Pin_Initialize@INTx_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Edge_Initialize@INTx_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Disable@INTx_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S2109$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Enable@INTx_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S2225$EXT_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_initialize@RBx_obj.EXT_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    S2225$EXT_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_initialize@RBx_obj.EXT_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    RB7_InterruptHandler_Low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_InterruptHandler_High	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandler_Low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandler_High	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandler_Low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandler_High	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB4_InterruptHandler_Low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB4_InterruptHandler_High	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    I2C_Slave_Mode_Configurations@_i2c.I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    I2C_Slave_Mode_Configurations@_i2c.I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    I2C_Slave_Mode_Configurations@_i2c.I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    I2C_Report_Receive_Overflow_InterruptHandle	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    I2C_DefaultInterruptHandle	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    I2C_Interrupt_Configurations@_i2c.I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    I2C_Interrupt_Configurations@_i2c.I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    I2C_Interrupt_Configurations@_i2c.I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    I2C_Report_Write_Collision_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    I2C_Master_Mode_Clock_Configurations@_i2c.I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    I2C_Master_Mode_Clock_Configurations@_i2c.I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    I2C_Master_Mode_Clock_Configurations@_i2c.I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    S1497$I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    I2C_Initialize@_i2c.I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    S1497$I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    I2C_Initialize@_i2c.I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S1497$I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    I2C_Initialize@_i2c.I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    gpio_pin_intialize@_pin_config	PTR const struct . size(2) Largest target is 6
		 -> dc_motor_02.dc_motor_pin(BANK0[2]), dc_motor_02(BANK0[2]), dc_motor_01.dc_motor_pin(BANK0[2]), dc_motor_01(BANK0[2]), 
		 -> LCD1.lcd_data_pins(BANK0[4]), LCD1(BANK0[6]), relay_initialize@relay_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(2) Largest target is 6
		 -> dc_motor_02.dc_motor_pin(BANK0[2]), dc_motor_02(BANK0[2]), dc_motor_01.dc_motor_pin(BANK0[2]), dc_motor_01(BANK0[2]), 
		 -> LCD1.lcd_data_pins(BANK0[4]), LCD1(BANK0[6]), relay_turn_off@relay_obj(COMRAM[1]), relay_turn_on@relay_obj(COMRAM[1]), 
		 -> relay_initialize@relay_obj(COMRAM[1]), led_turn_off@pin_obj(COMRAM[1]), led_turn_on@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_direction_intialize@_pin_config	PTR const struct . size(2) Largest target is 6
		 -> MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_SS(COMRAM[1]), MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_CLK(COMRAM[1]), MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_SDI(COMRAM[1]), MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_SDO(COMRAM[1]), 
		 -> MSSP_SPI_Master_Mode_GPIO_PIN_Configurations@SPI_CLK(COMRAM[1]), MSSP_SPI_Master_Mode_GPIO_PIN_Configurations@SPI_SDI(COMRAM[1]), MSSP_SPI_Master_Mode_GPIO_PIN_Configurations@SPI_SDO(COMRAM[1]), dc_motor_02.dc_motor_pin(BANK0[2]), 
		 -> dc_motor_02(BANK0[2]), dc_motor_01.dc_motor_pin(BANK0[2]), dc_motor_01(BANK0[2]), LCD1.lcd_data_pins(BANK0[4]), 
		 -> LCD1(BANK0[6]), relay_initialize@relay_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRllll[1]), PORTD(BITBIGSFRllll[1]), PORTC(BITBIGSFRllll[1]), PORTB(BITBIGSFRllll[1]), 
		 -> PORTA(BITBIGSFRllll[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRlllh[1]), LATD(BITBIGSFRlllh[1]), LATC(BITBIGSFRlllh[1]), LATB(BITBIGSFRlllh[1]), 
		 -> LATA(BITBIGSFRllll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISD(ABS[1]), TRISC(ABS[1]), TRISB(ABS[1]), TRISE(ABS[1]), 
		 -> TRISA(BITBIGSFRllll[1]), 

    configure_voltage_reference@ADC_obj	PTR const struct . size(2) Largest target is 4
		 -> ADC1(BANK0[4]), 

    select_result_format@ADC_obj	PTR const struct . size(2) Largest target is 4
		 -> ADC1(BANK0[4]), 

    ADC_Get_Conversion_Blocking@Conversion_Result	PTR unsigned short  size(2) Largest target is 2
		 -> lm35_res_2(COMRAM[2]), lm35_res_1(COMRAM[2]), 

    ADC_Get_Conversion_Blocking@ADC_obj	PTR const struct . size(2) Largest target is 4
		 -> ADC1(BANK0[4]), 

    ADC_Get_Conversion_Result@Conversion_Result	PTR unsigned short  size(2) Largest target is 2
		 -> lm35_res_2(COMRAM[2]), lm35_res_1(COMRAM[2]), 

    ADC_Get_Conversion_Result@ADC_obj	PTR const struct . size(2) Largest target is 4
		 -> ADC1(BANK0[4]), 

    ADC_Start_Conversion@ADC_obj	PTR const struct . size(2) Largest target is 4
		 -> ADC1(BANK0[4]), 

    ADC_Selsect_Channel@ADC_obj	PTR const struct . size(2) Largest target is 4
		 -> ADC1(BANK0[4]), 

    ADC_initialize@ADC_obj	PTR const struct . size(2) Largest target is 4
		 -> ADC1(BANK0[4]), 

    dc_motor_stop@_dc_motor	PTR const struct . size(2) Largest target is 2
		 -> dc_motor_02(BANK0[2]), dc_motor_01(BANK0[2]), 

    dc_motor_move_left@_dc_motor	PTR const struct . size(2) Largest target is 2
		 -> dc_motor_02(BANK0[2]), dc_motor_01(BANK0[2]), 

    dc_motor_initialize@_dc_motor	PTR const struct . size(2) Largest target is 2
		 -> dc_motor_02(BANK0[2]), dc_motor_01(BANK0[2]), 

    lcd_4bit_set_cursor@lcd	PTR const struct . size(2) Largest target is 6
		 -> LCD1(BANK0[6]), 

    lcd_4bit_send_enable_signal@lcd	PTR const struct . size(2) Largest target is 6
		 -> LCD1(BANK0[6]), 

    lcd_send_4bit@lcd	PTR const struct . size(2) Largest target is 6
		 -> LCD1(BANK0[6]), 

    sp__memset	PTR void  size(2) Largest target is 7
		 -> Resultstr2(BANK0[7]), Resultstr1(BANK0[7]), 

    convert_uint8_to_string@str	PTR unsigned char  size(2) Largest target is 7
		 -> Resultstr2(BANK0[7]), Resultstr1(BANK0[7]), 

    lcd_4bit_send_string_pos@str	PTR unsigned char  size(2) Largest target is 12
		 -> Resultstr2(BANK0[7]), Resultstr1(BANK0[7]), STR_10(CODE[8]), STR_9(CODE[8]), 
		 -> STR_8(CODE[11]), STR_7(CODE[11]), STR_6(CODE[7]), STR_5(CODE[11]), 
		 -> STR_4(CODE[12]), 

    lcd_4bit_send_string_pos@lcd	PTR const struct . size(2) Largest target is 6
		 -> LCD1(BANK0[6]), 

    lcd_4bit_send_string@str	PTR unsigned char  size(2) Largest target is 12
		 -> Resultstr2(BANK0[7]), Resultstr1(BANK0[7]), STR_10(CODE[8]), STR_9(CODE[8]), 
		 -> STR_8(CODE[11]), STR_7(CODE[11]), STR_6(CODE[7]), STR_5(CODE[11]), 
		 -> STR_4(CODE[12]), 

    lcd_4bit_send_string@lcd	PTR const struct . size(2) Largest target is 6
		 -> LCD1(BANK0[6]), 

    lcd_4bit_send_char_data@lcd	PTR const struct . size(2) Largest target is 6
		 -> LCD1(BANK0[6]), 

    lcd_4bit_send_command@lcd	PTR const struct . size(2) Largest target is 6
		 -> LCD1(BANK0[6]), 

    lcd_4bit_initialize@lcd	PTR const struct . size(2) Largest target is 6
		 -> LCD1(BANK0[6]), 


Critical Paths under _main in COMRAM

    _main->_convert_uint8_to_string
    _lcd_4bit_send_string_pos->_lcd_4bit_set_cursor
    _lcd_4bit_set_cursor->_lcd_4bit_send_command
    _lcd_4bit_send_string->_lcd_4bit_send_char_data
    _lcd_4bit_send_char_data->_lcd_send_4bit
    _dc_motor_stop->_gpio_pin_write_logic
    _dc_motor_move_left->_gpio_pin_write_logic
    _convert_uint8_to_string->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _mcal_layer_intialize->_ADC_initialize
    _ADC_initialize->_adc_input_channel_port_configure
    _ecu_layer_intialize->_lcd_4bit_initialize
    _lcd_4bit_initialize->_lcd_4bit_send_command
    _lcd_4bit_send_command->_lcd_send_4bit
    _lcd_send_4bit->_gpio_pin_write_logic
    _lcd_4bit_send_enable_signal->_gpio_pin_write_logic
    _dc_motor_initialize->_gpio_pin_intialize
    _gpio_pin_intialize->_gpio_pin_write_logic
    ___fltol->___flmul
    ___flmul->___xxtofl
    _ADC_Get_Conversion_Blocking->_ADC_Get_Conversion_Result
    _ADC_Selsect_Channel->_adc_input_channel_port_configure

Critical Paths under _InterruptManager in COMRAM

    _InterruptManager->_RB4_ISR
    _InterruptManager->_RB5_ISR
    _InterruptManager->_RB6_ISR
    _InterruptManager->_RB7_ISR

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  116132
                                             94 COMRAM     2     2      0
        _ADC_Get_Conversion_Blocking
                            ___flmul
                            ___fltol
                            ___lwdiv
                           ___xxtofl
              _application_intialize
            _convert_uint8_to_string
                 _dc_motor_move_left
                      _dc_motor_stop
              _lcd_4bit_send_command
           _lcd_4bit_send_string_pos
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_string_pos                             7     1      6   38854
                                             26 COMRAM     7     1      6
               _lcd_4bit_send_string
                _lcd_4bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_set_cursor                                  7     3      4   19176
                                             19 COMRAM     7     3      4
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_string                                 5     1      4   16784
                                             19 COMRAM     5     1      4
            _lcd_4bit_send_char_data
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_char_data                              4     1      3   16518
                                             15 COMRAM     4     1      3
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                      _lcd_send_4bit
 ---------------------------------------------------------------------------------
 (1) _dc_motor_stop                                        3     1      2    5119
                                             11 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _dc_motor_move_left                                   3     1      2    5119
                                             11 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _convert_uint8_to_string                              9     7      2    7681
                                             85 COMRAM     9     7      2
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             24    16      8    5851
                                             63 COMRAM    22    14      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    5196
                                             55 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           19    13      6    4846
                                             41 COMRAM    14     8      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                13     9      4    3626
                                             28 COMRAM    13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    1999
                                             17 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4     931
                                             10 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     682
                                              1 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                              7 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     452
                                              1 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _memset                                              12     6      6    1403
                                              1 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (1) _application_intialize                                0     0      0   34395
                _ecu_layer_intialize
               _mcal_layer_intialize
 ---------------------------------------------------------------------------------
 (2) _mcal_layer_intialize                                 1     1      0     518
                     _ADC_initialize
 ---------------------------------------------------------------------------------
 (3) _ADC_initialize                                       4     2      2     516
                                              4 COMRAM     4     2      2
   _adc_input_channel_port_configure
        _configure_voltage_reference
               _select_result_format
 ---------------------------------------------------------------------------------
 (4) _select_result_format                                 2     0      2     120
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _configure_voltage_reference                          2     0      2     120
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ecu_layer_intialize                                  1     1      0   33877
                _dc_motor_initialize
                _lcd_4bit_initialize
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_initialize                                  6     4      2   26295
                                             19 COMRAM     6     4      2
                 _gpio_pin_intialize
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_command                                4     1      3   18494
                                             15 COMRAM     4     1      3
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                      _lcd_send_4bit
 ---------------------------------------------------------------------------------
 (4) _lcd_send_4bit                                        4     1      3    5702
                                             11 COMRAM     4     1      3
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _lcd_4bit_send_enable_signal                          3     1      2    5264
                                             11 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _dc_motor_initialize                                  3     1      2    7578
                                             15 COMRAM     3     1      2
                 _gpio_pin_intialize
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_intialize                                   4     2      2    7334
                                             11 COMRAM     4     2      2
       _gpio_pin_direction_intialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_write_logic                                10     7      3    4891
                                              1 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_direction_intialize                         9     7      2    1015
                                              1 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4    1310
                                              1 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     466
                                              1 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     685
                                             40 COMRAM    10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    2656
                                             15 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _ADC_Get_Conversion_Blocking                          6     1      5    1353
                                             10 COMRAM     6     1      5
          _ADC_Get_Conversion_Result
                _ADC_Selsect_Channel
               _ADC_Start_Conversion
 ---------------------------------------------------------------------------------
 (2) _ADC_Start_Conversion                                 3     1      2     122
                                              1 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Selsect_Channel                                  5     2      3     264
                                              4 COMRAM     5     2      3
   _adc_input_channel_port_configure
 ---------------------------------------------------------------------------------
 (4) _adc_input_channel_port_configure                     3     3      0      22
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Get_Conversion_Result                            9     5      4     330
                                              1 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptManager                                    0     0      0     176
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
                    _MSSP_I2C_BC_ISR
                       _MSSP_I2C_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
 ---------------------------------------------------------------------------------
 (11) _RB7_ISR                                             1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _RB6_ISR                                             1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _RB5_ISR                                             1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _RB4_ISR                                             1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _MSSP_I2C_ISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _MSSP_I2C_BC_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _INT2_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _INT1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _INT0_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Get_Conversion_Blocking
     _ADC_Get_Conversion_Result
     _ADC_Selsect_Channel
       _adc_input_channel_port_configure
     _ADC_Start_Conversion
   ___flmul
     ___xxtofl (ARG)
   ___fltol
     ___flmul (ARG)
     ___xxtofl (ARG)
   ___lwdiv
   ___xxtofl
   _application_intialize
     _ecu_layer_intialize
       _dc_motor_initialize
         _gpio_pin_intialize
           _gpio_pin_direction_intialize
           _gpio_pin_write_logic
       _lcd_4bit_initialize
         _gpio_pin_intialize
         _lcd_4bit_send_command
           _gpio_pin_write_logic
           _lcd_4bit_send_enable_signal
             _gpio_pin_write_logic
           _lcd_send_4bit
             _gpio_pin_write_logic
     _mcal_layer_intialize
       _ADC_initialize
         _adc_input_channel_port_configure
         _configure_voltage_reference
         _select_result_format
   _convert_uint8_to_string
     _memset
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
   _dc_motor_move_left
     _gpio_pin_write_logic
   _dc_motor_stop
     _gpio_pin_write_logic
   _lcd_4bit_send_command
   _lcd_4bit_send_string_pos
     _lcd_4bit_send_string
       _lcd_4bit_send_char_data
         _gpio_pin_write_logic
         _lcd_4bit_send_enable_signal
         _lcd_send_4bit
     _lcd_4bit_set_cursor
       _lcd_4bit_send_command

 _InterruptManager (ROOT)
   _INT0_ISR
   _INT1_ISR
   _INT2_ISR
   _MSSP_I2C_BC_ISR
   _MSSP_I2C_ISR
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      49        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      20       7       12.5%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      75       5       91.4%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     60      7D       1       99.2%
BITBIGSFRhhhllh     18      0       0      38        0.0%
BITBIGSFRhhhh        D      0       0      37        0.0%
BITBIGSFRllhhll      6      0       0      46        0.0%
BITBIGSFRhhhlll      5      0       0      39        0.0%
BITBIGSFRllhhll      4      0       0      43        0.0%
BITBIGSFRllhhll      4      0       0      44        0.0%
BITBIGSFRlllh        4      0       0      47        0.0%
BITBIGSFRllll        4      0       0      48        0.0%
BITBIGSFRllhhll      1      0       0      42        0.0%
BITBIGSFRllhhll      1      0       0      45        0.0%
BITBIGSFRllhhlh      1      0       0      41        0.0%
BITBIGSFRllhhh       1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     112      12        0.0%
DATA                 0      0     112       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sun Jan 07 18:50:07 2024

                               ??_InterruptManager 0002                       ADC_Get_Conversion_Result@ret 000A  
                                   ?_lcd_send_4bit 000C                                        _SSPSTATbits 0FC7  
                                               l71 215C                                                 l81 2CFA  
                                               l76 2D6C                                                 l94 2B26  
                                               l99 2FDC                                       ___awdiv@sign 0007  
                                              l201 29F8                                                l220 3162  
                                              l230 30E4                                                l162 28A0  
                                              l235 30A4                                                l405 2C62  
                                              l408 2C88                                                l432 3062  
                                              l185 2EAE                                                l338 3224  
                                              l442 2F88                                                l434 3064  
                                              l427 2592                                                l363 2A18  
                                              l380 3248                                                l188 31D2  
                                              l445 2F90                                                l365 2A9C  
                                              l438 2F66                                                l375 319C  
                                              l447 2F94                                                l378 3244  
                                              l398 2722                                                l659 2022  
                                              l678 23B4                                                l699 2E46  
              __end_of_configure_voltage_reference 2F96                        _configure_voltage_reference 2F4C  
                                              _PR2 0FCB                                                _abs 30E6  
                                              _pad 2B28                                                _ret 0072  
              __end_of_lcd_4bit_send_enable_signal 31D4                        _lcd_4bit_send_enable_signal 319E  
                                     ___awmod@sign 0007                                led_initialize@F3042 006D  
                                              prod 0FF3                              relay_initialize@F3036 0069  
                                              wreg 0FE8                          _RB5_InterruptHandler_High 00A9  
                                     ___flmul@aexp 0021                                       ___flmul@bexp 0022  
                                     ___flmul@sign 001C                                       ___flmul@temp 0027  
                                     ___flmul@prod 0023                                    __end_of_RB4_ISR 32B2  
                                  __end_of_RB5_ISR 3298                                    __end_of_RB6_ISR 327E  
                                  __end_of_RB7_ISR 3264                                       ___fltol@exp1 0032  
                                             ?_abs 0008                                               l2142 2C14  
                                             l2302 1BD2                                               l2135 2C0C  
                                             l2313 1B6A                                               l2306 1B0E  
                                             l2420 32EA                                               l2332 2F4A  
                                             l2262 146E                                               l2319 1EDE  
                                             l2265 1300                                               l1641 32D4  
                                             l2409 265C                                               l2417 3020  
                                             l2258 110A                                               l2354 2B4A  
                                             l2275 1430                                               l2267 1378  
                                             l2363 1C1C                                               l2268 1366  
                                             l2365 1C24                                               l2358 2BA0  
                                             l2366 1C6A                                               l2390 2EFE  
                                             _ADC1 00ED                                               l6000 322A  
                                             l1584 32BE                                               l2384 2288  
                                             l2377 1D68                                               l6010 2662  
                                             l6002 323C                                               l2394 311C  
                                             l2299 1A76                                               l6020 26D0  
                                             l6012 2674                                               l6004 3246  
                                             l1941 24BA                                               l2397 3124  
                                             l6022 26EA                                               l6014 2686  
                                             l6030 32B2                                               l6016 268E  
                                             l6008 265E                                               l6032 32B2  
                                             l6120 281C                                               l6018 26A8  
                                             l6026 2720                                               l5410 2594  
                                             l6130 2882                                               l6122 2838  
                                             l6114 27EA                                               l6050 2FA8  
                                             l1875 27E6                                               l6300 1052  
                                             l5500 28A2                                               l5420 2616  
                                             l5412 25A6                                               l6124 2846  
                                             l6132 289E                                               l6116 2802  
                                             l6140 30B8                                               l6052 2FB0  
                                             l6310 1092                                               l6302 1060  
                                             l5510 28CE                                               l5502 28A6  
                                             l5414 25B8                                               l5430 3000  
                                             l6126 2864                                               l6118 2814  
                                             l6142 30BC                                               l6150 3078  
                                             l6054 2FC4                                               l6046 2F96  
                                             ?_pad 0012                                               l6160 2C28  
                                             l6400 1394                                               l6320 10C2  
                                             l6312 1098                                               l6304 1062  
                                             l5440 22CA                                               l5432 228A  
                                             l1888 2950                                               l5520 2906  
                                             l5512 28D6                                               l5504 28B4  
                                             l5416 25C2                                               l5424 2FDE  
                                             l6128 2880                                               l6136 30A6  
                                             l6152 307C                                               l6056 2FDA  
                                             l6048 2F96                                               l6162 2C3A  
                                             l6410 13FE                                               l6402 13A2  
                                             l6330 10FA                                               l6322 10C4  
                                             l6314 10A8                                               l6306 1072  
                                             l5442 232C                                               l5434 228E  
                                             l5530 2940                                               l5522 291C  
                                             l5514 28E8                                               l5506 28BC  
                                             l5418 25E0                                               l5426 2FEA  
                                             l5610 1C10                                               l5602 1BD4  
                                             l6138 30A6                                               l6146 3066  
                                             l5700 24FE                                               l6164 2C42  
                                             l6156 2C16                                               l6420 1454  
                                             l6412 1418                                               l6404 13CC  
                                             l6340 114A                                               l6332 111A  
                                             l6324 10D4                                               l6316 10AE  
                                             l6308 1082                                               l6500 1A86  
                                             l5436 22A0                                               l5460 2736  
                                             l5532 2948                                               l5524 2924  
                                             l5516 28F0                                               l5508 28C0  
                                             l5428 2FFC                                               l5540 2B42  
                                             l5620 1C5E                                               l5612 1C2C  
                                             l5604 1BE8                                               l6148 3066  
                                             l5702 2504                                               l6166 2C70  
                                             l6158 2C16                                               l6414 1434  
                                             l6422 145A                                               l6406 13D0  
                                             l6350 119A                                               l6342 1154  
                                             l6334 112A                                               l6326 10E4  
                                             l6318 10B4                                               l6430 23CC  
                                             l6510 1AC4                                               l6502 1A9C  
                                             l5446 2388                                               l5438 22C2  
                                             l5470 275C                                               l5462 273E  
                                             l5526 292A                                               l5518 28F8  
                                             l5550 30E6                                               l5542 2B56  
                                             l5630 1CB4                                               l5622 1C66  
                                             l5614 1C3C                                               l5606 1BF8  
                                             l5704 250A                                               l6168 2C86  
                                             l6424 145E                                               l6416 1444  
                                             l6408 13EA                                               l6360 11DC  
                                             l6352 11A6                                               l6344 116A  
                                             l6328 10F4                                               l6440 241C  
                                             l6520 1B4C                                               l6512 1AF6  
                                             l5560 1F18                                               l5448 23B2  
                                             l5720 305C                                               l5480 2794  
                                             l5472 2764                                               l5464 2742  
                                             l5456 2724                                               l5528 2930  
                                             l5552 3100                                               l5544 2B6A  
                                             l5536 2B28                                               l5640 1D08  
                                             l5632 1CBA                                               l5624 1C72  
                                             l5616 1C42                                               l5608 1C00  
                                             l6418 1452                                               l6370 123E  
                                             l6362 11EC                                               l6354 11B4  
                                             l6346 1176                                               l6338 113E  
                                             l6450 2446                                               l6442 2420  
                                             l6434 23E0                                               l6530 1BA2  
                                             l6522 1B5A                                               l6514 1AF8  
                                             l6506 1AB0                                               l5562 1F20  
                                             l5570 2020                                               l5554 1EE0  
                                             l5722 2F4C                                               l5714 3022  
                                             l5490 27C0                                               l5482 279A  
                                             l5474 2776                                               l5466 2750  
                                             l5458 2728                                               l5546 2B6E  
                                             l5538 2B36                                               l5642 1D22  
                                             l5634 1CC0                                               l5626 1C7C  
                                             l5618 1C52                                               l5730 2192  
                                             l5810 2CF8                                               l5802 2C8A  
                                             l5708 2510                                               l6380 12E6  
                                             l6372 125A                                               l6364 1206  
                                             l6356 11C0                                               l6348 118E  
                                             l6460 246E                                               l6452 2450  
                                             l6444 242E                                               l6436 240A  
                                             l6428 23B6                                               l6532 1BB2  
                                             l6524 1B78                                               l6516 1B04  
                                             l6508 1AB8                                               l5564 1F82  
                                             l5556 1EE4                                               l5660 2E18  
                                             l5652 2DDC                                               l5820 3140  
                                             l5580 2E48                                               l5724 2F6E  
                                             l5716 303C                                               l5484 27B0  
                                             l5476 277E                                               l5492 27C6  
                                             l5468 2758                                               l5548 2B8C  
                                             l5644 1D32                                               l5628 1C82  
                                             l5636 1CDC                                               l5740 21F0  
                                             l5732 21A0                                               l5804 2C8A  
                                             l6390 1322                                               l6382 12F0  
                                             l6374 1284                                               l6366 1216  
                                             l6358 11D0                                               l6462 247A  
                                             l6454 245A                                               l6438 240C  
                                             l6534 1BC0                                               l6526 1B7A  
                                             l6518 1B40                                               l5558 1EF6  
                                             l5662 2E44                                               l5654 2DDC  
                                             l5822 3160                                               l5814 3126  
                                             l5590 319E                                               l5582 2E5E  
                                             l5670 2D0E                                               l5718 3042  
                                             l5830 2A10                                               l6294 32CC  
                                             l5494 27D6                                               l5486 27B8  
                                             l5478 2786                                               l5646 1D38  
                                             l5638 1CF6                                               l5742 2234  
                                             l5734 21A4                                               l5750 225E  
                                             l5726 215E                                               l5806 2C9C  
                                             l5680 24C2                                               l6392 1330  
                                             l6384 12FE                                               l6376 12BA  
                                             l6368 1232                                               l6464 248A  
                                             l6480 2BCC                                               l6472 2BA2  
                                             l6536 1BC2                                               l6528 1B7E  
                                             l5568 1FDE                                               l5656 2DEE  
                                             l5816 3126                                               l5592 319E  
                                             l5584 2E76                                               l5672 2D16  
                                             l5760 203A                                               l5840 2A98  
                                             l5832 2A1A                                               l6296 32D0  
                                             l5496 27DE                                               l5488 27BA  
                                             l5648 1D48                                               l5736 21B4  
                                             l5728 2184                                               l5808 2CA4  
                                             l5690 24E0                                               l5682 24C8  
                                             l6394 135E                                               l6386 1310  
                                             l6378 12C8                                               l6298 1046  
                                             l6466 249A                                               l6490 2C00  
                                             l6482 2BDA                                               l6474 2BAA  
                                             l5658 2E10                                               l5818 3138  
                                             l5594 31B2                                               l5586 2E90  
                                             l5578 2E48                                               l5674 2D6A  
                                             l5666 2CFC                                               l5770 2066  
                                             l5762 2042                                               l5834 2A6E  
                                             l5842 2A9A                                               l5826 29FA  
                                             l5746 224C                                               l5738 21D2  
                                             l5850 2ED8                                               l5692 24E6  
                                             l5684 24CE                                               l6388 131E  
                                             l6468 24AA                                               l6492 2C06  
                                             l6484 2BE0                                               l6476 2BBC  
                                             l5596 31BA                                               l5668 2CFC  
                                             l5780 20B2                                               l5772 2082  
                                             l5764 2062                                               l5756 2024  
                                             l5836 2A80                                               l5828 29FE  
                                             l5932 1D6A                                               l5852 2EF6  
                                             l5860 295C                                               l5694 24EC  
                                             l5686 24D4                                               l5678 24BE  
                                             l6398 1388                                               l6486 2BF6  
                                             l6478 2BC4                                               l6494 1A22  
                                             l5598 31D0                                               l5790 2118  
                                             l5782 20D0                                               l5774 2084  
                                             l5758 2028                                               l5838 2A8C  
                                             l5950 1E68                                               l5942 1DCA  
                                             l5846 2EB0                                               l5862 2974  
                                             l5870 29F6                                               l5696 24F2  
                                             l5688 24DA                                               l6488 2BFE  
                                             l6496 1A32                                               l5792 2128  
                                             l5784 20E8                                               l5776 2094  
                                             l5960 1EC8                                               l5944 1E22  
                                             l5936 1D88                                               l5848 2EBC  
                                             l5880 2AA2                                               l5864 298C  
                                             l5856 2952                                               l5698 24F8  
                                             l6498 1A40                                               l5794 2138  
                                             l5786 20F8                                               l5778 20A2  
                                             l5962 1ECC                                               l5954 1E82  
                                             l5938 1D94                                               l5970 2F20  
                                             l5890 2B24                                               l5882 2AB4  
                                             l5866 29A4                                               l5858 2956  
                                             l7650 14B0                                               l5796 2148  
                                             l5788 2108                                               l5980 320C  
                                             l5956 1EB6                                               l5948 1E3C  
                                             l5972 2F3C                                               l5964 2F00  
                                             l5884 2ABC                                               l5868 29BC  
                                             l7660 1528                                               l7652 14CE  
                                             l7644 1470                                               l5990 3182  
                                             l5798 215A                                               l5982 3218  
                                             l5958 1EC2                                               l5966 2F10  
                                             l5886 2AEE                                               l5878 2A9E  
                                             l7670 15B6                                               l7662 1546  
                                             l7654 14E6                                               l7646 1474  
                                             l5992 3194                                               l5984 3164  
                                             l5976 3200                                               l5968 2F18  
                                             l5888 2AF2                                               l7680 16A2  
                                             l7672 1608                                               l7664 1564  
                                             l7656 14F8                                               l7648 1492  
                                             l5994 319A                                               l5986 3168  
                                             l5978 3200                                               l7690 1714  
                                             l7682 16B2                                               l7674 165A  
                                             l7666 1582                                               l7658 150A  
                                             l5988 317A                                               l7780 239C  
                                             l7692 1720                                               l7684 16D0  
                                             l7676 1676                                               l7668 159C  
                                             l5998 3226                                               l7782 200A  
                                             l7694 1736                                               l7686 16EE  
                                             l7678 1692                                               l7784 2524  
                                             l7696 1746                                               l7688 1704  
                                             l7778 29D0                                               STR_1 1042  
                                             STR_4 1011                                               STR_5 1028  
                                             STR_6 103B                                               STR_7 101D  
                                             STR_8 101D                                               STR_9 1033  
                                             _LCD1 00E7                                               _LATA 0F89  
                                             _LATB 0F8A                                               _LATC 0F8B  
                                             _LATD 0F8C                                               _LATE 0F8D  
                                             u5000 2C28                                               u5001 2C24  
                                             u5010 2C3A                                               u4130 25A6  
                                             u5011 2C36                                               u4131 25A2  
                                             u5020 2C70                                               u5100 1060  
                                             u4204 22EA                                               u4220 2736  
                                             u4300 28E8                                               u4140 25B8  
                                             u5021 2C6C                                               u5101 105C  
                                             u4205 22E6                                               u4221 2732  
                                             u4301 28E4                                               u4141 25B4  
                                             u5110 1072                                               u4214 234C  
                                             u4230 2750                                               u4310 2906  
                                             u4150 25E0                                               u5111 106E  
                                             u4215 2348                                               u4231 274C  
                                             u4311 2902                                               u4151 25DC  
                                             u5200 131E                                               u5120 1082  
                                             u4240 2776                                               u4320 291C  
                                             u4160 2616                                               u5201 131A  
                                             u5121 107E                                               u4241 2772  
                                             u4321 2918                                               u4161 2612  
                                             u5210 1330                                               u5130 10C2  
                                             u4410 1FF6                                               u4250 2794  
                                             u4330 2940                                               u4170 3020  
                                             u5211 132C                                               u5131 10BE  
                                             u4411 1FF0                                               u4251 2790  
                                             u4331 293C                                               u4171 301C  
                                             u5220 135E                                               u5140 10D4  
                                             u5300 2400                                               u4420 1FF8  
                                             u4404 1FA2                                               u4180 22A0  
                                             u4260 27B0                                               u4340 2B36  
                                             u4500 1D08                                               u5221 135A  
                                             u5141 10D0                                               u4405 1F9E  
                                             u4181 229C                                               u4261 27AC  
                                             u4341 2B32                                               u4501 1D04  
                                             u5230 1374                                               u5150 10E4  
                                             u5310 242E                                               u4190 22C2  
                                             u4270 27D6                                               u4350 2B8C  
                                             u4510 1D22                                               u4430 1BE4  
                                             u5231 1370                                               u5151 10E0  
                                             u5311 242A                                               u4191 22BE  
                                             u4271 27D2                                               u4351 2B88  
                                             u4511 1D1E                                               u4431 1BDE  
                                             u5240 1388                                               u5160 111A  
                                             u5320 2442                                               u5400 1A40  
                                             u4280 28B4                                               u4360 3100  
                                             u4520 1D32                                               u4440 1BE6  
                                             u4600 2184                                               u5241 1384  
                                             u5161 1116                                               u5321 243E  
                                             u5305 23F6                                               u5401 1A3C  
                                             u4281 28B0                                               u4361 30FC  
                                             u4521 1D2E                                               u4601 2180  
                                             u5250 13A2                                               u5170 112A  
                                             u5330 246A                                               u5410 1A9C  
                                             u4370 1EF6                                               u4530 2DEE  
                                             u4290 28CE                                               u4450 1BF8  
                                             u4610 21D2                                               u5251 139E  
                                             u5171 1126                                               u5331 2466  
                                             u5411 1A98                                               u4371 1EF2  
                                             u4531 2DEA                                               u4291 28CA  
                                             u4451 1BF4                                               u4611 21CE  
                                             u5260 13EA                                               u5180 12A4  
                                             u5340 248A                                               u5420 1AF2  
                                             u4380 1F18                                               u4540 2E10  
                                             u4460 1C10                                               u4620 21F0  
                                             u4700 2AE6                                               u5261 13E6  
                                             u5341 2486                                               u5421 1AEE  
                                             u4381 1F14                                               u4541 2E0C  
                                             u4461 1C0C                                               u4621 21EC  
                                             u5270 1418                                               u5190 12FE  
                                             u5350 249A                                               u5430 1B3C  
                                             u4550 2D0E                                               u4630 203A  
                                             u4470 1C3C                                               u4710 2B14  
                                             u5271 1414                                               u5191 12FA  
                                             u5351 2496                                               u5431 1B38  
                                             u4551 2D0A                                               u4631 2036  
                                             u4471 1C38                                               u5280 1452  
                                             u5360 2BBC                                               u5440 1B5A  
                                             u4640 2094                                               u4560 303C  
                                             u4800 1EDE                                               u4480 1C52  
                                             u4720 2B24                                               u5281 144E  
                                             u5185 129A                                               u5361 2BB8  
                                             u5441 1B56                                               u4641 2090  
                                             u4561 3038                                               u4801 1EDA  
                                             u4481 1C4E                                               u4721 2B20  
                                             u4810 317A                                               u5290 23CC  
                                             u5370 2BDA                                               u5450 1B6A  
                                             u4394 1F40                                               u4570 305C  
                                             u4490 1CF6                                               u4650 2C9C  
                                             u4811 3176                                               u5291 23C8  
                                             u5371 2BD6                                               u5451 1B66  
                                             u4395 1F3C                                               u4571 3058  
                                             u4491 1CF2                                               u4651 2C98  
                                             u4707 2ADC                                               u4820 323C  
                                             u5380 2BF6                                               u5460 1B78  
                                             u4660 3138                                               u4580 2F66  
                                             u4821 3238                                               u5381 2BF2  
                                             u5461 1B74                                               u4661 3134  
                                             u4581 2F62                                               u4717 2B0A  
                                             u4830 2674                                               u5470 1BB2  
                                             u5390 1A32                                               u4590 2F88  
                                             u4670 2A10                                               u4831 2670  
                                             u5471 1BAE                                               u5391 1A2E  
                                             u7207 20B8                                               u4591 2F84  
                                             u4671 2A0C                                               u4840 2686  
                                             u5480 1BC0                                               u4760 1D84  
                                             u4680 2EF6                                               u7160 1704  
                                             u4841 2682                                               u5481 1BBC  
                                             u7217 20DA                                               u4761 1D80  
                                             u4681 2EF2                                               u7161 1700  
                                             u4850 26A8                                               u4770 1DC6  
                                             u4690 2AB4                                               u7170 1736  
                                             u4851 26A4                                               u7227 31B4  
                                             u4771 1DC2                                               u4691 2AB0  
                                             u7171 1732                                               u4860 26EA  
                                             u4780 1E38                                               u4861 26E6  
                                             u4781 1E34                                               u4790 1E7E  
                                             u4791 1E7A                                               u4960 2814  
                                             u4961 2810                                               u4970 289E  
                                             u4890 2FA8                                               u4875 26F2  
                                             u4971 289A                                               u4891 2FA4  
                                             u7187 14D8                                               u4980 30B8  
                                             u7197 209A                                               u4981 30B4  
                                             u4990 3078                                               u4991 3074  
                                             _TMR2 0FCC                               _lcd_4bit_send_string 2A9E  
                          ??_application_intialize 001A                      ??_lcd_4bit_send_enable_signal 000E  
                                             abs@a 0008                                               _dbuf 0100  
                                             _main 1470                                               _dtoa 1BD4  
                         _RB4_InterruptHandler_Low 00AB                                               _prec 0097  
                                             pad@i 0019                                               pad@p 0016  
                                             fsr0h 0FEA                                               fsr1h 0FE2  
                                             indf0 0FEF                                               fsr2h 0FDA  
                                             fsr0l 0FE9                                               indf1 0FE7  
                                             indf2 0FDF                                               fsr1l 0FE1  
                                             pad@w 001B                                               fsr2l 0FD9  
                      select_result_format@ADC_obj 0002                                               btemp 007E  
                         _RB7_InterruptHandler_Low 009F                                               prodh 0FF4  
                                             prodl 0FF3                                               start 000E  
                                     ___param_bank 0000                              _lcd_4bit_send_command 2CFC  
                           dc_motor_initialize@ret 0012                                              ??_abs 000A  
                             _gpio_pin_write_logic 228A                     lcd_4bit_send_string_pos@column 001E  
                                            ??_pad 0018                                   __end_of_INT0_ISR 32EA  
                                 __end_of_INT1_ISR 32E6                                   __end_of_INT2_ISR 32E2  
                                    ___fltol@sign1 0031                                              ?_main 0001  
                                            ?_dtoa 001D                                    __end_of___awdiv 27E8  
                                            _EEADR 0FA9                                              STR_10 1033  
                                  __end_of___awmod 2952                                    __end_of___flmul 1470  
                                  __end_of___fltol 24BC                                    ___awdiv@divisor 0004  
                                  __end_of___lwdiv 2C16                                              i2l944 32E8  
                                            i2l954 32E0                                              i2l892 32DC  
                                  ___awdiv@counter 0006                                              i2l949 32E4  
                                            i2l965 32B0                                              i2l887 32D8  
                                            i2l976 3296                                              i2l987 327C  
                                            i2l998 3262                                              _RCREG 0FAE  
                              relay_turn_off@F3046 0067                                       vfpfcnvrt@fmt 002C  
                                            _TMR0H 0FD7                                              _TMR1H 0FCF  
                                            _TMR0L 0FD6                                              _TMR1L 0FCE  
                                            _TMR3H 0FB3                                              _TMR3L 0FB2  
                                            _SPBRG 0FAF                                              _PORTA 0F80  
                                            _PORTB 0F81                                              _PORTC 0F82  
                                            _PORTD 0F83                                              _PORTE 0F84  
                                            _TRISA 0F92                                              _TRISB 0F93  
                                            _TRISC 0F94                                              _TRISD 0F95  
                                            _TRISE 0F96                                              _TXREG 0FAD  
                        lcd_4bit_set_cursor@column 0017                                 _lm35_res_1_Celsius 0063  
                               _lm35_res_2_Celsius 0061                                              _flags 0065  
                             _ADC_Start_Conversion 3226                                              _fputc 2594  
                                            _fputs 2FDE                                              pad@fp 0012  
                                            _width 0095                                              _putch 32EA  
                                            dtoa@d 001F                                              dtoa@i 0027  
                                            dtoa@p 0023                                              dtoa@s 0029  
                                            dtoa@w 0025                              ?_lcd_4bit_send_string 0014  
                                            tablat 0FF5                                              ttemp5 007F  
                                            ttemp6 0082                                              ttemp7 0086  
                                            status 0FD8                                              wtemp8 007F  
                                  __end_of_sprintf 2F4C                                    ??_lcd_send_4bit 000F  
                                  __initialization 2D6E                        ADC_Start_Conversion@ADC_obj 0002  
                                     __end_of_main 175A                                       __end_of_dtoa 1D6A  
                            ?_gpio_pin_write_logic 0002                                      _lat_registers 00D3  
                      __end_of_dc_motor_initialize 3164                                             ??_main 005F  
                                           ??_dtoa 0021                                      __activetblptr 0003  
                                 led_turn_on@F3047 006C                                          ??_RB4_ISR 0001  
                                        ??_RB5_ISR 0001                                          ??_RB6_ISR 0001  
                                        ??_RB7_ISR 0001                              ?_ADC_Start_Conversion 0002  
                                           ?_fputc 0002                                             ?_fputs 000B  
                                           _ADRESH 0FC4                                             _EEADRH 0FAA  
                                           _ADRESL 0FC3                                             _EEDATA 0FA8  
                                           _CCPR1L 0FBE                                             _CCPR2L 0FBB  
                                           _EECON2 0FA7                                   ___awdiv@dividend 0002  
                                           ?_putch 0001                                             i2l1161 1844  
                                           i2l1153 177C                                             i2l1171 1998  
                                           i2l1163 1888                                             i2l1155 179C  
                                           i2l1173 19DC                                             i2l1165 18CC  
                                           i2l1157 17BC                                             i2l1175 19FC  
                                           i2l1167 1910                                             i2l1159 1800  
                                           i2l1169 1954                                             i2l1178 1A1C  
                                           i2l6210 32B0                                             i2l6202 329A  
                                           i2l6204 329C                                             i2l6230 3266  
                                           i2l6224 3296                                             i2l6216 3280  
                                           i2l6232 3268                                             i2l6218 3282  
                                           i2l6172 32D6                                             i2l6252 3262  
                                           i2l6244 324C                                             i2l7300 17F6  
                                           i2l6190 32E2                                             i2l6238 327C  
                                           i2l6246 324E                                             i2l7310 183A  
                                           i2l7302 17FA                                             i2l6184 32E6  
                                           i2l7320 187E                                             i2l7312 183E  
                                           i2l7304 180E                                             i2l6178 32DA  
                                           i2l7330 18C2                                             i2l7322 1882  
                                           i2l7314 1852                                             i2l7306 181C  
                                           i2l6196 32DE                                             i2l7340 1906  
                                           i2l7332 18C6                                             i2l7324 1896  
                                           i2l7316 1860                                             i2l7308 182A  
                                           i2l7350 194A                                             i2l7342 190A  
                                           i2l7334 18DA                                             i2l7326 18A4  
                                           i2l7318 186E                                             i2l7360 198E  
                                           i2l7352 194E                                             i2l7344 191E  
                                           i2l7336 18E8                                             i2l7328 18B2  
                                           i2l7280 175C                                             i2l7370 19D2  
                                           i2l7362 1992                                             i2l7354 1962  
                                           i2l7346 192C                                             i2l7338 18F6  
                                           i2l7290 17AA                                             i2l7282 176A  
                                           i2l7380 1A18                                             i2l7372 19D6  
                                           i2l7364 19A6                                             i2l7356 1970  
                                           i2l7348 193A                                             i2l7292 17B8  
                                           i2l7284 1778                                             i2l7374 19EA  
                                           i2l7366 19B4                                             i2l7358 197E  
                                           i2l7294 17CA                                             i2l7286 178A  
                                           i2l7376 19F8                                             i2l7368 19C2  
                                           i2l7296 17D8                                             i2l7288 1798  
                                           i2l7378 1A0A                                             i2l7298 17E6  
                                           _SPBRGH 0FB0                                             _SSPADD 0FC8  
                                           _SSPBUF 0FC9                                   __end_of___xxtofl 1BD4  
                 __end_of_lcd_4bit_send_string_pos 2FDE                                _ADC_Selsect_Channel 3164  
                                 ??_ADC_initialize 0007                             ?_lcd_4bit_send_command 0010  
                                     vfprintf@cfmt 003E                                          ??___awdiv 0006  
                                        ??___awmod 0006                                          ??___flmul 0018  
                                        ??___fltol 002D         ADC_Get_Conversion_Result@Conversion_Result 0004  
                                        ??___lwdiv 0006                                         _Resultstr1 00C2  
                                       _Resultstr2 00BB                                             _memset 1D6A  
                                           clear_0 2DB4                                             clear_1 2DC0  
                                           clear_2 2DCC                                   ___awdiv@quotient 0008  
                                  ___awmod@divisor 0004                                             isa$std 0001  
                                   _Timer0_preload 009D                                   lcd_send_4bit@lcd 000C  
                                  ___awmod@counter 0006                                             pad@buf 0014  
                                 lcd_send_4bit@ret 000F                                             dtoa@fp 001D  
                                   _Timer1_preload 009B            gpio_pin_direction_intialize@_pin_config 0002  
      _I2C_Report_Receive_Overflow_InterruptHandle 00B5                                             fputc@c 0002  
                                   _Timer2_preload 0066                                             fputs@c 000F  
                                           fputs@i 0010                                       __pdataCOMRAM 0072  
                                           fputs@s 000B                                     _Timer3_preload 0099  
                             ?_ADC_Selsect_Channel 0005                                       __mediumconst 0000  
                                           tblptrh 0FF7                                             tblptrl 0FF6  
                                           tblptru 0FF8                __end_of_ADC_Get_Conversion_Blocking 2C8A  
                      _ADC_Get_Conversion_Blocking 2C16                                             putch@c 0001  
                                 __end_of_vfprintf 2F00                             ??_lcd_4bit_send_string 0018  
                                        ??_sprintf 0048                            ADC_Start_Conversion@ret 0004  
                     __end_of_select_result_format 3066                                       ___xxtofl@arg 000C  
                                     ___xxtofl@exp 000B                                       ___xxtofl@val 0002  
                          _convert_uint8_to_string 27E8                                         __accesstop 0080  
                          __end_of__initialization 2DD2                                          ?_INT0_ISR 0001  
                                        ?_INT1_ISR 0001                                          ?_INT2_ISR 0001  
                                       _lm35_res_1 0070                                         _lm35_res_2 006E  
                    ??_ADC_Get_Conversion_Blocking 0010                                      ___rparam_used 0001  
                                       ___fltol@f1 0029                        dc_motor_move_left@_dc_motor 000C  
                       convert_uint8_to_string@ret 005D                         convert_uint8_to_string@str 0056  
                          _lcd_4bit_send_char_data 2C8A                                  RB5_ISR@RB5_Source 0001  
                           ??_gpio_pin_write_logic 0005                                     __pcstackCOMRAM 0001  
                       _I2C_DefaultInterruptHandle 00B7                                       __pidataBANK0 31D4  
                                    __end_of_fputc 265E                                      __end_of_fputs 3022  
                                    __end_of_putch 32EC                           lcd_4bit_send_command@lcd 0010  
                         lcd_4bit_send_command@ret 0013                              ??_ADC_Selsect_Channel 0008  
                           ??_ADC_Start_Conversion 0004                         ?_ADC_Get_Conversion_Result 0002  
                       ADC_Selsect_Channel@ADC_obj 0005                                            ??_fputc 0006  
                                          ??_fputs 000F                            lcd_4bit_send_string@lcd 0014  
                          lcd_4bit_send_string@ret 0018                            lcd_4bit_send_string@str 0016  
                                          ??_putch 0002                                         __pbssBANK0 0080  
                                       __pbssBANK1 0100                              _INT0_InterruptHandler 00B3  
                                       ??_INT0_ISR 0001                                         ??_INT1_ISR 0001  
                                       ??_INT2_ISR 0001                      __end_of_application_intialize 32D6  
                                led_turn_off@F3052 006B                                            ?_memset 0002  
                                RB7_ISR@RB7_Source 0001                                            _RB4_ISR 3298  
                                          _RB5_ISR 327E                                            _RB6_ISR 3264  
                                          _RB7_ISR 324A                                          ?___xxtofl 0002  
                        ?_lcd_4bit_send_string_pos 001B                                      ?_MSSP_I2C_ISR 0001  
                        _RB6_InterruptHandler_High 00A5                               led_turn_toggle@F3057 006A  
                       ADC_Selsect_Channel@channel 0007                          ??_convert_uint8_to_string 0058  
                __end_of_ADC_Get_Conversion_Result 2724                                         _btn_values 1001  
                                   _tris_registers 00DD                          ??_lcd_4bit_send_char_data 0013  
                         _RB6_InterruptHandler_Low 00A3                                  ??_MSSP_I2C_BC_ISR 0001  
                                          __Hparam 0000                                            __Lparam 0000  
                            ADC_initialize@ADC_obj 0005                                _ecu_layer_intialize 3200  
                            dc_motor_move_left@ret 000E                                            ___awdiv 2724  
                                          ___awmod 28A2                                            ___flmul 1046  
                                          ___fltol 23B6                                            ___lwdiv 2BA2  
                                        ?_vfprintf 0038                                       __psmallconst 1000  
                       __end_of_gpio_pin_intialize 2E48                                            __pcinit 2D6E  
                             _select_result_format 3022                                            __ramtop 1000  
                                          __ptext0 1470                                            __ptext1 2F96  
                                          __ptext2 2952                                            __ptext3 2A9E  
                                          __ptext4 2C8A                                            __ptext5 3066  
                                          __ptext6 30A6                                            __ptext7 27E8  
                                          __ptext8 2F00                                            __ptext9 2EB0  
                                        _T0CONbits 0FD5                                          _T1CONbits 0FCD  
                                   ??_MSSP_I2C_ISR 0001                                          _T2CONbits 0FCA  
                                       ??___xxtofl 0006                                          _T3CONbits 0FB1  
                                 ___awmod@dividend 0002                               ?_ecu_layer_intialize 0001  
                                          _sprintf 2F00                                     __pintcode_body 175A  
                             end_of_initialization 2DD2                             ADC_Selsect_Channel@ret 0009  
                                          fputc@fp 0004                                            memset@c 0004  
                                          memset@k 000A                                            memset@n 0006  
                                          memset@s 000C                                            int_func 175A  
                                          fputs@fp 000D                            ??_lcd_4bit_send_command 0013  
                            gpio_pin_intialize@ret 000F                                      _dc_motor_stop 3066  
                                ADC_initialize@ret 0008                                  __end_of_vfpfcnvrt 228A  
                                        _RCSTAbits 0FAB                              __end_of_lcd_send_4bit 2EB0  
                  __end_of_convert_uint8_to_string 28A2                                            postdec1 0FE5  
                                          postdec2 0FDD                                            postinc0 0FEE  
                                          postinc1 0FE6                                            postinc2 0FDE  
                                 vfpfcnvrt@convarg 0032                                         ??_vfprintf 003E  
                            ?_select_result_format 0002                                _lcd_4bit_initialize 2024  
                             lcd_send_4bit@command 000E                    __end_of_lcd_4bit_send_char_data 2CFC  
                            _INT1_InterruptHandler 00B1                                          _PORTBbits 0F81  
                                 _InterruptManager 0008                      gpio_pin_intialize@_pin_config 000C  
                       lcd_4bit_send_char_data@lcd 0010                              ??_ecu_layer_intialize 001A  
                       lcd_4bit_send_char_data@ret 0013               __end_of_gpio_pin_direction_intialize 2024  
                     _gpio_pin_direction_intialize 1EE0                                      ___xxtofl@sign 000A  
                                        _TRISCbits 0F94                               ?_lcd_4bit_initialize 0014  
                   convert_uint8_to_string@Tempstr 0058                                        ___flmul@grs 001D  
                                      _CCP1CONbits 0FBD                                        _CCP2CONbits 0FBA  
                                        _TXSTAbits 0FAC                       __end_of_mcal_layer_intialize 32C0  
                                   ?_dc_motor_stop 000C                                _lcd_4bit_set_cursor 2952  
                               relay_turn_on@F3041 0068                        lcd_4bit_send_string_pos@lcd 001B  
                      lcd_4bit_send_string_pos@ret 0021                        lcd_4bit_send_string_pos@row 001D  
                      lcd_4bit_send_string_pos@str 001F                      convert_uint32_to_string@F3202 0080  
                    convert_uint16_to_string@F3195 008B                                        vfpfcnvrt@ap 002E  
                                      vfpfcnvrt@cp 0036                                        vfpfcnvrt@fp 002A  
                                      _BAUDCONbits 0FB8                                      __pidataCOMRAM 32C0  
          adc_input_channel_port_configure@channel 0004                                     __end_of_memset 1EE0  
                     ?_configure_voltage_reference 0002                                start_initialization 2D6E  
                     ?_lcd_4bit_send_enable_signal 000C                               ?_lcd_4bit_set_cursor 0014  
                                      __end_of_abs 3126   MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3100 0073  
MSSP_SPI_Master_Mode_GPIO_PIN_Configurations@F3085 0079   MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3094 0076  
MSSP_SPI_Master_Mode_GPIO_PIN_Configurations@F3087 0078   MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3096 0075  
MSSP_SPI_Master_Mode_GPIO_PIN_Configurations@F3089 0077   MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3098 0074  
                                      __end_of_pad 2BA2                      ?_gpio_pin_direction_intialize 0002  
                      ??_ADC_Get_Conversion_Result 0006                              ??_lcd_4bit_initialize 0016  
                           dc_motor_stop@_dc_motor 000C                               __end_of_MSSP_I2C_ISR 32DA  
                       __end_of_dc_motor_move_left 30E6                                        vfprintf@fmt 003A  
                           ??_select_result_format 0004                                        __pdataBANK0 00C9  
                     convert_uint8_to_string@F3188 0091                        __end_of_ADC_Selsect_Channel 319E  
                                      _dc_motor_01 00F3                                        _dc_motor_02 00F1  
                                         ??_memset 0008                                         memset@dest 0002  
                     lcd_4bit_send_command@command 0012                                   dc_motor_stop@ret 000E  
               convert_uint8_to_string@DataCounter 005E                                           ?_RB4_ISR 0001  
                                         ?_RB5_ISR 0001                                           ?_RB6_ISR 0001  
                                         ?_RB7_ISR 0001                                          ___flmul@a 0014  
                                        ___flmul@b 0010                                        __pbssCOMRAM 0061  
                            ??_lcd_4bit_set_cursor 0018        _I2C_Report_Write_Collision_InterruptHandler 00B9  
                    ??_configure_voltage_reference 0004                       convert_uint8_to_string@value 005C  
                                  _MSSP_I2C_BC_ISR 32DA                              _INT2_InterruptHandler 00AF  
                  gpio_pin_direction_intialize@ret 000A                                    ??_dc_motor_stop 000E  
               configure_voltage_reference@ADC_obj 0002                     ADC_Get_Conversion_Blocking@ret 0010  
                                 ___lwdiv@dividend 0002                              _application_intialize 32CC  
                                        _dtoa$4404 0021                          _ADC_Get_Conversion_Result 265E  
                                        __pintcode 0008           __end_of_adc_input_channel_port_configure 2594  
               ??_adc_input_channel_port_configure 0002                  ?_adc_input_channel_port_configure 0001  
                 _adc_input_channel_port_configure 24BC                    gpio_pin_write_logic@_pin_config 0002  
                                         ?___awdiv 0002                                           ?___awmod 0002  
                                         ?___flmul 0010                                           ?___fltol 0029  
                                         ?___lwdiv 0002                          gpio_pin_write_logic@logic 0004  
                                      __smallconst 1000                          _RB4_InterruptHandler_High 00AD  
                             _mcal_layer_intialize 32B2                          _RB7_InterruptHandler_High 00A1  
                                 ___lwdiv@quotient 0006                                           ?_sprintf 0040  
                               _gpio_pin_intialize 2DDC                     ??_gpio_pin_direction_intialize 0004  
                                         _INT0_ISR 32E6                                           _INT1_ISR 32E2  
                                         _INT2_ISR 32DE                           _RB5_InterruptHandler_Low 00A7  
                                         _RB4_Flag 007D                                           _RB5_Flag 007C  
                                         _RB6_Flag 007B                                           _RB7_Flag 007A  
                                RB4_ISR@RB4_Source 0001                                ?_gpio_pin_intialize 000C  
                         __end_of_InterruptManager 1A20                                           _PIE1bits 0F9D  
                                         _PIE2bits 0FA0                      __end_of_lcd_4bit_send_command 2D6E  
                                         i2u503_40 32AC                                           i2u503_41 32A8  
                                         i2u504_40 3292                                           i2u504_41 328E  
                                         i2u505_40 3278                                           i2u505_41 3274  
                                         _PIR1bits 0F9E                                           i2u506_40 325E  
                                         i2u506_41 325A                                           _PIR2bits 0FA1  
                                         i2u640_40 176A                                           i2u640_41 1766  
                                         i2u641_40 1778                                           i2u641_41 1774  
                                         i2u650_40 180E                                           i2u642_40 178A  
                                         i2u650_41 180A                                           i2u642_41 1786  
                                         i2u651_40 181C                                           i2u643_40 1798  
                                         i2u651_41 1818                                           i2u643_41 1794  
                                         i2u660_40 18B2                                           i2u652_40 182A  
                                         i2u644_40 17AA                                           i2u660_41 18AE  
                                         i2u652_41 1826                                           i2u644_41 17A6  
                                         i2u661_40 18C2                                           i2u653_40 183A  
                                         i2u645_40 17B8                                           i2u661_41 18BE  
                                         i2u653_41 1836                                           i2u645_41 17B4  
                                         i2u670_40 1962                                           i2u662_40 18DA  
                                         i2u654_40 1852                                           i2u646_40 17CA  
                                         i2u670_41 195E                                           i2u662_41 18D6  
                                         i2u654_41 184E                                           i2u646_41 17C6  
                                         i2u671_40 1970                                           i2u663_40 18E8  
                                         i2u655_40 1860                                           i2u647_40 17D8  
                                         i2u671_41 196C                                           i2u663_41 18E4  
                                         i2u655_41 185C                                           i2u647_41 17D4  
                                         i2u680_40 1A0A                                           i2u672_40 197E  
                                         i2u664_40 18F6                                           i2u656_40 186E  
                                         i2u648_40 17E6                                           i2u680_41 1A06  
                                         i2u672_41 197A                                           i2u664_41 18F2  
                                         i2u656_41 186A                                           i2u648_41 17E2  
                                         i2u681_40 1A18                                           i2u673_40 198E  
                                         i2u665_40 1906                                           i2u657_40 187E  
                                         i2u649_40 17F6                                           i2u681_41 1A14  
                                         i2u673_41 198A                                           i2u665_41 1902  
                                         i2u657_41 187A                                           i2u649_41 17F2  
                                         i2u674_40 19A6                                           i2u666_40 191E  
                                         i2u658_40 1896                                           i2u674_41 19A2  
                                         i2u666_41 191A                                           i2u658_41 1892  
                                         i2u675_40 19B4                                           i2u667_40 192C  
                                         i2u659_40 18A4                                           i2u675_41 19B0  
                                         i2u667_41 1928                                           i2u659_41 18A0  
                                         i2u676_40 19C2                                           i2u668_40 193A  
                                         i2u676_41 19BE                                           i2u668_41 1936  
                                         i2u677_40 19D2                                           i2u669_40 194A  
                                         i2u677_41 19CE                                           i2u669_41 1946  
                                         i2u678_40 19EA                                           i2u678_41 19E6  
                                         i2u679_40 19F8                                           i2u679_41 19F4  
                              _dc_motor_initialize 3126                       dc_motor_initialize@_dc_motor 0010  
                                        _vfpfcnvrt 215E                           _lcd_4bit_send_string_pos 2F96  
                                       _ADCON0bits 0FC2                                         _ADCON1bits 0FC1  
                                       _ADCON2bits 0FC0                            __end_of_MSSP_I2C_BC_ISR 32DE  
                             ??_gpio_pin_intialize 000E                           ?_convert_uint8_to_string 0056  
                            ?_mcal_layer_intialize 0001       ADC_Get_Conversion_Blocking@Conversion_Result 000E  
                             ?_dc_motor_initialize 0010                            gpio_pin_write_logic@ret 000B  
                     ?_ADC_Get_Conversion_Blocking 000B                                        _INTCON2bits 0FF1  
                                      _INTCON3bits 0FF0                           ?_lcd_4bit_send_char_data 0010  
                                        copy_data0 2D82                                          copy_data1 2DA2  
                                       _EECON1bits 0FA6                             ?_application_intialize 0001  
                                         __Hrparam 0000                                         vfprintf@ap 003C  
                                         __Lrparam 0000                                         vfprintf@fp 0038  
                                RB6_ISR@RB6_Source 0001                             lcd_4bit_set_cursor@lcd 0014  
                      __end_of_ecu_layer_intialize 3226                             lcd_4bit_set_cursor@ret 001A  
                                       ?_vfpfcnvrt 002A                             lcd_4bit_set_cursor@row 0016  
                               __end_of_btn_values 1011                                     _ADC_initialize 29FA  
                                       sprintf@fmt 0042                                           ___xxtofl 1A20  
                                     _MSSP_I2C_ISR 32D6                              ??_dc_motor_initialize 0012  
                                  ___lwdiv@divisor 0004                                    ___lwdiv@counter 0008  
                                         __ptext10 215E                                           __ptext11 1BD4  
                                         __ptext20 32CC                                           __ptext12 2B28  
                                         __ptext21 32B2                                           __ptext13 2FDE  
                                         __ptext30 3126                                           __ptext22 29FA  
                                         __ptext14 2594                                           __ptext31 2DDC  
                                         __ptext23 3022                                           __ptext15 32EA  
                                         __ptext40 3164                                           __ptext32 228A  
                                         __ptext24 2F4C                                           __ptext16 30E6  
                                         __ptext41 24BC                                           __ptext33 1EE0  
                                         __ptext25 3200                                           __ptext17 28A2  
                                         __ptext50 32DE                                           __ptext42 265E  
                                         __ptext34 1A20                                           __ptext26 2024  
                                         __ptext18 2724                                           __ptext51 32E2  
                                         __ptext35 2BA2                                           __ptext27 2CFC  
                                         __ptext19 1D6A                                           __ptext52 32E6  
                                         __ptext44 324A                                           __ptext36 23B6  
                                         __ptext28 2E48                                           __ptext45 3264  
                                         __ptext37 1046                                           __ptext29 319E  
                                         __ptext46 327E                                           __ptext38 2C16  
                                         __ptext47 3298                                           __ptext39 3226  
                                         __ptext48 32D6                                           __ptext49 32DA  
               ADC_Get_Conversion_Blocking@ADC_obj 000B                                           isa$xinst 0000  
                                         int$flags 007E                   ADC_Get_Conversion_Result@ADC_obj 0002  
                     __end_of_lcd_4bit_send_string 2B28                                           _vfprintf 2EB0  
                           __end_of_ADC_initialize 2A9E                                   ?_MSSP_I2C_BC_ISR 0001  
                               _dc_motor_move_left 30A6                             ??_mcal_layer_intialize 0009  
                                       _INTCONbits 0FF2                        __end_of_lcd_4bit_initialize 215E  
                     __end_of_gpio_pin_write_logic 23B6                                ?_dc_motor_move_left 000C  
                                         intlevel2 0000                                          sprintf@ap 0048  
                   lcd_4bit_send_enable_signal@lcd 000C                     lcd_4bit_send_enable_signal@ret 000E  
               ADC_Get_Conversion_Blocking@channel 000D                       __end_of_ADC_Start_Conversion 324A  
                             ??_dc_motor_move_left 000E                                      _lcd_send_4bit 2E48  
                                      ??_vfpfcnvrt 0030                                    ?_ADC_initialize 0005  
                      __end_of_lcd_4bit_set_cursor 29FA                                           sprintf@f 004A  
                                         sprintf@s 0040                                     _port_registers 00C9  
                                      _SSPCON1bits 0FC6                                        _SSPCON2bits 0FC5  
                         lcd_4bit_initialize@count 0018                        lcd_4bit_send_char_data@data 0012  
                                ?_InterruptManager 0001                              __end_of_dc_motor_stop 30A6  
                       ??_lcd_4bit_send_string_pos 0021                             lcd_4bit_initialize@lcd 0014  
                           lcd_4bit_initialize@ret 0019  
